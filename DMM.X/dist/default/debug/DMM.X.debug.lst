

Microchip MPLAB XC8 Assembler V2.41 build 20230208172133 
                                                                                               Mon Apr 08 02:38:44 2024

Microchip MPLAB XC8 C Compiler v2.41 (Free license) build 20230208172133 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	text19,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	text21,global,reloc=2,class=CODE,delta=1
    36                           	psect	text22,global,reloc=2,class=CODE,delta=1
    37                           	psect	text23,global,reloc=2,class=CODE,delta=1
    38                           	psect	text24,global,reloc=2,class=CODE,delta=1
    39                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    42                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    43                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text32,global,reloc=2,class=CODE,delta=1
    47                           	psect	text33,global,reloc=2,class=CODE,delta=1
    48                           	psect	text34,global,reloc=2,class=CODE,delta=1
    49                           	psect	text35,global,reloc=2,class=CODE,delta=1
    50                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    51                           	psect	text37,global,reloc=2,class=CODE,delta=1
    52                           	psect	text38,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1
    65                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    66                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    67                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    68                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    69   000000                     
    70                           ; Generated 23/03/2023 GMT
    71                           ; 
    72                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    73                           ; All rights reserved.
    74                           ; 
    75                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    76                           ; 
    77                           ; Redistribution and use in source and binary forms, with or without modification, are
    78                           ; permitted provided that the following conditions are met:
    79                           ; 
    80                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    81                           ;        conditions and the following disclaimer.
    82                           ; 
    83                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    84                           ;        of conditions and the following disclaimer in the documentation and/or other
    85                           ;        materials provided with the distribution. Publication is not required when
    86                           ;        this file is used in an embedded application.
    87                           ; 
    88                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    89                           ;        software without specific prior written permission.
    90                           ; 
    91                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    92                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    93                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    94                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    95                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    96                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    97                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    98                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    99                           ; 
   100                           ; 
   101                           ; Code-generator required, PIC18F4620 Definitions
   102                           ; 
   103                           ; SFR Addresses
   104   000000                     
   105                           	psect	idataCOMRAM
   106   00455C                     __pidataCOMRAM:
   107                           	callstack 0
   108                           
   109                           ;initializer for _flag_7
   110   00455C  01                 	db	1
   111                           
   112                           ;initializer for _flag_6
   113   00455D  01                 	db	1
   114                           
   115                           ;initializer for _flag_5
   116   00455E  01                 	db	1
   117                           
   118                           ;initializer for _flag_4
   119   00455F  01                 	db	1
   120                           
   121                           	psect	idataBANK0
   122   00445A                     __pidataBANK0:
   123                           	callstack 0
   124                           
   125                           ;initializer for _PORT_REG
   126   00445A  80                 	db	128
   127   00445B  0F                 	db	15
   128   00445C  81                 	db	129
   129   00445D  0F                 	db	15
   130   00445E  82                 	db	130
   131   00445F  0F                 	db	15
   132   004460  83                 	db	131
   133   004461  0F                 	db	15
   134   004462  84                 	db	132
   135   004463  0F                 	db	15
   136                           
   137                           ;initializer for _LAT_REG
   138   004464  89                 	db	137
   139   004465  0F                 	db	15
   140   004466  8A                 	db	138
   141   004467  0F                 	db	15
   142   004468  8B                 	db	139
   143   004469  0F                 	db	15
   144   00446A  8C                 	db	140
   145   00446B  0F                 	db	15
   146   00446C  8D                 	db	141
   147   00446D  0F                 	db	15
   148                           
   149                           ;initializer for _TRIS_REG
   150   00446E  92                 	db	146
   151   00446F  0F                 	db	15
   152   004470  93                 	db	147
   153   004471  0F                 	db	15
   154   004472  94                 	db	148
   155   004473  0F                 	db	15
   156   004474  95                 	db	149
   157   004475  0F                 	db	15
   158   004476  96                 	db	150
   159   004477  0F                 	db	15
   160                           
   161                           ;initializer for _ADC_Pin
   162   004478  00                 	db	0
   163   004479  00                 	db	0
   164   00447A  00                 	db	0
   165   00447B  00                 	db	0
   166   00447C  00                 	db	0
   167   00447D  05                 	db	5
   168   00447E  05                 	db	5
   169   00447F  01                 	db	1
   170                           
   171                           ;initializer for _lcd
   172   004480  19                 	db	25
   173   004481  18                 	db	24
   174   004482  10                 	db	16
   175   004483  11                 	db	17
   176   004484  12                 	db	18
   177   004485  13                 	db	19
   178   000000                     _INTCON2bits	set	4081
   179   000000                     _ADRESL	set	4035
   180   000000                     _ADRESH	set	4036
   181   000000                     _ADCON1bits	set	4033
   182   000000                     _RCONbits	set	4048
   183   000000                     _ADCON0bits	set	4034
   184   000000                     _TRISD	set	3989
   185   000000                     _TRISC	set	3988
   186   000000                     _TRISB	set	3987
   187   000000                     _TRISE	set	3990
   188   000000                     _LATCbits	set	3979
   189   000000                     _LATAbits	set	3977
   190   000000                     _TRISAbits	set	3986
   191   000000                     _TRISDbits	set	3989
   192   000000                     _TRISBbits	set	3987
   193   000000                     _PORTDbits	set	3971
   194   000000                     _PORTBbits	set	3969
   195   000000                     _INT2	set	31754
   196   000000                     _INT1	set	31753
   197   000000                     _INT0	set	31752
   198   000000                     _PORTE	set	3972
   199   000000                     _PORTD	set	3971
   200   000000                     _PORTC	set	3970
   201   000000                     _PORTB	set	3969
   202   000000                     _PORTA	set	3968
   203   000000                     _LATA	set	3977
   204   000000                     _TRISA	set	3986
   205   000000                     _PIE1bits	set	3997
   206   000000                     _PIR1bits	set	3998
   207   000000                     _ADCON2bits	set	4032
   208   000000                     _IPR1bits	set	3999
   209   000000                     _INTCON3bits	set	4080
   210   000000                     _INTCONbits	set	4082
   211   000000                     _LATE	set	3981
   212   000000                     _LATD	set	3980
   213   000000                     _LATC	set	3979
   214   000000                     _LATB	set	3978
   215                           
   216                           	psect	smallconst
   217   001000                     __psmallconst:
   218                           	callstack 0
   219   001000  00                 	db	0
   220   001001                     STR_1:
   221   001001  25                 	db	37
   222   001002  69                 	db	105	;'i'
   223   001003  00                 	db	0
   224   001004  00                 	db	0	; dummy byte at the end
   225   000000                     
   226                           ; #config settings
   227                           
   228                           	psect	cinit
   229   00431E                     __pcinit:
   230                           	callstack 0
   231   00431E                     start_initialization:
   232                           	callstack 0
   233   00431E                     __initialization:
   234                           	callstack 0
   235                           
   236                           ; Initialize objects allocated to BANK0 (44 bytes)
   237                           ; load TBLPTR registers with __pidataBANK0
   238   00431E  0E5A               	movlw	low __pidataBANK0
   239   004320  6EF6               	movwf	tblptrl,c
   240   004322  0E44               	movlw	high __pidataBANK0
   241   004324  6EF7               	movwf	tblptrh,c
   242   004326  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   243   004328  6EF8               	movwf	tblptru,c
   244   00432A  EE00  F080         	lfsr	0,__pdataBANK0
   245   00432E  EE10 F02C          	lfsr	1,44
   246   004332                     copy_data0:
   247   004332  0009               	tblrd		*+
   248   004334  CFF5 FFEE          	movff	tablat,postinc0
   249   004338  50E5               	movf	postdec1,w,c
   250   00433A  50E1               	movf	fsr1l,w,c
   251   00433C  E1FA               	bnz	copy_data0
   252                           
   253                           ; Initialize objects allocated to COMRAM (4 bytes)
   254                           ; load TBLPTR registers with __pidataCOMRAM
   255   00433E  0E5C               	movlw	low __pidataCOMRAM
   256   004340  6EF6               	movwf	tblptrl,c
   257   004342  0E45               	movlw	high __pidataCOMRAM
   258   004344  6EF7               	movwf	tblptrh,c
   259   004346  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   260   004348  6EF8               	movwf	tblptru,c
   261   00434A  EE00  F07A         	lfsr	0,__pdataCOMRAM
   262   00434E  EE10 F004          	lfsr	1,4
   263   004352                     copy_data1:
   264   004352  0009               	tblrd		*+
   265   004354  CFF5 FFEE          	movff	tablat,postinc0
   266   004358  50E5               	movf	postdec1,w,c
   267   00435A  50E1               	movf	fsr1l,w,c
   268   00435C  E1FA               	bnz	copy_data1
   269                           
   270                           ; Clear objects allocated to BANK0 (28 bytes)
   271   00435E  EE00  F0AC         	lfsr	0,__pbssBANK0
   272   004362  0E1C               	movlw	28
   273   004364                     clear_0:
   274   004364  6AEE               	clrf	postinc0,c
   275   004366  06E8               	decf	wreg,f,c
   276   004368  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to COMRAM (4 bytes)
   279   00436A  6A79               	clrf	(__pbssCOMRAM+3)& (0+255),c
   280   00436C  6A78               	clrf	(__pbssCOMRAM+2)& (0+255),c
   281   00436E  6A77               	clrf	(__pbssCOMRAM+1)& (0+255),c
   282   004370  6A76               	clrf	__pbssCOMRAM& (0+255),c
   283   004372                     end_of_initialization:
   284                           	callstack 0
   285   004372                     __end_of__initialization:
   286                           	callstack 0
   287   004372  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   288   004374  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   289   004376  0100               	movlb	0
   290   004378  EF03  F008         	goto	_main	;jump to C main() function
   291                           
   292                           	psect	bssCOMRAM
   293   000076                     __pbssCOMRAM:
   294                           	callstack 0
   295   000076                     _adc_call:
   296                           	callstack 0
   297   000076                     	ds	2
   298   000078                     _ADC_Val:
   299                           	callstack 0
   300   000078                     	ds	2
   301                           
   302                           	psect	dataCOMRAM
   303   00007A                     __pdataCOMRAM:
   304                           	callstack 0
   305   00007A                     _flag_7:
   306                           	callstack 0
   307   00007A                     	ds	1
   308   00007B                     _flag_6:
   309                           	callstack 0
   310   00007B                     	ds	1
   311   00007C                     _flag_5:
   312                           	callstack 0
   313   00007C                     	ds	1
   314   00007D                     _flag_4:
   315                           	callstack 0
   316   00007D                     	ds	1
   317                           
   318                           	psect	bssBANK0
   319   0000AC                     __pbssBANK0:
   320                           	callstack 0
   321   0000AC                     	ds	6
   322   0000B2                     _rb7_call_low:
   323                           	callstack 0
   324   0000B2                     	ds	2
   325   0000B4                     _rb7_call_high:
   326                           	callstack 0
   327   0000B4                     	ds	2
   328   0000B6                     _rb6_call_low:
   329                           	callstack 0
   330   0000B6                     	ds	2
   331   0000B8                     _rb6_call_high:
   332                           	callstack 0
   333   0000B8                     	ds	2
   334   0000BA                     _rb5_call_low:
   335                           	callstack 0
   336   0000BA                     	ds	2
   337   0000BC                     _rb5_call_high:
   338                           	callstack 0
   339   0000BC                     	ds	2
   340   0000BE                     _rb4_call_low:
   341                           	callstack 0
   342   0000BE                     	ds	2
   343   0000C0                     _rb4_call_high:
   344                           	callstack 0
   345   0000C0                     	ds	2
   346   0000C2                     _int2_call:
   347                           	callstack 0
   348   0000C2                     	ds	2
   349   0000C4                     _int1_call:
   350                           	callstack 0
   351   0000C4                     	ds	2
   352   0000C6                     _int0_call:
   353                           	callstack 0
   354   0000C6                     	ds	2
   355                           
   356                           	psect	dataBANK0
   357   000080                     __pdataBANK0:
   358                           	callstack 0
   359   000080                     _PORT_REG:
   360                           	callstack 0
   361   000080                     	ds	10
   362   00008A                     _LAT_REG:
   363                           	callstack 0
   364   00008A                     	ds	10
   365   000094                     _TRIS_REG:
   366                           	callstack 0
   367   000094                     	ds	10
   368   00009E                     _ADC_Pin:
   369                           	callstack 0
   370   00009E                     	ds	8
   371   0000A6                     _lcd:
   372                           	callstack 0
   373   0000A6                     	ds	6
   374                           
   375                           	psect	cstackCOMRAM
   376   000001                     __pcstackCOMRAM:
   377                           	callstack 0
   378   000001                     ??_interrupt_low:
   379   000001                     
   380                           ; 2 bytes @ 0x0
   381   000001                     	ds	1
   382   000002                     ??_adc_input_pin:
   383   000002                     ?___wmul:
   384                           	callstack 0
   385   000002                     ?___fladd:
   386                           	callstack 0
   387   000002                     ?___flmul:
   388                           	callstack 0
   389   000002                     adc_start_conv@my_adc:
   390                           	callstack 0
   391   000002                     adc_get_result@my_adc:
   392                           	callstack 0
   393   000002                     gio_pin_write_direction@my_config:
   394                           	callstack 0
   395   000002                     gio_pin_write_logic@my_config:
   396                           	callstack 0
   397   000002                     ___wmul@multiplier:
   398                           	callstack 0
   399   000002                     ___fladd@b:
   400                           	callstack 0
   401   000002                     ___flmul@b:
   402                           	callstack 0
   403                           
   404                           ; 4 bytes @ 0x1
   405   000002                     	ds	2
   406   000004                     adc_input_pin@my_pin:
   407                           	callstack 0
   408   000004                     gio_pin_write_direction@direc:
   409                           	callstack 0
   410   000004                     gio_pin_write_logic@logic:
   411                           	callstack 0
   412   000004                     adc_get_result@myres:
   413                           	callstack 0
   414   000004                     ___wmul@multiplicand:
   415                           	callstack 0
   416                           
   417                           ; 2 bytes @ 0x3
   418   000004                     	ds	1
   419   000005                     ??_gio_pin_write_logic:
   420   000005                     ??_gio_pin_write_direction:
   421   000005                     adc_init@my_adc:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x4
   425   000005                     	ds	1
   426   000006                     ??_adc_get_result:
   427   000006                     ___wmul@product:
   428                           	callstack 0
   429   000006                     ___fladd@a:
   430                           	callstack 0
   431   000006                     ___flmul@a:
   432                           	callstack 0
   433                           
   434                           ; 4 bytes @ 0x5
   435   000006                     	ds	1
   436   000007                     ??_adc_init:
   437                           
   438                           ; 1 bytes @ 0x6
   439   000007                     	ds	1
   440   000008                     ?___xxtofl:
   441                           	callstack 0
   442   000008                     ___xxtofl@val:
   443                           	callstack 0
   444                           
   445                           ; 4 bytes @ 0x7
   446   000008                     	ds	2
   447   00000A                     ??___fladd:
   448   00000A                     ??___flmul:
   449                           
   450                           ; 1 bytes @ 0x9
   451   00000A                     	ds	1
   452   00000B                     gio_pin_write_direction@ret:
   453                           	callstack 0
   454   00000B                     gio_pin_write_logic@ret:
   455                           	callstack 0
   456                           
   457                           ; 1 bytes @ 0xA
   458   00000B                     	ds	1
   459   00000C                     ??___xxtofl:
   460   00000C                     lcd_4bit_sned_enable@my_lcd:
   461                           	callstack 0
   462   00000C                     gio_pin_init@my_config:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0xB
   466   00000C                     	ds	2
   467   00000E                     ??_gio_pin_init:
   468   00000E                     lcd_4bit_sned_enable@ret:
   469                           	callstack 0
   470   00000E                     ___fladd@signs:
   471                           	callstack 0
   472   00000E                     ___flmul@sign:
   473                           	callstack 0
   474                           
   475                           ; 1 bytes @ 0xD
   476   00000E                     	ds	1
   477   00000F                     gio_pin_init@ret:
   478                           	callstack 0
   479   00000F                     ___fladd@aexp:
   480                           	callstack 0
   481   00000F                     lcd_4bit_sned_character@my_lcd:
   482                           	callstack 0
   483   00000F                     lcd_4bit_sned_command@my_lcd:
   484                           	callstack 0
   485   00000F                     ___flmul@grs:
   486                           	callstack 0
   487                           
   488                           ; 4 bytes @ 0xE
   489   00000F                     	ds	1
   490   000010                     ___fladd@bexp:
   491                           	callstack 0
   492   000010                     ___xxtofl@sign:
   493                           	callstack 0
   494                           
   495                           ; 1 bytes @ 0xF
   496   000010                     	ds	1
   497   000011                     lcd_4bit_sned_character@character:
   498                           	callstack 0
   499   000011                     lcd_4bit_sned_command@command:
   500                           	callstack 0
   501   000011                     ___fladd@grs:
   502                           	callstack 0
   503   000011                     ___xxtofl@exp:
   504                           	callstack 0
   505                           
   506                           ; 1 bytes @ 0x10
   507   000011                     	ds	1
   508   000012                     ??_lcd_4bit_sned_command:
   509   000012                     ??_lcd_4bit_sned_character:
   510   000012                     ___xxtofl@arg:
   511                           	callstack 0
   512                           
   513                           ; 4 bytes @ 0x11
   514   000012                     	ds	1
   515   000013                     ___flmul@aexp:
   516                           	callstack 0
   517                           
   518                           ; 1 bytes @ 0x12
   519   000013                     	ds	1
   520   000014                     ___flmul@bexp:
   521                           	callstack 0
   522                           
   523                           ; 1 bytes @ 0x13
   524   000014                     	ds	1
   525   000015                     ___flmul@prod:
   526                           	callstack 0
   527                           
   528                           ; 4 bytes @ 0x14
   529   000015                     	ds	1
   530   000016                     lcd_4bit_sned_character@ret:
   531                           	callstack 0
   532   000016                     lcd_4bit_sned_command@ret:
   533                           	callstack 0
   534                           
   535                           ; 1 bytes @ 0x15
   536   000016                     	ds	1
   537   000017                     lcd_4bit_sned_character@i:
   538                           	callstack 0
   539   000017                     lcd_4bit_sned_command@i:
   540                           	callstack 0
   541                           
   542                           ; 2 bytes @ 0x16
   543   000017                     	ds	2
   544   000019                     lcd_4bit_sned_character@i_146:
   545                           	callstack 0
   546   000019                     lcd_4bit_sned_command@i_163:
   547                           	callstack 0
   548   000019                     ___flmul@temp:
   549                           	callstack 0
   550                           
   551                           ; 2 bytes @ 0x18
   552   000019                     	ds	2
   553   00001B                     ?___flsub:
   554                           	callstack 0
   555   00001B                     set_cursor_4@my_lcd:
   556                           	callstack 0
   557   00001B                     lcd_4bit_initilization@my_lcd:
   558                           	callstack 0
   559   00001B                     ___flsub@b:
   560                           	callstack 0
   561                           
   562                           ; 4 bytes @ 0x1A
   563   00001B                     	ds	2
   564   00001D                     ??_lcd_4bit_initilization:
   565   00001D                     set_cursor_4@row:
   566                           	callstack 0
   567                           
   568                           ; 1 bytes @ 0x1C
   569   00001D                     	ds	1
   570   00001E                     set_cursor_4@column:
   571                           	callstack 0
   572                           
   573                           ; 1 bytes @ 0x1D
   574   00001E                     	ds	1
   575   00001F                     ??_set_cursor_4:
   576   00001F                     lcd_4bit_initilization@i:
   577                           	callstack 0
   578   00001F                     ___flsub@a:
   579                           	callstack 0
   580                           
   581                           ; 4 bytes @ 0x1E
   582   00001F                     	ds	2
   583   000021                     set_cursor_4@ret:
   584                           	callstack 0
   585   000021                     lcd_4bit_initilization@ret:
   586                           	callstack 0
   587                           
   588                           ; 1 bytes @ 0x20
   589   000021                     	ds	1
   590   000022                     lcd_4bit_sned_character_at_pos@my_lcd:
   591                           	callstack 0
   592                           
   593                           ; 2 bytes @ 0x21
   594   000022                     	ds	1
   595   000023                     ?___fldiv:
   596                           	callstack 0
   597   000023                     ___fldiv@b:
   598                           	callstack 0
   599                           
   600                           ; 4 bytes @ 0x22
   601   000023                     	ds	1
   602   000024                     lcd_4bit_sned_character_at_pos@row:
   603                           	callstack 0
   604                           
   605                           ; 1 bytes @ 0x23
   606   000024                     	ds	1
   607   000025                     lcd_4bit_sned_character_at_pos@column:
   608                           	callstack 0
   609                           
   610                           ; 1 bytes @ 0x24
   611   000025                     	ds	1
   612   000026                     lcd_4bit_sned_character_at_pos@character:
   613                           	callstack 0
   614                           
   615                           ; 1 bytes @ 0x25
   616   000026                     	ds	1
   617   000027                     lcd_4bit_sned_character_at_pos@ret:
   618                           	callstack 0
   619   000027                     ___fldiv@a:
   620                           	callstack 0
   621                           
   622                           ; 4 bytes @ 0x26
   623   000027                     	ds	1
   624   000028                     Display_volt@My_lcd:
   625                           	callstack 0
   626   000028                     Display_Current@My_lcd:
   627                           	callstack 0
   628   000028                     Display_Resistance@My_lcd:
   629                           	callstack 0
   630                           
   631                           ; 2 bytes @ 0x27
   632   000028                     	ds	2
   633   00002A                     Display_volt@x2:
   634                           	callstack 0
   635   00002A                     Display_Current@x2:
   636                           	callstack 0
   637   00002A                     Display_Resistance@x2:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x29
   641   00002A                     	ds	1
   642   00002B                     ??___fldiv:
   643                           
   644                           ; 1 bytes @ 0x2A
   645   00002B                     	ds	1
   646   00002C                     Display_volt@x1:
   647                           	callstack 0
   648   00002C                     Display_Current@x1:
   649                           	callstack 0
   650   00002C                     Display_Resistance@x1:
   651                           	callstack 0
   652                           
   653                           ; 2 bytes @ 0x2B
   654   00002C                     	ds	2
   655   00002E                     Display_volt@x0:
   656                           	callstack 0
   657   00002E                     Display_Current@x0:
   658                           	callstack 0
   659   00002E                     Display_Resistance@x0:
   660                           	callstack 0
   661                           
   662                           ; 2 bytes @ 0x2D
   663   00002E                     	ds	1
   664   00002F                     ___fldiv@rem:
   665                           	callstack 0
   666                           
   667                           ; 4 bytes @ 0x2E
   668   00002F                     	ds	1
   669   000030                     Display_volt@x_1:
   670                           	callstack 0
   671   000030                     Display_Current@x_1:
   672                           	callstack 0
   673   000030                     Display_Resistance@x_1:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x2F
   677   000030                     	ds	2
   678   000032                     Display_volt@x_2:
   679                           	callstack 0
   680   000032                     Display_Current@x_2:
   681                           	callstack 0
   682   000032                     Display_Resistance@x_2:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x31
   686   000032                     	ds	1
   687   000033                     ___fldiv@sign:
   688                           	callstack 0
   689                           
   690                           ; 1 bytes @ 0x32
   691   000033                     	ds	1
   692   000034                     ___fldiv@new_exp:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x33
   696   000034                     	ds	2
   697   000036                     ___fldiv@grs:
   698                           	callstack 0
   699                           
   700                           ; 4 bytes @ 0x35
   701   000036                     	ds	4
   702   00003A                     ___fldiv@bexp:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x39
   706   00003A                     	ds	1
   707   00003B                     ___fldiv@aexp:
   708                           	callstack 0
   709                           
   710                           ; 1 bytes @ 0x3A
   711   00003B                     	ds	1
   712   00003C                     ?___fltol:
   713                           	callstack 0
   714   00003C                     ___fltol@f1:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x3B
   718   00003C                     	ds	4
   719   000040                     ??___fltol:
   720                           
   721                           ; 1 bytes @ 0x3F
   722   000040                     	ds	4
   723   000044                     ___fltol@sign1:
   724                           	callstack 0
   725                           
   726                           ; 1 bytes @ 0x43
   727   000044                     	ds	1
   728   000045                     ___fltol@exp1:
   729                           	callstack 0
   730                           
   731                           ; 1 bytes @ 0x44
   732   000045                     	ds	1
   733   000046                     Calculate_digits@x:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x45
   737   000046                     	ds	4
   738   00004A                     Calculate_digits@x2:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x49
   742   00004A                     	ds	2
   743   00004C                     Calculate_digits@x1:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x4B
   747   00004C                     	ds	2
   748   00004E                     Calculate_digits@x0:
   749                           	callstack 0
   750                           
   751                           ; 2 bytes @ 0x4D
   752   00004E                     	ds	2
   753   000050                     Calculate_digits@x_1:
   754                           	callstack 0
   755                           
   756                           ; 2 bytes @ 0x4F
   757   000050                     	ds	2
   758   000052                     Calculate_digits@x_2:
   759                           	callstack 0
   760                           
   761                           ; 2 bytes @ 0x51
   762   000052                     	ds	2
   763   000054                     _Calculate_digits$2854:
   764                           	callstack 0
   765                           
   766                           ; 4 bytes @ 0x53
   767   000054                     	ds	4
   768   000058                     _Calculate_digits$2853:
   769                           	callstack 0
   770                           
   771                           ; 4 bytes @ 0x57
   772   000058                     	ds	4
   773   00005C                     _Calculate_digits$2852:
   774                           	callstack 0
   775                           
   776                           ; 4 bytes @ 0x5B
   777   00005C                     	ds	4
   778   000060                     _main$2851:
   779                           	callstack 0
   780                           
   781                           ; 4 bytes @ 0x5F
   782   000060                     	ds	4
   783   000064                     _main$2850:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x63
   787   000064                     	ds	4
   788   000068                     main@x_2:
   789                           	callstack 0
   790                           
   791                           ; 2 bytes @ 0x67
   792   000068                     	ds	2
   793   00006A                     main@x_1:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x69
   797   00006A                     	ds	2
   798   00006C                     main@x0:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x6B
   802   00006C                     	ds	2
   803   00006E                     main@x1:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x6D
   807   00006E                     	ds	2
   808   000070                     main@x2:
   809                           	callstack 0
   810                           
   811                           ; 2 bytes @ 0x6F
   812   000070                     	ds	2
   813   000072                     main@x:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x71
   817   000072                     	ds	4
   818                           
   819 ;;
   820 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   821 ;;
   822 ;; *************** function _main *****************
   823 ;; Defined at:
   824 ;;		line 73 in file "main.c"
   825 ;; Parameters:    Size  Location     Type
   826 ;;		None
   827 ;; Auto vars:     Size  Location     Type
   828 ;;  x               4  113[COMRAM] float 
   829 ;;  x2              2  111[COMRAM] unsigned int 
   830 ;;  x1              2  109[COMRAM] unsigned int 
   831 ;;  x0              2  107[COMRAM] unsigned int 
   832 ;;  x_1             2  105[COMRAM] unsigned int 
   833 ;;  x_2             2  103[COMRAM] unsigned int 
   834 ;; Return value:  Size  Location     Type
   835 ;;                  2  717[None  ] int 
   836 ;; Registers used:
   837 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   843 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   844 ;;      Locals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   845 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   846 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   847 ;;Total ram usage:       22 bytes
   848 ;; Hardware stack levels required when called: 10
   849 ;; This function calls:
   850 ;;		_AC_Current_selection
   851 ;;		_AC_Volt_Up_to_200_selection
   852 ;;		_AC_Volt_Up_to_50_selection
   853 ;;		_AC_Volt_Up_to_5_selection
   854 ;;		_Calculate_digits
   855 ;;		_DC_Current_selection
   856 ;;		_DC_Volt_Up_to_200_selection
   857 ;;		_DC_Volt_Up_to_50_selection
   858 ;;		_DC_Volt_Up_to_5_selection
   859 ;;		_Display_Current
   860 ;;		_Display_Resistance
   861 ;;		_Display_volt
   862 ;;		_Resistance_Up_to_10k_selection
   863 ;;		_Resistance_Up_to_1M_selection
   864 ;;		___fldiv
   865 ;;		___flmul
   866 ;;		___flsub
   867 ;;		___wmul
   868 ;;		___xxtofl
   869 ;;		_adc_get_result
   870 ;;		_adc_init
   871 ;;		_adc_start_conv
   872 ;;		_config_pins
   873 ;;		_lcd_4bit_initilization
   874 ;; This function is called by:
   875 ;;		Startup code after reset
   876 ;; This function uses a non-reentrant model
   877 ;;
   878                           
   879                           	psect	text0
   880   001006                     __ptext0:
   881                           	callstack 0
   882   001006                     _main:
   883                           	callstack 21
   884   001006                     
   885                           ;main.c: 75:       unsigned int x2,x1,x0,x_1,x_2;;main.c: 76:       lcd_4bit_initilizati
      +                          on(&lcd);
   886   001006  0EA6               	movlw	low _lcd
   887   001008  6E1B               	movwf	lcd_4bit_initilization@my_lcd^0,c
   888   00100A  0E00               	movlw	high _lcd
   889   00100C  6E1C               	movwf	(lcd_4bit_initilization@my_lcd+1)^0,c
   890   00100E  ECF7  F01B         	call	_lcd_4bit_initilization	;wreg free
   891   001012                     
   892                           ;main.c: 77:       adc_init(&ADC_Pin);
   893   001012  0E9E               	movlw	low _ADC_Pin
   894   001014  6E05               	movwf	adc_init@my_adc^0,c
   895   001016  0E00               	movlw	high _ADC_Pin
   896   001018  6E06               	movwf	(adc_init@my_adc+1)^0,c
   897   00101A  ECA0  F01D         	call	_adc_init	;wreg free
   898   00101E                     
   899                           ;main.c: 78:       config_pins();
   900   00101E  EC56  F022         	call	_config_pins	;wreg free
   901   001022                     l5229:
   902                           
   903                           ;main.c: 81:         {;main.c: 82:             if(PORTBbits.RB5==1)
   904   001022  AA81               	btfss	129,5,c	;volatile
   905   001024  EF16  F008         	goto	u4951
   906   001028  EF18  F008         	goto	u4950
   907   00102C                     u4951:
   908   00102C  EFC3  F008         	goto	l5247
   909   001030                     u4950:
   910   001030                     
   911                           ;main.c: 83:              {;main.c: 84:                  DC_Volt_Up_to_5_selection();
   912   001030  EC89  F022         	call	_DC_Volt_Up_to_5_selection	;wreg free
   913   001034                     
   914                           ;main.c: 85:                  adc_start_conv(&ADC_Pin);
   915   001034  0E9E               	movlw	low _ADC_Pin
   916   001036  6E02               	movwf	adc_start_conv@my_adc^0,c
   917   001038  0E00               	movlw	high _ADC_Pin
   918   00103A  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
   919   00103C  EC67  F022         	call	_adc_start_conv	;wreg free
   920   001040                     
   921                           ;main.c: 86:                  adc_get_result(&ADC_Pin,&ADC_Val);
   922   001040  0E9E               	movlw	low _ADC_Pin
   923   001042  6E02               	movwf	adc_get_result@my_adc^0,c
   924   001044  0E00               	movlw	high _ADC_Pin
   925   001046  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
   926   001048  0E78               	movlw	low _ADC_Val
   927   00104A  6E04               	movwf	adc_get_result@myres^0,c
   928   00104C  0E00               	movlw	high _ADC_Val
   929   00104E  6E05               	movwf	(adc_get_result@myres+1)^0,c
   930   001050  ECF1  F020         	call	_adc_get_result	;wreg free
   931   001054                     
   932                           ;main.c: 87:                  x=(float)(ADC_Val*5)/1023;
   933   001054  C078  F002         	movff	_ADC_Val,___wmul@multiplier
   934   001058  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
   935   00105C  0E00               	movlw	0
   936   00105E  6E05               	movwf	(___wmul@multiplicand+1)^0,c
   937   001060  0E05               	movlw	5
   938   001062  6E04               	movwf	___wmul@multiplicand^0,c
   939   001064  EC43  F022         	call	___wmul	;wreg free
   940   001068  C002  F008         	movff	?___wmul,___xxtofl@val
   941   00106C  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
   942   001070  6A0A               	clrf	(___xxtofl@val+2)^0,c
   943   001072  6A0B               	clrf	(___xxtofl@val+3)^0,c
   944   001074  0E00               	movlw	0
   945   001076  ECBF  F019         	call	___xxtofl
   946   00107A  C008  F023         	movff	?___xxtofl,___fldiv@b
   947   00107E  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
   948   001082  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
   949   001086  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
   950   00108A  0E00               	movlw	0
   951   00108C  6E27               	movwf	___fldiv@a^0,c
   952   00108E  0EC0               	movlw	192
   953   001090  6E28               	movwf	(___fldiv@a+1)^0,c
   954   001092  0E7F               	movlw	127
   955   001094  6E29               	movwf	(___fldiv@a+2)^0,c
   956   001096  0E44               	movlw	68
   957   001098  6E2A               	movwf	(___fldiv@a+3)^0,c
   958   00109A  ECC7  F016         	call	___fldiv	;wreg free
   959   00109E  C023  F072         	movff	?___fldiv,main@x
   960   0010A2  C024  F073         	movff	?___fldiv+1,main@x+1
   961   0010A6  C025  F074         	movff	?___fldiv+2,main@x+2
   962   0010AA  C026  F075         	movff	?___fldiv+3,main@x+3
   963   0010AE                     
   964                           ;main.c: 88:                  x=x*(float)( 10051 / 51.0f)*(float)( 450.0f / 20000);
   965   0010AE  0E14               	movlw	20
   966   0010B0  6E06               	movwf	___flmul@a^0,c
   967   0010B2  0E14               	movlw	20
   968   0010B4  6E07               	movwf	(___flmul@a+1)^0,c
   969   0010B6  0E45               	movlw	69
   970   0010B8  6E08               	movwf	(___flmul@a+2)^0,c
   971   0010BA  0E43               	movlw	67
   972   0010BC  6E09               	movwf	(___flmul@a+3)^0,c
   973   0010BE  C072  F002         	movff	main@x,___flmul@b
   974   0010C2  C073  F003         	movff	main@x+1,___flmul@b+1
   975   0010C6  C074  F004         	movff	main@x+2,___flmul@b+2
   976   0010CA  C075  F005         	movff	main@x+3,___flmul@b+3
   977   0010CE  ECB2  F014         	call	___flmul	;wreg free
   978   0010D2  C002  F064         	movff	?___flmul,_main$2850
   979   0010D6  C003  F065         	movff	?___flmul+1,_main$2850+1
   980   0010DA  C004  F066         	movff	?___flmul+2,_main$2850+2
   981   0010DE  C005  F067         	movff	?___flmul+3,_main$2850+3
   982   0010E2                     
   983                           ;main.c: 88:                  x=x*(float)( 10051 / 51.0f)*(float)( 450.0f / 20000);
   984   0010E2  C064  F002         	movff	_main$2850,___flmul@b
   985   0010E6  C065  F003         	movff	_main$2850+1,___flmul@b+1
   986   0010EA  C066  F004         	movff	_main$2850+2,___flmul@b+2
   987   0010EE  C067  F005         	movff	_main$2850+3,___flmul@b+3
   988   0010F2  0EEC               	movlw	236
   989   0010F4  6E06               	movwf	___flmul@a^0,c
   990   0010F6  0E51               	movlw	81
   991   0010F8  6E07               	movwf	(___flmul@a+1)^0,c
   992   0010FA  0EB8               	movlw	184
   993   0010FC  6E08               	movwf	(___flmul@a+2)^0,c
   994   0010FE  0E3C               	movlw	60
   995   001100  6E09               	movwf	(___flmul@a+3)^0,c
   996   001102  ECB2  F014         	call	___flmul	;wreg free
   997   001106  C002  F072         	movff	?___flmul,main@x
   998   00110A  C003  F073         	movff	?___flmul+1,main@x+1
   999   00110E  C004  F074         	movff	?___flmul+2,main@x+2
  1000   001112  C005  F075         	movff	?___flmul+3,main@x+3
  1001   001116                     
  1002                           ;main.c: 89:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  1003   001116  C072  F046         	movff	main@x,Calculate_digits@x
  1004   00111A  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  1005   00111E  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  1006   001122  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  1007   001126  0E70               	movlw	low main@x2
  1008   001128  6E4A               	movwf	Calculate_digits@x2^0,c
  1009   00112A  0E00               	movlw	high main@x2
  1010   00112C  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  1011   00112E  0E6E               	movlw	low main@x1
  1012   001130  6E4C               	movwf	Calculate_digits@x1^0,c
  1013   001132  0E00               	movlw	high main@x1
  1014   001134  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  1015   001136  0E6C               	movlw	low main@x0
  1016   001138  6E4E               	movwf	Calculate_digits@x0^0,c
  1017   00113A  0E00               	movlw	high main@x0
  1018   00113C  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  1019   00113E  0E6A               	movlw	low main@x_1
  1020   001140  6E50               	movwf	Calculate_digits@x_1^0,c
  1021   001142  0E00               	movlw	high main@x_1
  1022   001144  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  1023   001146  0E68               	movlw	low main@x_2
  1024   001148  6E52               	movwf	Calculate_digits@x_2^0,c
  1025   00114A  0E00               	movlw	high main@x_2
  1026   00114C  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  1027   00114E  ECD3  F00F         	call	_Calculate_digits	;wreg free
  1028   001152                     
  1029                           ;main.c: 90:                  Display_volt(&lcd,x2,x1,x0,x_1,x_2);
  1030   001152  0EA6               	movlw	low _lcd
  1031   001154  6E28               	movwf	Display_volt@My_lcd^0,c
  1032   001156  0E00               	movlw	high _lcd
  1033   001158  6E29               	movwf	(Display_volt@My_lcd+1)^0,c
  1034   00115A  C070  F02A         	movff	main@x2,Display_volt@x2
  1035   00115E  C071  F02B         	movff	main@x2+1,Display_volt@x2+1
  1036   001162  C06E  F02C         	movff	main@x1,Display_volt@x1
  1037   001166  C06F  F02D         	movff	main@x1+1,Display_volt@x1+1
  1038   00116A  C06C  F02E         	movff	main@x0,Display_volt@x0
  1039   00116E  C06D  F02F         	movff	main@x0+1,Display_volt@x0+1
  1040   001172  C06A  F030         	movff	main@x_1,Display_volt@x_1
  1041   001176  C06B  F031         	movff	main@x_1+1,Display_volt@x_1+1
  1042   00117A  C068  F032         	movff	main@x_2,Display_volt@x_2
  1043   00117E  C069  F033         	movff	main@x_2+1,Display_volt@x_2+1
  1044   001182  ECAA  F01E         	call	_Display_volt	;wreg free
  1045   001186                     l5247:
  1046                           
  1047                           ;main.c: 93:             if(PORTBbits.RB4==1)
  1048   001186  A881               	btfss	129,4,c	;volatile
  1049   001188  EFC8  F008         	goto	u4961
  1050   00118C  EFCA  F008         	goto	u4960
  1051   001190                     u4961:
  1052   001190  EF75  F009         	goto	l5265
  1053   001194                     u4960:
  1054   001194                     
  1055                           ;main.c: 94:              { DC_Volt_Up_to_50_selection();
  1056   001194  EC8F  F022         	call	_DC_Volt_Up_to_50_selection	;wreg free
  1057   001198                     
  1058                           ;main.c: 95:                  adc_start_conv(&ADC_Pin);
  1059   001198  0E9E               	movlw	low _ADC_Pin
  1060   00119A  6E02               	movwf	adc_start_conv@my_adc^0,c
  1061   00119C  0E00               	movlw	high _ADC_Pin
  1062   00119E  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
  1063   0011A0  EC67  F022         	call	_adc_start_conv	;wreg free
  1064   0011A4                     
  1065                           ;main.c: 96:                  adc_get_result(&ADC_Pin,&ADC_Val);
  1066   0011A4  0E9E               	movlw	low _ADC_Pin
  1067   0011A6  6E02               	movwf	adc_get_result@my_adc^0,c
  1068   0011A8  0E00               	movlw	high _ADC_Pin
  1069   0011AA  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
  1070   0011AC  0E78               	movlw	low _ADC_Val
  1071   0011AE  6E04               	movwf	adc_get_result@myres^0,c
  1072   0011B0  0E00               	movlw	high _ADC_Val
  1073   0011B2  6E05               	movwf	(adc_get_result@myres+1)^0,c
  1074   0011B4  ECF1  F020         	call	_adc_get_result	;wreg free
  1075   0011B8                     
  1076                           ;main.c: 97:                  x=(float)(ADC_Val*5)/1023;
  1077   0011B8  C078  F002         	movff	_ADC_Val,___wmul@multiplier
  1078   0011BC  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
  1079   0011C0  0E00               	movlw	0
  1080   0011C2  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1081   0011C4  0E05               	movlw	5
  1082   0011C6  6E04               	movwf	___wmul@multiplicand^0,c
  1083   0011C8  EC43  F022         	call	___wmul	;wreg free
  1084   0011CC  C002  F008         	movff	?___wmul,___xxtofl@val
  1085   0011D0  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  1086   0011D4  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1087   0011D6  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1088   0011D8  0E00               	movlw	0
  1089   0011DA  ECBF  F019         	call	___xxtofl
  1090   0011DE  C008  F023         	movff	?___xxtofl,___fldiv@b
  1091   0011E2  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1092   0011E6  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1093   0011EA  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1094   0011EE  0E00               	movlw	0
  1095   0011F0  6E27               	movwf	___fldiv@a^0,c
  1096   0011F2  0EC0               	movlw	192
  1097   0011F4  6E28               	movwf	(___fldiv@a+1)^0,c
  1098   0011F6  0E7F               	movlw	127
  1099   0011F8  6E29               	movwf	(___fldiv@a+2)^0,c
  1100   0011FA  0E44               	movlw	68
  1101   0011FC  6E2A               	movwf	(___fldiv@a+3)^0,c
  1102   0011FE  ECC7  F016         	call	___fldiv	;wreg free
  1103   001202  C023  F072         	movff	?___fldiv,main@x
  1104   001206  C024  F073         	movff	?___fldiv+1,main@x+1
  1105   00120A  C025  F074         	movff	?___fldiv+2,main@x+2
  1106   00120E  C026  F075         	movff	?___fldiv+3,main@x+3
  1107   001212                     
  1108                           ;main.c: 98:                  x=x*(float)( 10051 / 51.0f)*(float)( 1350.0f / 20000.0f);
  1109   001212  0E14               	movlw	20
  1110   001214  6E06               	movwf	___flmul@a^0,c
  1111   001216  0E14               	movlw	20
  1112   001218  6E07               	movwf	(___flmul@a+1)^0,c
  1113   00121A  0E45               	movlw	69
  1114   00121C  6E08               	movwf	(___flmul@a+2)^0,c
  1115   00121E  0E43               	movlw	67
  1116   001220  6E09               	movwf	(___flmul@a+3)^0,c
  1117   001222  C072  F002         	movff	main@x,___flmul@b
  1118   001226  C073  F003         	movff	main@x+1,___flmul@b+1
  1119   00122A  C074  F004         	movff	main@x+2,___flmul@b+2
  1120   00122E  C075  F005         	movff	main@x+3,___flmul@b+3
  1121   001232  ECB2  F014         	call	___flmul	;wreg free
  1122   001236  C002  F064         	movff	?___flmul,_main$2850
  1123   00123A  C003  F065         	movff	?___flmul+1,_main$2850+1
  1124   00123E  C004  F066         	movff	?___flmul+2,_main$2850+2
  1125   001242  C005  F067         	movff	?___flmul+3,_main$2850+3
  1126   001246                     
  1127                           ;main.c: 98:                  x=x*(float)( 10051 / 51.0f)*(float)( 1350.0f / 20000.0f);
  1128   001246  C064  F002         	movff	_main$2850,___flmul@b
  1129   00124A  C065  F003         	movff	_main$2850+1,___flmul@b+1
  1130   00124E  C066  F004         	movff	_main$2850+2,___flmul@b+2
  1131   001252  C067  F005         	movff	_main$2850+3,___flmul@b+3
  1132   001256  0E71               	movlw	113
  1133   001258  6E06               	movwf	___flmul@a^0,c
  1134   00125A  0E3D               	movlw	61
  1135   00125C  6E07               	movwf	(___flmul@a+1)^0,c
  1136   00125E  0E8A               	movlw	138
  1137   001260  6E08               	movwf	(___flmul@a+2)^0,c
  1138   001262  0E3D               	movlw	61
  1139   001264  6E09               	movwf	(___flmul@a+3)^0,c
  1140   001266  ECB2  F014         	call	___flmul	;wreg free
  1141   00126A  C002  F072         	movff	?___flmul,main@x
  1142   00126E  C003  F073         	movff	?___flmul+1,main@x+1
  1143   001272  C004  F074         	movff	?___flmul+2,main@x+2
  1144   001276  C005  F075         	movff	?___flmul+3,main@x+3
  1145   00127A                     
  1146                           ;main.c: 99:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  1147   00127A  C072  F046         	movff	main@x,Calculate_digits@x
  1148   00127E  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  1149   001282  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  1150   001286  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  1151   00128A  0E70               	movlw	low main@x2
  1152   00128C  6E4A               	movwf	Calculate_digits@x2^0,c
  1153   00128E  0E00               	movlw	high main@x2
  1154   001290  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  1155   001292  0E6E               	movlw	low main@x1
  1156   001294  6E4C               	movwf	Calculate_digits@x1^0,c
  1157   001296  0E00               	movlw	high main@x1
  1158   001298  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  1159   00129A  0E6C               	movlw	low main@x0
  1160   00129C  6E4E               	movwf	Calculate_digits@x0^0,c
  1161   00129E  0E00               	movlw	high main@x0
  1162   0012A0  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  1163   0012A2  0E6A               	movlw	low main@x_1
  1164   0012A4  6E50               	movwf	Calculate_digits@x_1^0,c
  1165   0012A6  0E00               	movlw	high main@x_1
  1166   0012A8  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  1167   0012AA  0E68               	movlw	low main@x_2
  1168   0012AC  6E52               	movwf	Calculate_digits@x_2^0,c
  1169   0012AE  0E00               	movlw	high main@x_2
  1170   0012B0  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  1171   0012B2  ECD3  F00F         	call	_Calculate_digits	;wreg free
  1172   0012B6                     
  1173                           ;main.c: 100:                  Display_volt(&lcd,x2,x1,x0,x_1,x_2);
  1174   0012B6  0EA6               	movlw	low _lcd
  1175   0012B8  6E28               	movwf	Display_volt@My_lcd^0,c
  1176   0012BA  0E00               	movlw	high _lcd
  1177   0012BC  6E29               	movwf	(Display_volt@My_lcd+1)^0,c
  1178   0012BE  C070  F02A         	movff	main@x2,Display_volt@x2
  1179   0012C2  C071  F02B         	movff	main@x2+1,Display_volt@x2+1
  1180   0012C6  C06E  F02C         	movff	main@x1,Display_volt@x1
  1181   0012CA  C06F  F02D         	movff	main@x1+1,Display_volt@x1+1
  1182   0012CE  C06C  F02E         	movff	main@x0,Display_volt@x0
  1183   0012D2  C06D  F02F         	movff	main@x0+1,Display_volt@x0+1
  1184   0012D6  C06A  F030         	movff	main@x_1,Display_volt@x_1
  1185   0012DA  C06B  F031         	movff	main@x_1+1,Display_volt@x_1+1
  1186   0012DE  C068  F032         	movff	main@x_2,Display_volt@x_2
  1187   0012E2  C069  F033         	movff	main@x_2+1,Display_volt@x_2+1
  1188   0012E6  ECAA  F01E         	call	_Display_volt	;wreg free
  1189   0012EA                     l5265:
  1190                           
  1191                           ;main.c: 104:             if(PORTBbits.RB3==1)
  1192   0012EA  A681               	btfss	129,3,c	;volatile
  1193   0012EC  EF7A  F009         	goto	u4971
  1194   0012F0  EF7C  F009         	goto	u4970
  1195   0012F4                     u4971:
  1196   0012F4  EF27  F00A         	goto	l5283
  1197   0012F8                     u4970:
  1198   0012F8                     
  1199                           ;main.c: 105:              { DC_Volt_Up_to_200_selection();
  1200   0012F8  EC95  F022         	call	_DC_Volt_Up_to_200_selection	;wreg free
  1201   0012FC                     
  1202                           ;main.c: 106:                  adc_start_conv(&ADC_Pin);
  1203   0012FC  0E9E               	movlw	low _ADC_Pin
  1204   0012FE  6E02               	movwf	adc_start_conv@my_adc^0,c
  1205   001300  0E00               	movlw	high _ADC_Pin
  1206   001302  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
  1207   001304  EC67  F022         	call	_adc_start_conv	;wreg free
  1208   001308                     
  1209                           ;main.c: 107:                  adc_get_result(&ADC_Pin,&ADC_Val);
  1210   001308  0E9E               	movlw	low _ADC_Pin
  1211   00130A  6E02               	movwf	adc_get_result@my_adc^0,c
  1212   00130C  0E00               	movlw	high _ADC_Pin
  1213   00130E  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
  1214   001310  0E78               	movlw	low _ADC_Val
  1215   001312  6E04               	movwf	adc_get_result@myres^0,c
  1216   001314  0E00               	movlw	high _ADC_Val
  1217   001316  6E05               	movwf	(adc_get_result@myres+1)^0,c
  1218   001318  ECF1  F020         	call	_adc_get_result	;wreg free
  1219   00131C                     
  1220                           ;main.c: 108:                  x=(float)(ADC_Val*5)/1023;
  1221   00131C  C078  F002         	movff	_ADC_Val,___wmul@multiplier
  1222   001320  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
  1223   001324  0E00               	movlw	0
  1224   001326  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1225   001328  0E05               	movlw	5
  1226   00132A  6E04               	movwf	___wmul@multiplicand^0,c
  1227   00132C  EC43  F022         	call	___wmul	;wreg free
  1228   001330  C002  F008         	movff	?___wmul,___xxtofl@val
  1229   001334  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  1230   001338  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1231   00133A  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1232   00133C  0E00               	movlw	0
  1233   00133E  ECBF  F019         	call	___xxtofl
  1234   001342  C008  F023         	movff	?___xxtofl,___fldiv@b
  1235   001346  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1236   00134A  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1237   00134E  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1238   001352  0E00               	movlw	0
  1239   001354  6E27               	movwf	___fldiv@a^0,c
  1240   001356  0EC0               	movlw	192
  1241   001358  6E28               	movwf	(___fldiv@a+1)^0,c
  1242   00135A  0E7F               	movlw	127
  1243   00135C  6E29               	movwf	(___fldiv@a+2)^0,c
  1244   00135E  0E44               	movlw	68
  1245   001360  6E2A               	movwf	(___fldiv@a+3)^0,c
  1246   001362  ECC7  F016         	call	___fldiv	;wreg free
  1247   001366  C023  F072         	movff	?___fldiv,main@x
  1248   00136A  C024  F073         	movff	?___fldiv+1,main@x+1
  1249   00136E  C025  F074         	movff	?___fldiv+2,main@x+2
  1250   001372  C026  F075         	movff	?___fldiv+3,main@x+3
  1251   001376                     
  1252                           ;main.c: 109:                  x=x*(float)( 10051 / 51.0f)*(float)( 5050.0f / 20000.0f);
  1253   001376  0E14               	movlw	20
  1254   001378  6E06               	movwf	___flmul@a^0,c
  1255   00137A  0E14               	movlw	20
  1256   00137C  6E07               	movwf	(___flmul@a+1)^0,c
  1257   00137E  0E45               	movlw	69
  1258   001380  6E08               	movwf	(___flmul@a+2)^0,c
  1259   001382  0E43               	movlw	67
  1260   001384  6E09               	movwf	(___flmul@a+3)^0,c
  1261   001386  C072  F002         	movff	main@x,___flmul@b
  1262   00138A  C073  F003         	movff	main@x+1,___flmul@b+1
  1263   00138E  C074  F004         	movff	main@x+2,___flmul@b+2
  1264   001392  C075  F005         	movff	main@x+3,___flmul@b+3
  1265   001396  ECB2  F014         	call	___flmul	;wreg free
  1266   00139A  C002  F064         	movff	?___flmul,_main$2850
  1267   00139E  C003  F065         	movff	?___flmul+1,_main$2850+1
  1268   0013A2  C004  F066         	movff	?___flmul+2,_main$2850+2
  1269   0013A6  C005  F067         	movff	?___flmul+3,_main$2850+3
  1270   0013AA                     
  1271                           ;main.c: 109:                  x=x*(float)( 10051 / 51.0f)*(float)( 5050.0f / 20000.0f);
  1272   0013AA  C064  F002         	movff	_main$2850,___flmul@b
  1273   0013AE  C065  F003         	movff	_main$2850+1,___flmul@b+1
  1274   0013B2  C066  F004         	movff	_main$2850+2,___flmul@b+2
  1275   0013B6  C067  F005         	movff	_main$2850+3,___flmul@b+3
  1276   0013BA  0EAE               	movlw	174
  1277   0013BC  6E06               	movwf	___flmul@a^0,c
  1278   0013BE  0E47               	movlw	71
  1279   0013C0  6E07               	movwf	(___flmul@a+1)^0,c
  1280   0013C2  0E81               	movlw	129
  1281   0013C4  6E08               	movwf	(___flmul@a+2)^0,c
  1282   0013C6  0E3E               	movlw	62
  1283   0013C8  6E09               	movwf	(___flmul@a+3)^0,c
  1284   0013CA  ECB2  F014         	call	___flmul	;wreg free
  1285   0013CE  C002  F072         	movff	?___flmul,main@x
  1286   0013D2  C003  F073         	movff	?___flmul+1,main@x+1
  1287   0013D6  C004  F074         	movff	?___flmul+2,main@x+2
  1288   0013DA  C005  F075         	movff	?___flmul+3,main@x+3
  1289   0013DE                     
  1290                           ;main.c: 110:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  1291   0013DE  C072  F046         	movff	main@x,Calculate_digits@x
  1292   0013E2  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  1293   0013E6  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  1294   0013EA  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  1295   0013EE  0E70               	movlw	low main@x2
  1296   0013F0  6E4A               	movwf	Calculate_digits@x2^0,c
  1297   0013F2  0E00               	movlw	high main@x2
  1298   0013F4  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  1299   0013F6  0E6E               	movlw	low main@x1
  1300   0013F8  6E4C               	movwf	Calculate_digits@x1^0,c
  1301   0013FA  0E00               	movlw	high main@x1
  1302   0013FC  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  1303   0013FE  0E6C               	movlw	low main@x0
  1304   001400  6E4E               	movwf	Calculate_digits@x0^0,c
  1305   001402  0E00               	movlw	high main@x0
  1306   001404  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  1307   001406  0E6A               	movlw	low main@x_1
  1308   001408  6E50               	movwf	Calculate_digits@x_1^0,c
  1309   00140A  0E00               	movlw	high main@x_1
  1310   00140C  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  1311   00140E  0E68               	movlw	low main@x_2
  1312   001410  6E52               	movwf	Calculate_digits@x_2^0,c
  1313   001412  0E00               	movlw	high main@x_2
  1314   001414  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  1315   001416  ECD3  F00F         	call	_Calculate_digits	;wreg free
  1316   00141A                     
  1317                           ;main.c: 111:                  Display_volt(&lcd,x2,x1,x0,x_1,x_2);
  1318   00141A  0EA6               	movlw	low _lcd
  1319   00141C  6E28               	movwf	Display_volt@My_lcd^0,c
  1320   00141E  0E00               	movlw	high _lcd
  1321   001420  6E29               	movwf	(Display_volt@My_lcd+1)^0,c
  1322   001422  C070  F02A         	movff	main@x2,Display_volt@x2
  1323   001426  C071  F02B         	movff	main@x2+1,Display_volt@x2+1
  1324   00142A  C06E  F02C         	movff	main@x1,Display_volt@x1
  1325   00142E  C06F  F02D         	movff	main@x1+1,Display_volt@x1+1
  1326   001432  C06C  F02E         	movff	main@x0,Display_volt@x0
  1327   001436  C06D  F02F         	movff	main@x0+1,Display_volt@x0+1
  1328   00143A  C06A  F030         	movff	main@x_1,Display_volt@x_1
  1329   00143E  C06B  F031         	movff	main@x_1+1,Display_volt@x_1+1
  1330   001442  C068  F032         	movff	main@x_2,Display_volt@x_2
  1331   001446  C069  F033         	movff	main@x_2+1,Display_volt@x_2+1
  1332   00144A  ECAA  F01E         	call	_Display_volt	;wreg free
  1333   00144E                     l5283:
  1334                           
  1335                           ;main.c: 115:             if(PORTBbits.RB2==1)
  1336   00144E  A481               	btfss	129,2,c	;volatile
  1337   001450  EF2C  F00A         	goto	u4981
  1338   001454  EF2E  F00A         	goto	u4980
  1339   001458                     u4981:
  1340   001458  EFF3  F00A         	goto	l5303
  1341   00145C                     u4980:
  1342   00145C                     
  1343                           ;main.c: 116:              { AC_Volt_Up_to_5_selection();
  1344   00145C  EC74  F022         	call	_AC_Volt_Up_to_5_selection	;wreg free
  1345   001460                     
  1346                           ;main.c: 117:                  adc_start_conv(&ADC_Pin);
  1347   001460  0E9E               	movlw	low _ADC_Pin
  1348   001462  6E02               	movwf	adc_start_conv@my_adc^0,c
  1349   001464  0E00               	movlw	high _ADC_Pin
  1350   001466  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
  1351   001468  EC67  F022         	call	_adc_start_conv	;wreg free
  1352   00146C                     
  1353                           ;main.c: 118:                  adc_get_result(&ADC_Pin,&ADC_Val);
  1354   00146C  0E9E               	movlw	low _ADC_Pin
  1355   00146E  6E02               	movwf	adc_get_result@my_adc^0,c
  1356   001470  0E00               	movlw	high _ADC_Pin
  1357   001472  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
  1358   001474  0E78               	movlw	low _ADC_Val
  1359   001476  6E04               	movwf	adc_get_result@myres^0,c
  1360   001478  0E00               	movlw	high _ADC_Val
  1361   00147A  6E05               	movwf	(adc_get_result@myres+1)^0,c
  1362   00147C  ECF1  F020         	call	_adc_get_result	;wreg free
  1363   001480                     
  1364                           ;main.c: 119:                  x=(float)(ADC_Val*5)/1023;
  1365   001480  C078  F002         	movff	_ADC_Val,___wmul@multiplier
  1366   001484  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
  1367   001488  0E00               	movlw	0
  1368   00148A  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1369   00148C  0E05               	movlw	5
  1370   00148E  6E04               	movwf	___wmul@multiplicand^0,c
  1371   001490  EC43  F022         	call	___wmul	;wreg free
  1372   001494  C002  F008         	movff	?___wmul,___xxtofl@val
  1373   001498  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  1374   00149C  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1375   00149E  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1376   0014A0  0E00               	movlw	0
  1377   0014A2  ECBF  F019         	call	___xxtofl
  1378   0014A6  C008  F023         	movff	?___xxtofl,___fldiv@b
  1379   0014AA  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1380   0014AE  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1381   0014B2  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1382   0014B6  0E00               	movlw	0
  1383   0014B8  6E27               	movwf	___fldiv@a^0,c
  1384   0014BA  0EC0               	movlw	192
  1385   0014BC  6E28               	movwf	(___fldiv@a+1)^0,c
  1386   0014BE  0E7F               	movlw	127
  1387   0014C0  6E29               	movwf	(___fldiv@a+2)^0,c
  1388   0014C2  0E44               	movlw	68
  1389   0014C4  6E2A               	movwf	(___fldiv@a+3)^0,c
  1390   0014C6  ECC7  F016         	call	___fldiv	;wreg free
  1391   0014CA  C023  F072         	movff	?___fldiv,main@x
  1392   0014CE  C024  F073         	movff	?___fldiv+1,main@x+1
  1393   0014D2  C025  F074         	movff	?___fldiv+2,main@x+2
  1394   0014D6  C026  F075         	movff	?___fldiv+3,main@x+3
  1395   0014DA                     
  1396                           ;main.c: 120:                  x=x*(float)( 10051 / 51.0f)*(float)( 450.0f / 20000.0f)*(
      +                           22700.0f/22000 );
  1397   0014DA  0E14               	movlw	20
  1398   0014DC  6E06               	movwf	___flmul@a^0,c
  1399   0014DE  0E14               	movlw	20
  1400   0014E0  6E07               	movwf	(___flmul@a+1)^0,c
  1401   0014E2  0E45               	movlw	69
  1402   0014E4  6E08               	movwf	(___flmul@a+2)^0,c
  1403   0014E6  0E43               	movlw	67
  1404   0014E8  6E09               	movwf	(___flmul@a+3)^0,c
  1405   0014EA  C072  F002         	movff	main@x,___flmul@b
  1406   0014EE  C073  F003         	movff	main@x+1,___flmul@b+1
  1407   0014F2  C074  F004         	movff	main@x+2,___flmul@b+2
  1408   0014F6  C075  F005         	movff	main@x+3,___flmul@b+3
  1409   0014FA  ECB2  F014         	call	___flmul	;wreg free
  1410   0014FE  C002  F064         	movff	?___flmul,_main$2850
  1411   001502  C003  F065         	movff	?___flmul+1,_main$2850+1
  1412   001506  C004  F066         	movff	?___flmul+2,_main$2850+2
  1413   00150A  C005  F067         	movff	?___flmul+3,_main$2850+3
  1414   00150E                     
  1415                           ;main.c: 120:                  x=x*(float)( 10051 / 51.0f)*(float)( 450.0f / 20000.0f)*(
      +                           22700.0f/22000 );
  1416   00150E  0EEC               	movlw	236
  1417   001510  6E06               	movwf	___flmul@a^0,c
  1418   001512  0E51               	movlw	81
  1419   001514  6E07               	movwf	(___flmul@a+1)^0,c
  1420   001516  0EB8               	movlw	184
  1421   001518  6E08               	movwf	(___flmul@a+2)^0,c
  1422   00151A  0E3C               	movlw	60
  1423   00151C  6E09               	movwf	(___flmul@a+3)^0,c
  1424   00151E  C064  F002         	movff	_main$2850,___flmul@b
  1425   001522  C065  F003         	movff	_main$2850+1,___flmul@b+1
  1426   001526  C066  F004         	movff	_main$2850+2,___flmul@b+2
  1427   00152A  C067  F005         	movff	_main$2850+3,___flmul@b+3
  1428   00152E  ECB2  F014         	call	___flmul	;wreg free
  1429   001532  C002  F060         	movff	?___flmul,_main$2851
  1430   001536  C003  F061         	movff	?___flmul+1,_main$2851+1
  1431   00153A  C004  F062         	movff	?___flmul+2,_main$2851+2
  1432   00153E  C005  F063         	movff	?___flmul+3,_main$2851+3
  1433   001542                     
  1434                           ;main.c: 120:                  x=x*(float)( 10051 / 51.0f)*(float)( 450.0f / 20000.0f)*(
      +                           22700.0f/22000 );
  1435   001542  C060  F002         	movff	_main$2851,___flmul@b
  1436   001546  C061  F003         	movff	_main$2851+1,___flmul@b+1
  1437   00154A  C062  F004         	movff	_main$2851+2,___flmul@b+2
  1438   00154E  C063  F005         	movff	_main$2851+3,___flmul@b+3
  1439   001552  0E9E               	movlw	158
  1440   001554  6E06               	movwf	___flmul@a^0,c
  1441   001556  0E12               	movlw	18
  1442   001558  6E07               	movwf	(___flmul@a+1)^0,c
  1443   00155A  0E84               	movlw	132
  1444   00155C  6E08               	movwf	(___flmul@a+2)^0,c
  1445   00155E  0E3F               	movlw	63
  1446   001560  6E09               	movwf	(___flmul@a+3)^0,c
  1447   001562  ECB2  F014         	call	___flmul	;wreg free
  1448   001566  C002  F072         	movff	?___flmul,main@x
  1449   00156A  C003  F073         	movff	?___flmul+1,main@x+1
  1450   00156E  C004  F074         	movff	?___flmul+2,main@x+2
  1451   001572  C005  F075         	movff	?___flmul+3,main@x+3
  1452   001576                     
  1453                           ;main.c: 121:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  1454   001576  C072  F046         	movff	main@x,Calculate_digits@x
  1455   00157A  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  1456   00157E  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  1457   001582  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  1458   001586  0E70               	movlw	low main@x2
  1459   001588  6E4A               	movwf	Calculate_digits@x2^0,c
  1460   00158A  0E00               	movlw	high main@x2
  1461   00158C  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  1462   00158E  0E6E               	movlw	low main@x1
  1463   001590  6E4C               	movwf	Calculate_digits@x1^0,c
  1464   001592  0E00               	movlw	high main@x1
  1465   001594  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  1466   001596  0E6C               	movlw	low main@x0
  1467   001598  6E4E               	movwf	Calculate_digits@x0^0,c
  1468   00159A  0E00               	movlw	high main@x0
  1469   00159C  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  1470   00159E  0E6A               	movlw	low main@x_1
  1471   0015A0  6E50               	movwf	Calculate_digits@x_1^0,c
  1472   0015A2  0E00               	movlw	high main@x_1
  1473   0015A4  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  1474   0015A6  0E68               	movlw	low main@x_2
  1475   0015A8  6E52               	movwf	Calculate_digits@x_2^0,c
  1476   0015AA  0E00               	movlw	high main@x_2
  1477   0015AC  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  1478   0015AE  ECD3  F00F         	call	_Calculate_digits	;wreg free
  1479   0015B2                     
  1480                           ;main.c: 122:                  Display_volt(&lcd,x2,x1,x0,x_1,x_2);
  1481   0015B2  0EA6               	movlw	low _lcd
  1482   0015B4  6E28               	movwf	Display_volt@My_lcd^0,c
  1483   0015B6  0E00               	movlw	high _lcd
  1484   0015B8  6E29               	movwf	(Display_volt@My_lcd+1)^0,c
  1485   0015BA  C070  F02A         	movff	main@x2,Display_volt@x2
  1486   0015BE  C071  F02B         	movff	main@x2+1,Display_volt@x2+1
  1487   0015C2  C06E  F02C         	movff	main@x1,Display_volt@x1
  1488   0015C6  C06F  F02D         	movff	main@x1+1,Display_volt@x1+1
  1489   0015CA  C06C  F02E         	movff	main@x0,Display_volt@x0
  1490   0015CE  C06D  F02F         	movff	main@x0+1,Display_volt@x0+1
  1491   0015D2  C06A  F030         	movff	main@x_1,Display_volt@x_1
  1492   0015D6  C06B  F031         	movff	main@x_1+1,Display_volt@x_1+1
  1493   0015DA  C068  F032         	movff	main@x_2,Display_volt@x_2
  1494   0015DE  C069  F033         	movff	main@x_2+1,Display_volt@x_2+1
  1495   0015E2  ECAA  F01E         	call	_Display_volt	;wreg free
  1496   0015E6                     l5303:
  1497                           
  1498                           ;main.c: 125:             if(PORTBbits.RB1==1)
  1499   0015E6  A281               	btfss	129,1,c	;volatile
  1500   0015E8  EFF8  F00A         	goto	u4991
  1501   0015EC  EFFA  F00A         	goto	u4990
  1502   0015F0                     u4991:
  1503   0015F0  EFBF  F00B         	goto	l5323
  1504   0015F4                     u4990:
  1505   0015F4                     
  1506                           ;main.c: 126:              { AC_Volt_Up_to_50_selection();
  1507   0015F4  EC7B  F022         	call	_AC_Volt_Up_to_50_selection	;wreg free
  1508   0015F8                     
  1509                           ;main.c: 127:                  adc_start_conv(&ADC_Pin);
  1510   0015F8  0E9E               	movlw	low _ADC_Pin
  1511   0015FA  6E02               	movwf	adc_start_conv@my_adc^0,c
  1512   0015FC  0E00               	movlw	high _ADC_Pin
  1513   0015FE  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
  1514   001600  EC67  F022         	call	_adc_start_conv	;wreg free
  1515   001604                     
  1516                           ;main.c: 128:                  adc_get_result(&ADC_Pin,&ADC_Val);
  1517   001604  0E9E               	movlw	low _ADC_Pin
  1518   001606  6E02               	movwf	adc_get_result@my_adc^0,c
  1519   001608  0E00               	movlw	high _ADC_Pin
  1520   00160A  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
  1521   00160C  0E78               	movlw	low _ADC_Val
  1522   00160E  6E04               	movwf	adc_get_result@myres^0,c
  1523   001610  0E00               	movlw	high _ADC_Val
  1524   001612  6E05               	movwf	(adc_get_result@myres+1)^0,c
  1525   001614  ECF1  F020         	call	_adc_get_result	;wreg free
  1526   001618                     
  1527                           ;main.c: 129:                  x=(float)(ADC_Val*5)/1023;
  1528   001618  C078  F002         	movff	_ADC_Val,___wmul@multiplier
  1529   00161C  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
  1530   001620  0E00               	movlw	0
  1531   001622  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1532   001624  0E05               	movlw	5
  1533   001626  6E04               	movwf	___wmul@multiplicand^0,c
  1534   001628  EC43  F022         	call	___wmul	;wreg free
  1535   00162C  C002  F008         	movff	?___wmul,___xxtofl@val
  1536   001630  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  1537   001634  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1538   001636  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1539   001638  0E00               	movlw	0
  1540   00163A  ECBF  F019         	call	___xxtofl
  1541   00163E  C008  F023         	movff	?___xxtofl,___fldiv@b
  1542   001642  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1543   001646  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1544   00164A  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1545   00164E  0E00               	movlw	0
  1546   001650  6E27               	movwf	___fldiv@a^0,c
  1547   001652  0EC0               	movlw	192
  1548   001654  6E28               	movwf	(___fldiv@a+1)^0,c
  1549   001656  0E7F               	movlw	127
  1550   001658  6E29               	movwf	(___fldiv@a+2)^0,c
  1551   00165A  0E44               	movlw	68
  1552   00165C  6E2A               	movwf	(___fldiv@a+3)^0,c
  1553   00165E  ECC7  F016         	call	___fldiv	;wreg free
  1554   001662  C023  F072         	movff	?___fldiv,main@x
  1555   001666  C024  F073         	movff	?___fldiv+1,main@x+1
  1556   00166A  C025  F074         	movff	?___fldiv+2,main@x+2
  1557   00166E  C026  F075         	movff	?___fldiv+3,main@x+3
  1558   001672                     
  1559                           ;main.c: 130:                  x=x*(float)( 10051 / 51.0f)*(float)( 1350.0f / 20000.0f)*
      +                          ( 22700.0f/22000 );
  1560   001672  0E14               	movlw	20
  1561   001674  6E06               	movwf	___flmul@a^0,c
  1562   001676  0E14               	movlw	20
  1563   001678  6E07               	movwf	(___flmul@a+1)^0,c
  1564   00167A  0E45               	movlw	69
  1565   00167C  6E08               	movwf	(___flmul@a+2)^0,c
  1566   00167E  0E43               	movlw	67
  1567   001680  6E09               	movwf	(___flmul@a+3)^0,c
  1568   001682  C072  F002         	movff	main@x,___flmul@b
  1569   001686  C073  F003         	movff	main@x+1,___flmul@b+1
  1570   00168A  C074  F004         	movff	main@x+2,___flmul@b+2
  1571   00168E  C075  F005         	movff	main@x+3,___flmul@b+3
  1572   001692  ECB2  F014         	call	___flmul	;wreg free
  1573   001696  C002  F064         	movff	?___flmul,_main$2850
  1574   00169A  C003  F065         	movff	?___flmul+1,_main$2850+1
  1575   00169E  C004  F066         	movff	?___flmul+2,_main$2850+2
  1576   0016A2  C005  F067         	movff	?___flmul+3,_main$2850+3
  1577   0016A6                     
  1578                           ;main.c: 130:                  x=x*(float)( 10051 / 51.0f)*(float)( 1350.0f / 20000.0f)*
      +                          ( 22700.0f/22000 );
  1579   0016A6  0E71               	movlw	113
  1580   0016A8  6E06               	movwf	___flmul@a^0,c
  1581   0016AA  0E3D               	movlw	61
  1582   0016AC  6E07               	movwf	(___flmul@a+1)^0,c
  1583   0016AE  0E8A               	movlw	138
  1584   0016B0  6E08               	movwf	(___flmul@a+2)^0,c
  1585   0016B2  0E3D               	movlw	61
  1586   0016B4  6E09               	movwf	(___flmul@a+3)^0,c
  1587   0016B6  C064  F002         	movff	_main$2850,___flmul@b
  1588   0016BA  C065  F003         	movff	_main$2850+1,___flmul@b+1
  1589   0016BE  C066  F004         	movff	_main$2850+2,___flmul@b+2
  1590   0016C2  C067  F005         	movff	_main$2850+3,___flmul@b+3
  1591   0016C6  ECB2  F014         	call	___flmul	;wreg free
  1592   0016CA  C002  F060         	movff	?___flmul,_main$2851
  1593   0016CE  C003  F061         	movff	?___flmul+1,_main$2851+1
  1594   0016D2  C004  F062         	movff	?___flmul+2,_main$2851+2
  1595   0016D6  C005  F063         	movff	?___flmul+3,_main$2851+3
  1596   0016DA                     
  1597                           ;main.c: 130:                  x=x*(float)( 10051 / 51.0f)*(float)( 1350.0f / 20000.0f)*
      +                          ( 22700.0f/22000 );
  1598   0016DA  C060  F002         	movff	_main$2851,___flmul@b
  1599   0016DE  C061  F003         	movff	_main$2851+1,___flmul@b+1
  1600   0016E2  C062  F004         	movff	_main$2851+2,___flmul@b+2
  1601   0016E6  C063  F005         	movff	_main$2851+3,___flmul@b+3
  1602   0016EA  0E9E               	movlw	158
  1603   0016EC  6E06               	movwf	___flmul@a^0,c
  1604   0016EE  0E12               	movlw	18
  1605   0016F0  6E07               	movwf	(___flmul@a+1)^0,c
  1606   0016F2  0E84               	movlw	132
  1607   0016F4  6E08               	movwf	(___flmul@a+2)^0,c
  1608   0016F6  0E3F               	movlw	63
  1609   0016F8  6E09               	movwf	(___flmul@a+3)^0,c
  1610   0016FA  ECB2  F014         	call	___flmul	;wreg free
  1611   0016FE  C002  F072         	movff	?___flmul,main@x
  1612   001702  C003  F073         	movff	?___flmul+1,main@x+1
  1613   001706  C004  F074         	movff	?___flmul+2,main@x+2
  1614   00170A  C005  F075         	movff	?___flmul+3,main@x+3
  1615   00170E                     
  1616                           ;main.c: 131:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  1617   00170E  C072  F046         	movff	main@x,Calculate_digits@x
  1618   001712  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  1619   001716  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  1620   00171A  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  1621   00171E  0E70               	movlw	low main@x2
  1622   001720  6E4A               	movwf	Calculate_digits@x2^0,c
  1623   001722  0E00               	movlw	high main@x2
  1624   001724  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  1625   001726  0E6E               	movlw	low main@x1
  1626   001728  6E4C               	movwf	Calculate_digits@x1^0,c
  1627   00172A  0E00               	movlw	high main@x1
  1628   00172C  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  1629   00172E  0E6C               	movlw	low main@x0
  1630   001730  6E4E               	movwf	Calculate_digits@x0^0,c
  1631   001732  0E00               	movlw	high main@x0
  1632   001734  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  1633   001736  0E6A               	movlw	low main@x_1
  1634   001738  6E50               	movwf	Calculate_digits@x_1^0,c
  1635   00173A  0E00               	movlw	high main@x_1
  1636   00173C  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  1637   00173E  0E68               	movlw	low main@x_2
  1638   001740  6E52               	movwf	Calculate_digits@x_2^0,c
  1639   001742  0E00               	movlw	high main@x_2
  1640   001744  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  1641   001746  ECD3  F00F         	call	_Calculate_digits	;wreg free
  1642   00174A                     
  1643                           ;main.c: 132:                  Display_volt(&lcd,x2,x1,x0,x_1,x_2);
  1644   00174A  0EA6               	movlw	low _lcd
  1645   00174C  6E28               	movwf	Display_volt@My_lcd^0,c
  1646   00174E  0E00               	movlw	high _lcd
  1647   001750  6E29               	movwf	(Display_volt@My_lcd+1)^0,c
  1648   001752  C070  F02A         	movff	main@x2,Display_volt@x2
  1649   001756  C071  F02B         	movff	main@x2+1,Display_volt@x2+1
  1650   00175A  C06E  F02C         	movff	main@x1,Display_volt@x1
  1651   00175E  C06F  F02D         	movff	main@x1+1,Display_volt@x1+1
  1652   001762  C06C  F02E         	movff	main@x0,Display_volt@x0
  1653   001766  C06D  F02F         	movff	main@x0+1,Display_volt@x0+1
  1654   00176A  C06A  F030         	movff	main@x_1,Display_volt@x_1
  1655   00176E  C06B  F031         	movff	main@x_1+1,Display_volt@x_1+1
  1656   001772  C068  F032         	movff	main@x_2,Display_volt@x_2
  1657   001776  C069  F033         	movff	main@x_2+1,Display_volt@x_2+1
  1658   00177A  ECAA  F01E         	call	_Display_volt	;wreg free
  1659   00177E                     l5323:
  1660                           
  1661                           ;main.c: 135:             if(PORTBbits.RB0==1)
  1662   00177E  A081               	btfss	129,0,c	;volatile
  1663   001780  EFC4  F00B         	goto	u5001
  1664   001784  EFC6  F00B         	goto	u5000
  1665   001788                     u5001:
  1666   001788  EF8B  F00C         	goto	l5343
  1667   00178C                     u5000:
  1668   00178C                     
  1669                           ;main.c: 136:              { AC_Volt_Up_to_200_selection();
  1670   00178C  EC82  F022         	call	_AC_Volt_Up_to_200_selection	;wreg free
  1671   001790                     
  1672                           ;main.c: 137:                  adc_start_conv(&ADC_Pin);
  1673   001790  0E9E               	movlw	low _ADC_Pin
  1674   001792  6E02               	movwf	adc_start_conv@my_adc^0,c
  1675   001794  0E00               	movlw	high _ADC_Pin
  1676   001796  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
  1677   001798  EC67  F022         	call	_adc_start_conv	;wreg free
  1678   00179C                     
  1679                           ;main.c: 138:                  adc_get_result(&ADC_Pin,&ADC_Val);
  1680   00179C  0E9E               	movlw	low _ADC_Pin
  1681   00179E  6E02               	movwf	adc_get_result@my_adc^0,c
  1682   0017A0  0E00               	movlw	high _ADC_Pin
  1683   0017A2  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
  1684   0017A4  0E78               	movlw	low _ADC_Val
  1685   0017A6  6E04               	movwf	adc_get_result@myres^0,c
  1686   0017A8  0E00               	movlw	high _ADC_Val
  1687   0017AA  6E05               	movwf	(adc_get_result@myres+1)^0,c
  1688   0017AC  ECF1  F020         	call	_adc_get_result	;wreg free
  1689   0017B0                     
  1690                           ;main.c: 139:                  x=(float)(ADC_Val*5)/1023;
  1691   0017B0  C078  F002         	movff	_ADC_Val,___wmul@multiplier
  1692   0017B4  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
  1693   0017B8  0E00               	movlw	0
  1694   0017BA  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1695   0017BC  0E05               	movlw	5
  1696   0017BE  6E04               	movwf	___wmul@multiplicand^0,c
  1697   0017C0  EC43  F022         	call	___wmul	;wreg free
  1698   0017C4  C002  F008         	movff	?___wmul,___xxtofl@val
  1699   0017C8  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  1700   0017CC  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1701   0017CE  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1702   0017D0  0E00               	movlw	0
  1703   0017D2  ECBF  F019         	call	___xxtofl
  1704   0017D6  C008  F023         	movff	?___xxtofl,___fldiv@b
  1705   0017DA  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1706   0017DE  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1707   0017E2  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1708   0017E6  0E00               	movlw	0
  1709   0017E8  6E27               	movwf	___fldiv@a^0,c
  1710   0017EA  0EC0               	movlw	192
  1711   0017EC  6E28               	movwf	(___fldiv@a+1)^0,c
  1712   0017EE  0E7F               	movlw	127
  1713   0017F0  6E29               	movwf	(___fldiv@a+2)^0,c
  1714   0017F2  0E44               	movlw	68
  1715   0017F4  6E2A               	movwf	(___fldiv@a+3)^0,c
  1716   0017F6  ECC7  F016         	call	___fldiv	;wreg free
  1717   0017FA  C023  F072         	movff	?___fldiv,main@x
  1718   0017FE  C024  F073         	movff	?___fldiv+1,main@x+1
  1719   001802  C025  F074         	movff	?___fldiv+2,main@x+2
  1720   001806  C026  F075         	movff	?___fldiv+3,main@x+3
  1721   00180A                     
  1722                           ;main.c: 140:                  x=x*(float)( 10051 / 51.0f)*(float)( 5050.0f / 20000.0f)*
      +                          ( 22700.0f/22000 );
  1723   00180A  0E14               	movlw	20
  1724   00180C  6E06               	movwf	___flmul@a^0,c
  1725   00180E  0E14               	movlw	20
  1726   001810  6E07               	movwf	(___flmul@a+1)^0,c
  1727   001812  0E45               	movlw	69
  1728   001814  6E08               	movwf	(___flmul@a+2)^0,c
  1729   001816  0E43               	movlw	67
  1730   001818  6E09               	movwf	(___flmul@a+3)^0,c
  1731   00181A  C072  F002         	movff	main@x,___flmul@b
  1732   00181E  C073  F003         	movff	main@x+1,___flmul@b+1
  1733   001822  C074  F004         	movff	main@x+2,___flmul@b+2
  1734   001826  C075  F005         	movff	main@x+3,___flmul@b+3
  1735   00182A  ECB2  F014         	call	___flmul	;wreg free
  1736   00182E  C002  F064         	movff	?___flmul,_main$2850
  1737   001832  C003  F065         	movff	?___flmul+1,_main$2850+1
  1738   001836  C004  F066         	movff	?___flmul+2,_main$2850+2
  1739   00183A  C005  F067         	movff	?___flmul+3,_main$2850+3
  1740   00183E                     
  1741                           ;main.c: 140:                  x=x*(float)( 10051 / 51.0f)*(float)( 5050.0f / 20000.0f)*
      +                          ( 22700.0f/22000 );
  1742   00183E  0EAE               	movlw	174
  1743   001840  6E06               	movwf	___flmul@a^0,c
  1744   001842  0E47               	movlw	71
  1745   001844  6E07               	movwf	(___flmul@a+1)^0,c
  1746   001846  0E81               	movlw	129
  1747   001848  6E08               	movwf	(___flmul@a+2)^0,c
  1748   00184A  0E3E               	movlw	62
  1749   00184C  6E09               	movwf	(___flmul@a+3)^0,c
  1750   00184E  C064  F002         	movff	_main$2850,___flmul@b
  1751   001852  C065  F003         	movff	_main$2850+1,___flmul@b+1
  1752   001856  C066  F004         	movff	_main$2850+2,___flmul@b+2
  1753   00185A  C067  F005         	movff	_main$2850+3,___flmul@b+3
  1754   00185E  ECB2  F014         	call	___flmul	;wreg free
  1755   001862  C002  F060         	movff	?___flmul,_main$2851
  1756   001866  C003  F061         	movff	?___flmul+1,_main$2851+1
  1757   00186A  C004  F062         	movff	?___flmul+2,_main$2851+2
  1758   00186E  C005  F063         	movff	?___flmul+3,_main$2851+3
  1759   001872                     
  1760                           ;main.c: 140:                  x=x*(float)( 10051 / 51.0f)*(float)( 5050.0f / 20000.0f)*
      +                          ( 22700.0f/22000 );
  1761   001872  C060  F002         	movff	_main$2851,___flmul@b
  1762   001876  C061  F003         	movff	_main$2851+1,___flmul@b+1
  1763   00187A  C062  F004         	movff	_main$2851+2,___flmul@b+2
  1764   00187E  C063  F005         	movff	_main$2851+3,___flmul@b+3
  1765   001882  0E9E               	movlw	158
  1766   001884  6E06               	movwf	___flmul@a^0,c
  1767   001886  0E12               	movlw	18
  1768   001888  6E07               	movwf	(___flmul@a+1)^0,c
  1769   00188A  0E84               	movlw	132
  1770   00188C  6E08               	movwf	(___flmul@a+2)^0,c
  1771   00188E  0E3F               	movlw	63
  1772   001890  6E09               	movwf	(___flmul@a+3)^0,c
  1773   001892  ECB2  F014         	call	___flmul	;wreg free
  1774   001896  C002  F072         	movff	?___flmul,main@x
  1775   00189A  C003  F073         	movff	?___flmul+1,main@x+1
  1776   00189E  C004  F074         	movff	?___flmul+2,main@x+2
  1777   0018A2  C005  F075         	movff	?___flmul+3,main@x+3
  1778   0018A6                     
  1779                           ;main.c: 141:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  1780   0018A6  C072  F046         	movff	main@x,Calculate_digits@x
  1781   0018AA  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  1782   0018AE  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  1783   0018B2  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  1784   0018B6  0E70               	movlw	low main@x2
  1785   0018B8  6E4A               	movwf	Calculate_digits@x2^0,c
  1786   0018BA  0E00               	movlw	high main@x2
  1787   0018BC  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  1788   0018BE  0E6E               	movlw	low main@x1
  1789   0018C0  6E4C               	movwf	Calculate_digits@x1^0,c
  1790   0018C2  0E00               	movlw	high main@x1
  1791   0018C4  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  1792   0018C6  0E6C               	movlw	low main@x0
  1793   0018C8  6E4E               	movwf	Calculate_digits@x0^0,c
  1794   0018CA  0E00               	movlw	high main@x0
  1795   0018CC  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  1796   0018CE  0E6A               	movlw	low main@x_1
  1797   0018D0  6E50               	movwf	Calculate_digits@x_1^0,c
  1798   0018D2  0E00               	movlw	high main@x_1
  1799   0018D4  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  1800   0018D6  0E68               	movlw	low main@x_2
  1801   0018D8  6E52               	movwf	Calculate_digits@x_2^0,c
  1802   0018DA  0E00               	movlw	high main@x_2
  1803   0018DC  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  1804   0018DE  ECD3  F00F         	call	_Calculate_digits	;wreg free
  1805   0018E2                     
  1806                           ;main.c: 142:                  Display_volt(&lcd,x2,x1,x0,x_1,x_2);
  1807   0018E2  0EA6               	movlw	low _lcd
  1808   0018E4  6E28               	movwf	Display_volt@My_lcd^0,c
  1809   0018E6  0E00               	movlw	high _lcd
  1810   0018E8  6E29               	movwf	(Display_volt@My_lcd+1)^0,c
  1811   0018EA  C070  F02A         	movff	main@x2,Display_volt@x2
  1812   0018EE  C071  F02B         	movff	main@x2+1,Display_volt@x2+1
  1813   0018F2  C06E  F02C         	movff	main@x1,Display_volt@x1
  1814   0018F6  C06F  F02D         	movff	main@x1+1,Display_volt@x1+1
  1815   0018FA  C06C  F02E         	movff	main@x0,Display_volt@x0
  1816   0018FE  C06D  F02F         	movff	main@x0+1,Display_volt@x0+1
  1817   001902  C06A  F030         	movff	main@x_1,Display_volt@x_1
  1818   001906  C06B  F031         	movff	main@x_1+1,Display_volt@x_1+1
  1819   00190A  C068  F032         	movff	main@x_2,Display_volt@x_2
  1820   00190E  C069  F033         	movff	main@x_2+1,Display_volt@x_2+1
  1821   001912  ECAA  F01E         	call	_Display_volt	;wreg free
  1822   001916                     l5343:
  1823                           
  1824                           ;main.c: 146:             if(PORTDbits.RD7==1)
  1825   001916  AE83               	btfss	131,7,c	;volatile
  1826   001918  EF90  F00C         	goto	u5011
  1827   00191C  EF92  F00C         	goto	u5010
  1828   001920                     u5011:
  1829   001920  EF57  F00D         	goto	l5363
  1830   001924                     u5010:
  1831   001924                     
  1832                           ;main.c: 147:              { DC_Current_selection();
  1833   001924  ECA1  F022         	call	_DC_Current_selection	;wreg free
  1834   001928                     
  1835                           ;main.c: 148:                  adc_start_conv(&ADC_Pin);
  1836   001928  0E9E               	movlw	low _ADC_Pin
  1837   00192A  6E02               	movwf	adc_start_conv@my_adc^0,c
  1838   00192C  0E00               	movlw	high _ADC_Pin
  1839   00192E  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
  1840   001930  EC67  F022         	call	_adc_start_conv	;wreg free
  1841   001934                     
  1842                           ;main.c: 149:                  adc_get_result(&ADC_Pin,&ADC_Val);
  1843   001934  0E9E               	movlw	low _ADC_Pin
  1844   001936  6E02               	movwf	adc_get_result@my_adc^0,c
  1845   001938  0E00               	movlw	high _ADC_Pin
  1846   00193A  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
  1847   00193C  0E78               	movlw	low _ADC_Val
  1848   00193E  6E04               	movwf	adc_get_result@myres^0,c
  1849   001940  0E00               	movlw	high _ADC_Val
  1850   001942  6E05               	movwf	(adc_get_result@myres+1)^0,c
  1851   001944  ECF1  F020         	call	_adc_get_result	;wreg free
  1852   001948                     
  1853                           ;main.c: 150:                  x=(float)(ADC_Val*5)/1023;
  1854   001948  C078  F002         	movff	_ADC_Val,___wmul@multiplier
  1855   00194C  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
  1856   001950  0E00               	movlw	0
  1857   001952  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  1858   001954  0E05               	movlw	5
  1859   001956  6E04               	movwf	___wmul@multiplicand^0,c
  1860   001958  EC43  F022         	call	___wmul	;wreg free
  1861   00195C  C002  F008         	movff	?___wmul,___xxtofl@val
  1862   001960  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  1863   001964  6A0A               	clrf	(___xxtofl@val+2)^0,c
  1864   001966  6A0B               	clrf	(___xxtofl@val+3)^0,c
  1865   001968  0E00               	movlw	0
  1866   00196A  ECBF  F019         	call	___xxtofl
  1867   00196E  C008  F023         	movff	?___xxtofl,___fldiv@b
  1868   001972  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
  1869   001976  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
  1870   00197A  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
  1871   00197E  0E00               	movlw	0
  1872   001980  6E27               	movwf	___fldiv@a^0,c
  1873   001982  0EC0               	movlw	192
  1874   001984  6E28               	movwf	(___fldiv@a+1)^0,c
  1875   001986  0E7F               	movlw	127
  1876   001988  6E29               	movwf	(___fldiv@a+2)^0,c
  1877   00198A  0E44               	movlw	68
  1878   00198C  6E2A               	movwf	(___fldiv@a+3)^0,c
  1879   00198E  ECC7  F016         	call	___fldiv	;wreg free
  1880   001992  C023  F072         	movff	?___fldiv,main@x
  1881   001996  C024  F073         	movff	?___fldiv+1,main@x+1
  1882   00199A  C025  F074         	movff	?___fldiv+2,main@x+2
  1883   00199E  C026  F075         	movff	?___fldiv+3,main@x+3
  1884   0019A2                     
  1885                           ;main.c: 151:                  x=x*(float)( 2.0f/10)*(float)( 100350.0f/100000.0f);
  1886   0019A2  0ECD               	movlw	205
  1887   0019A4  6E06               	movwf	___flmul@a^0,c
  1888   0019A6  0ECC               	movlw	204
  1889   0019A8  6E07               	movwf	(___flmul@a+1)^0,c
  1890   0019AA  0E4C               	movlw	76
  1891   0019AC  6E08               	movwf	(___flmul@a+2)^0,c
  1892   0019AE  0E3E               	movlw	62
  1893   0019B0  6E09               	movwf	(___flmul@a+3)^0,c
  1894   0019B2  C072  F002         	movff	main@x,___flmul@b
  1895   0019B6  C073  F003         	movff	main@x+1,___flmul@b+1
  1896   0019BA  C074  F004         	movff	main@x+2,___flmul@b+2
  1897   0019BE  C075  F005         	movff	main@x+3,___flmul@b+3
  1898   0019C2  ECB2  F014         	call	___flmul	;wreg free
  1899   0019C6  C002  F064         	movff	?___flmul,_main$2850
  1900   0019CA  C003  F065         	movff	?___flmul+1,_main$2850+1
  1901   0019CE  C004  F066         	movff	?___flmul+2,_main$2850+2
  1902   0019D2  C005  F067         	movff	?___flmul+3,_main$2850+3
  1903   0019D6                     
  1904                           ;main.c: 151:                  x=x*(float)( 2.0f/10)*(float)( 100350.0f/100000.0f);
  1905   0019D6  C064  F002         	movff	_main$2850,___flmul@b
  1906   0019DA  C065  F003         	movff	_main$2850+1,___flmul@b+1
  1907   0019DE  C066  F004         	movff	_main$2850+2,___flmul@b+2
  1908   0019E2  C067  F005         	movff	_main$2850+3,___flmul@b+3
  1909   0019E6  0EB0               	movlw	176
  1910   0019E8  6E06               	movwf	___flmul@a^0,c
  1911   0019EA  0E72               	movlw	114
  1912   0019EC  6E07               	movwf	(___flmul@a+1)^0,c
  1913   0019EE  0E80               	movlw	128
  1914   0019F0  6E08               	movwf	(___flmul@a+2)^0,c
  1915   0019F2  0E3F               	movlw	63
  1916   0019F4  6E09               	movwf	(___flmul@a+3)^0,c
  1917   0019F6  ECB2  F014         	call	___flmul	;wreg free
  1918   0019FA  C002  F072         	movff	?___flmul,main@x
  1919   0019FE  C003  F073         	movff	?___flmul+1,main@x+1
  1920   001A02  C004  F074         	movff	?___flmul+2,main@x+2
  1921   001A06  C005  F075         	movff	?___flmul+3,main@x+3
  1922   001A0A                     
  1923                           ;main.c: 152:                  x=x*1000.0f;
  1924   001A0A  C072  F002         	movff	main@x,___flmul@b
  1925   001A0E  C073  F003         	movff	main@x+1,___flmul@b+1
  1926   001A12  C074  F004         	movff	main@x+2,___flmul@b+2
  1927   001A16  C075  F005         	movff	main@x+3,___flmul@b+3
  1928   001A1A  0E00               	movlw	0
  1929   001A1C  6E06               	movwf	___flmul@a^0,c
  1930   001A1E  0E00               	movlw	0
  1931   001A20  6E07               	movwf	(___flmul@a+1)^0,c
  1932   001A22  0E7A               	movlw	122
  1933   001A24  6E08               	movwf	(___flmul@a+2)^0,c
  1934   001A26  0E44               	movlw	68
  1935   001A28  6E09               	movwf	(___flmul@a+3)^0,c
  1936   001A2A  ECB2  F014         	call	___flmul	;wreg free
  1937   001A2E  C002  F072         	movff	?___flmul,main@x
  1938   001A32  C003  F073         	movff	?___flmul+1,main@x+1
  1939   001A36  C004  F074         	movff	?___flmul+2,main@x+2
  1940   001A3A  C005  F075         	movff	?___flmul+3,main@x+3
  1941   001A3E                     
  1942                           ;main.c: 153:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  1943   001A3E  C072  F046         	movff	main@x,Calculate_digits@x
  1944   001A42  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  1945   001A46  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  1946   001A4A  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  1947   001A4E  0E70               	movlw	low main@x2
  1948   001A50  6E4A               	movwf	Calculate_digits@x2^0,c
  1949   001A52  0E00               	movlw	high main@x2
  1950   001A54  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  1951   001A56  0E6E               	movlw	low main@x1
  1952   001A58  6E4C               	movwf	Calculate_digits@x1^0,c
  1953   001A5A  0E00               	movlw	high main@x1
  1954   001A5C  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  1955   001A5E  0E6C               	movlw	low main@x0
  1956   001A60  6E4E               	movwf	Calculate_digits@x0^0,c
  1957   001A62  0E00               	movlw	high main@x0
  1958   001A64  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  1959   001A66  0E6A               	movlw	low main@x_1
  1960   001A68  6E50               	movwf	Calculate_digits@x_1^0,c
  1961   001A6A  0E00               	movlw	high main@x_1
  1962   001A6C  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  1963   001A6E  0E68               	movlw	low main@x_2
  1964   001A70  6E52               	movwf	Calculate_digits@x_2^0,c
  1965   001A72  0E00               	movlw	high main@x_2
  1966   001A74  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  1967   001A76  ECD3  F00F         	call	_Calculate_digits	;wreg free
  1968   001A7A                     
  1969                           ;main.c: 154:                  Display_Current(&lcd,x2,x1,x0,x_1,x_2);
  1970   001A7A  0EA6               	movlw	low _lcd
  1971   001A7C  6E28               	movwf	Display_Current@My_lcd^0,c
  1972   001A7E  0E00               	movlw	high _lcd
  1973   001A80  6E29               	movwf	(Display_Current@My_lcd+1)^0,c
  1974   001A82  C070  F02A         	movff	main@x2,Display_Current@x2
  1975   001A86  C071  F02B         	movff	main@x2+1,Display_Current@x2+1
  1976   001A8A  C06E  F02C         	movff	main@x1,Display_Current@x1
  1977   001A8E  C06F  F02D         	movff	main@x1+1,Display_Current@x1+1
  1978   001A92  C06C  F02E         	movff	main@x0,Display_Current@x0
  1979   001A96  C06D  F02F         	movff	main@x0+1,Display_Current@x0+1
  1980   001A9A  C06A  F030         	movff	main@x_1,Display_Current@x_1
  1981   001A9E  C06B  F031         	movff	main@x_1+1,Display_Current@x_1+1
  1982   001AA2  C068  F032         	movff	main@x_2,Display_Current@x_2
  1983   001AA6  C069  F033         	movff	main@x_2+1,Display_Current@x_2+1
  1984   001AAA  ECA6  F01F         	call	_Display_Current	;wreg free
  1985   001AAE                     l5363:
  1986                           
  1987                           ;main.c: 157:             if(PORTDbits.RD6==1)
  1988   001AAE  AC83               	btfss	131,6,c	;volatile
  1989   001AB0  EF5C  F00D         	goto	u5021
  1990   001AB4  EF5E  F00D         	goto	u5020
  1991   001AB8                     u5021:
  1992   001AB8  EF23  F00E         	goto	l5383
  1993   001ABC                     u5020:
  1994   001ABC                     
  1995                           ;main.c: 158:              { AC_Current_selection();
  1996   001ABC  EC9B  F022         	call	_AC_Current_selection	;wreg free
  1997   001AC0                     
  1998                           ;main.c: 159:                  adc_start_conv(&ADC_Pin);
  1999   001AC0  0E9E               	movlw	low _ADC_Pin
  2000   001AC2  6E02               	movwf	adc_start_conv@my_adc^0,c
  2001   001AC4  0E00               	movlw	high _ADC_Pin
  2002   001AC6  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
  2003   001AC8  EC67  F022         	call	_adc_start_conv	;wreg free
  2004   001ACC                     
  2005                           ;main.c: 160:                  adc_get_result(&ADC_Pin,&ADC_Val);
  2006   001ACC  0E9E               	movlw	low _ADC_Pin
  2007   001ACE  6E02               	movwf	adc_get_result@my_adc^0,c
  2008   001AD0  0E00               	movlw	high _ADC_Pin
  2009   001AD2  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
  2010   001AD4  0E78               	movlw	low _ADC_Val
  2011   001AD6  6E04               	movwf	adc_get_result@myres^0,c
  2012   001AD8  0E00               	movlw	high _ADC_Val
  2013   001ADA  6E05               	movwf	(adc_get_result@myres+1)^0,c
  2014   001ADC  ECF1  F020         	call	_adc_get_result	;wreg free
  2015   001AE0                     
  2016                           ;main.c: 161:                  x=(float)(ADC_Val*5)/1023;
  2017   001AE0  C078  F002         	movff	_ADC_Val,___wmul@multiplier
  2018   001AE4  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
  2019   001AE8  0E00               	movlw	0
  2020   001AEA  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  2021   001AEC  0E05               	movlw	5
  2022   001AEE  6E04               	movwf	___wmul@multiplicand^0,c
  2023   001AF0  EC43  F022         	call	___wmul	;wreg free
  2024   001AF4  C002  F008         	movff	?___wmul,___xxtofl@val
  2025   001AF8  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  2026   001AFC  6A0A               	clrf	(___xxtofl@val+2)^0,c
  2027   001AFE  6A0B               	clrf	(___xxtofl@val+3)^0,c
  2028   001B00  0E00               	movlw	0
  2029   001B02  ECBF  F019         	call	___xxtofl
  2030   001B06  C008  F023         	movff	?___xxtofl,___fldiv@b
  2031   001B0A  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
  2032   001B0E  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
  2033   001B12  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
  2034   001B16  0E00               	movlw	0
  2035   001B18  6E27               	movwf	___fldiv@a^0,c
  2036   001B1A  0EC0               	movlw	192
  2037   001B1C  6E28               	movwf	(___fldiv@a+1)^0,c
  2038   001B1E  0E7F               	movlw	127
  2039   001B20  6E29               	movwf	(___fldiv@a+2)^0,c
  2040   001B22  0E44               	movlw	68
  2041   001B24  6E2A               	movwf	(___fldiv@a+3)^0,c
  2042   001B26  ECC7  F016         	call	___fldiv	;wreg free
  2043   001B2A  C023  F072         	movff	?___fldiv,main@x
  2044   001B2E  C024  F073         	movff	?___fldiv+1,main@x+1
  2045   001B32  C025  F074         	movff	?___fldiv+2,main@x+2
  2046   001B36  C026  F075         	movff	?___fldiv+3,main@x+3
  2047   001B3A                     
  2048                           ;main.c: 162:                  x=x*(float)( 2.0f/10)*(float)( 22700.0f/22000.0f);
  2049   001B3A  0ECD               	movlw	205
  2050   001B3C  6E06               	movwf	___flmul@a^0,c
  2051   001B3E  0ECC               	movlw	204
  2052   001B40  6E07               	movwf	(___flmul@a+1)^0,c
  2053   001B42  0E4C               	movlw	76
  2054   001B44  6E08               	movwf	(___flmul@a+2)^0,c
  2055   001B46  0E3E               	movlw	62
  2056   001B48  6E09               	movwf	(___flmul@a+3)^0,c
  2057   001B4A  C072  F002         	movff	main@x,___flmul@b
  2058   001B4E  C073  F003         	movff	main@x+1,___flmul@b+1
  2059   001B52  C074  F004         	movff	main@x+2,___flmul@b+2
  2060   001B56  C075  F005         	movff	main@x+3,___flmul@b+3
  2061   001B5A  ECB2  F014         	call	___flmul	;wreg free
  2062   001B5E  C002  F064         	movff	?___flmul,_main$2850
  2063   001B62  C003  F065         	movff	?___flmul+1,_main$2850+1
  2064   001B66  C004  F066         	movff	?___flmul+2,_main$2850+2
  2065   001B6A  C005  F067         	movff	?___flmul+3,_main$2850+3
  2066   001B6E                     
  2067                           ;main.c: 162:                  x=x*(float)( 2.0f/10)*(float)( 22700.0f/22000.0f);
  2068   001B6E  C064  F002         	movff	_main$2850,___flmul@b
  2069   001B72  C065  F003         	movff	_main$2850+1,___flmul@b+1
  2070   001B76  C066  F004         	movff	_main$2850+2,___flmul@b+2
  2071   001B7A  C067  F005         	movff	_main$2850+3,___flmul@b+3
  2072   001B7E  0E9E               	movlw	158
  2073   001B80  6E06               	movwf	___flmul@a^0,c
  2074   001B82  0E12               	movlw	18
  2075   001B84  6E07               	movwf	(___flmul@a+1)^0,c
  2076   001B86  0E84               	movlw	132
  2077   001B88  6E08               	movwf	(___flmul@a+2)^0,c
  2078   001B8A  0E3F               	movlw	63
  2079   001B8C  6E09               	movwf	(___flmul@a+3)^0,c
  2080   001B8E  ECB2  F014         	call	___flmul	;wreg free
  2081   001B92  C002  F072         	movff	?___flmul,main@x
  2082   001B96  C003  F073         	movff	?___flmul+1,main@x+1
  2083   001B9A  C004  F074         	movff	?___flmul+2,main@x+2
  2084   001B9E  C005  F075         	movff	?___flmul+3,main@x+3
  2085   001BA2                     
  2086                           ;main.c: 163:                  x=x*1000.0f;
  2087   001BA2  C072  F002         	movff	main@x,___flmul@b
  2088   001BA6  C073  F003         	movff	main@x+1,___flmul@b+1
  2089   001BAA  C074  F004         	movff	main@x+2,___flmul@b+2
  2090   001BAE  C075  F005         	movff	main@x+3,___flmul@b+3
  2091   001BB2  0E00               	movlw	0
  2092   001BB4  6E06               	movwf	___flmul@a^0,c
  2093   001BB6  0E00               	movlw	0
  2094   001BB8  6E07               	movwf	(___flmul@a+1)^0,c
  2095   001BBA  0E7A               	movlw	122
  2096   001BBC  6E08               	movwf	(___flmul@a+2)^0,c
  2097   001BBE  0E44               	movlw	68
  2098   001BC0  6E09               	movwf	(___flmul@a+3)^0,c
  2099   001BC2  ECB2  F014         	call	___flmul	;wreg free
  2100   001BC6  C002  F072         	movff	?___flmul,main@x
  2101   001BCA  C003  F073         	movff	?___flmul+1,main@x+1
  2102   001BCE  C004  F074         	movff	?___flmul+2,main@x+2
  2103   001BD2  C005  F075         	movff	?___flmul+3,main@x+3
  2104   001BD6                     
  2105                           ;main.c: 164:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  2106   001BD6  C072  F046         	movff	main@x,Calculate_digits@x
  2107   001BDA  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  2108   001BDE  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  2109   001BE2  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  2110   001BE6  0E70               	movlw	low main@x2
  2111   001BE8  6E4A               	movwf	Calculate_digits@x2^0,c
  2112   001BEA  0E00               	movlw	high main@x2
  2113   001BEC  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  2114   001BEE  0E6E               	movlw	low main@x1
  2115   001BF0  6E4C               	movwf	Calculate_digits@x1^0,c
  2116   001BF2  0E00               	movlw	high main@x1
  2117   001BF4  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  2118   001BF6  0E6C               	movlw	low main@x0
  2119   001BF8  6E4E               	movwf	Calculate_digits@x0^0,c
  2120   001BFA  0E00               	movlw	high main@x0
  2121   001BFC  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  2122   001BFE  0E6A               	movlw	low main@x_1
  2123   001C00  6E50               	movwf	Calculate_digits@x_1^0,c
  2124   001C02  0E00               	movlw	high main@x_1
  2125   001C04  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  2126   001C06  0E68               	movlw	low main@x_2
  2127   001C08  6E52               	movwf	Calculate_digits@x_2^0,c
  2128   001C0A  0E00               	movlw	high main@x_2
  2129   001C0C  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  2130   001C0E  ECD3  F00F         	call	_Calculate_digits	;wreg free
  2131   001C12                     
  2132                           ;main.c: 165:                  Display_Current(&lcd,x2,x1,x0,x_1,x_2);
  2133   001C12  0EA6               	movlw	low _lcd
  2134   001C14  6E28               	movwf	Display_Current@My_lcd^0,c
  2135   001C16  0E00               	movlw	high _lcd
  2136   001C18  6E29               	movwf	(Display_Current@My_lcd+1)^0,c
  2137   001C1A  C070  F02A         	movff	main@x2,Display_Current@x2
  2138   001C1E  C071  F02B         	movff	main@x2+1,Display_Current@x2+1
  2139   001C22  C06E  F02C         	movff	main@x1,Display_Current@x1
  2140   001C26  C06F  F02D         	movff	main@x1+1,Display_Current@x1+1
  2141   001C2A  C06C  F02E         	movff	main@x0,Display_Current@x0
  2142   001C2E  C06D  F02F         	movff	main@x0+1,Display_Current@x0+1
  2143   001C32  C06A  F030         	movff	main@x_1,Display_Current@x_1
  2144   001C36  C06B  F031         	movff	main@x_1+1,Display_Current@x_1+1
  2145   001C3A  C068  F032         	movff	main@x_2,Display_Current@x_2
  2146   001C3E  C069  F033         	movff	main@x_2+1,Display_Current@x_2+1
  2147   001C42  ECA6  F01F         	call	_Display_Current	;wreg free
  2148   001C46                     l5383:
  2149                           
  2150                           ;main.c: 168:             if(PORTDbits.RD5==1)
  2151   001C46  AA83               	btfss	131,5,c	;volatile
  2152   001C48  EF28  F00E         	goto	u5031
  2153   001C4C  EF2A  F00E         	goto	u5030
  2154   001C50                     u5031:
  2155   001C50  EFF9  F00E         	goto	l5401
  2156   001C54                     u5030:
  2157   001C54                     
  2158                           ;main.c: 169:              {;main.c: 170:                  Resistance_Up_to_10k_selectio
      +                          n();
  2159   001C54  ECAA  F022         	call	_Resistance_Up_to_10k_selection	;wreg free
  2160   001C58                     
  2161                           ;main.c: 171:                  adc_start_conv(&ADC_Pin);
  2162   001C58  0E9E               	movlw	low _ADC_Pin
  2163   001C5A  6E02               	movwf	adc_start_conv@my_adc^0,c
  2164   001C5C  0E00               	movlw	high _ADC_Pin
  2165   001C5E  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
  2166   001C60  EC67  F022         	call	_adc_start_conv	;wreg free
  2167   001C64                     
  2168                           ;main.c: 172:                  adc_get_result(&ADC_Pin,&ADC_Val);
  2169   001C64  0E9E               	movlw	low _ADC_Pin
  2170   001C66  6E02               	movwf	adc_get_result@my_adc^0,c
  2171   001C68  0E00               	movlw	high _ADC_Pin
  2172   001C6A  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
  2173   001C6C  0E78               	movlw	low _ADC_Val
  2174   001C6E  6E04               	movwf	adc_get_result@myres^0,c
  2175   001C70  0E00               	movlw	high _ADC_Val
  2176   001C72  6E05               	movwf	(adc_get_result@myres+1)^0,c
  2177   001C74  ECF1  F020         	call	_adc_get_result	;wreg free
  2178   001C78                     
  2179                           ;main.c: 173:                  x=(float)(ADC_Val*5)/1023;
  2180   001C78  C078  F002         	movff	_ADC_Val,___wmul@multiplier
  2181   001C7C  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
  2182   001C80  0E00               	movlw	0
  2183   001C82  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  2184   001C84  0E05               	movlw	5
  2185   001C86  6E04               	movwf	___wmul@multiplicand^0,c
  2186   001C88  EC43  F022         	call	___wmul	;wreg free
  2187   001C8C  C002  F008         	movff	?___wmul,___xxtofl@val
  2188   001C90  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  2189   001C94  6A0A               	clrf	(___xxtofl@val+2)^0,c
  2190   001C96  6A0B               	clrf	(___xxtofl@val+3)^0,c
  2191   001C98  0E00               	movlw	0
  2192   001C9A  ECBF  F019         	call	___xxtofl
  2193   001C9E  C008  F023         	movff	?___xxtofl,___fldiv@b
  2194   001CA2  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
  2195   001CA6  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
  2196   001CAA  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
  2197   001CAE  0E00               	movlw	0
  2198   001CB0  6E27               	movwf	___fldiv@a^0,c
  2199   001CB2  0EC0               	movlw	192
  2200   001CB4  6E28               	movwf	(___fldiv@a+1)^0,c
  2201   001CB6  0E7F               	movlw	127
  2202   001CB8  6E29               	movwf	(___fldiv@a+2)^0,c
  2203   001CBA  0E44               	movlw	68
  2204   001CBC  6E2A               	movwf	(___fldiv@a+3)^0,c
  2205   001CBE  ECC7  F016         	call	___fldiv	;wreg free
  2206   001CC2  C023  F072         	movff	?___fldiv,main@x
  2207   001CC6  C024  F073         	movff	?___fldiv+1,main@x+1
  2208   001CCA  C025  F074         	movff	?___fldiv+2,main@x+2
  2209   001CCE  C026  F075         	movff	?___fldiv+3,main@x+3
  2210   001CD2                     
  2211                           ;main.c: 174:                  x=(float)(1350.0f * x) / (float)( 5.0f-x );
  2212   001CD2  0E00               	movlw	0
  2213   001CD4  6E06               	movwf	___flmul@a^0,c
  2214   001CD6  0EC0               	movlw	192
  2215   001CD8  6E07               	movwf	(___flmul@a+1)^0,c
  2216   001CDA  0EA8               	movlw	168
  2217   001CDC  6E08               	movwf	(___flmul@a+2)^0,c
  2218   001CDE  0E44               	movlw	68
  2219   001CE0  6E09               	movwf	(___flmul@a+3)^0,c
  2220   001CE2  C072  F002         	movff	main@x,___flmul@b
  2221   001CE6  C073  F003         	movff	main@x+1,___flmul@b+1
  2222   001CEA  C074  F004         	movff	main@x+2,___flmul@b+2
  2223   001CEE  C075  F005         	movff	main@x+3,___flmul@b+3
  2224   001CF2  ECB2  F014         	call	___flmul	;wreg free
  2225   001CF6  C002  F023         	movff	?___flmul,___fldiv@b
  2226   001CFA  C003  F024         	movff	?___flmul+1,___fldiv@b+1
  2227   001CFE  C004  F025         	movff	?___flmul+2,___fldiv@b+2
  2228   001D02  C005  F026         	movff	?___flmul+3,___fldiv@b+3
  2229   001D06  C072  F01F         	movff	main@x,___flsub@a
  2230   001D0A  C073  F020         	movff	main@x+1,___flsub@a+1
  2231   001D0E  C074  F021         	movff	main@x+2,___flsub@a+2
  2232   001D12  C075  F022         	movff	main@x+3,___flsub@a+3
  2233   001D16  0E00               	movlw	0
  2234   001D18  6E1B               	movwf	___flsub@b^0,c
  2235   001D1A  0E00               	movlw	0
  2236   001D1C  6E1C               	movwf	(___flsub@b+1)^0,c
  2237   001D1E  0EA0               	movlw	160
  2238   001D20  6E1D               	movwf	(___flsub@b+2)^0,c
  2239   001D22  0E40               	movlw	64
  2240   001D24  6E1E               	movwf	(___flsub@b+3)^0,c
  2241   001D26  EC0A  F022         	call	___flsub	;wreg free
  2242   001D2A  C01B  F027         	movff	?___flsub,___fldiv@a
  2243   001D2E  C01C  F028         	movff	?___flsub+1,___fldiv@a+1
  2244   001D32  C01D  F029         	movff	?___flsub+2,___fldiv@a+2
  2245   001D36  C01E  F02A         	movff	?___flsub+3,___fldiv@a+3
  2246   001D3A  ECC7  F016         	call	___fldiv	;wreg free
  2247   001D3E  C023  F072         	movff	?___fldiv,main@x
  2248   001D42  C024  F073         	movff	?___fldiv+1,main@x+1
  2249   001D46  C025  F074         	movff	?___fldiv+2,main@x+2
  2250   001D4A  C026  F075         	movff	?___fldiv+3,main@x+3
  2251   001D4E                     
  2252                           ;main.c: 175:                  x=x/1000.0f;
  2253   001D4E  C072  F023         	movff	main@x,___fldiv@b
  2254   001D52  C073  F024         	movff	main@x+1,___fldiv@b+1
  2255   001D56  C074  F025         	movff	main@x+2,___fldiv@b+2
  2256   001D5A  C075  F026         	movff	main@x+3,___fldiv@b+3
  2257   001D5E  0E00               	movlw	0
  2258   001D60  6E27               	movwf	___fldiv@a^0,c
  2259   001D62  0E00               	movlw	0
  2260   001D64  6E28               	movwf	(___fldiv@a+1)^0,c
  2261   001D66  0E7A               	movlw	122
  2262   001D68  6E29               	movwf	(___fldiv@a+2)^0,c
  2263   001D6A  0E44               	movlw	68
  2264   001D6C  6E2A               	movwf	(___fldiv@a+3)^0,c
  2265   001D6E  ECC7  F016         	call	___fldiv	;wreg free
  2266   001D72  C023  F072         	movff	?___fldiv,main@x
  2267   001D76  C024  F073         	movff	?___fldiv+1,main@x+1
  2268   001D7A  C025  F074         	movff	?___fldiv+2,main@x+2
  2269   001D7E  C026  F075         	movff	?___fldiv+3,main@x+3
  2270   001D82                     
  2271                           ;main.c: 176:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  2272   001D82  C072  F046         	movff	main@x,Calculate_digits@x
  2273   001D86  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  2274   001D8A  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  2275   001D8E  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  2276   001D92  0E70               	movlw	low main@x2
  2277   001D94  6E4A               	movwf	Calculate_digits@x2^0,c
  2278   001D96  0E00               	movlw	high main@x2
  2279   001D98  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  2280   001D9A  0E6E               	movlw	low main@x1
  2281   001D9C  6E4C               	movwf	Calculate_digits@x1^0,c
  2282   001D9E  0E00               	movlw	high main@x1
  2283   001DA0  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  2284   001DA2  0E6C               	movlw	low main@x0
  2285   001DA4  6E4E               	movwf	Calculate_digits@x0^0,c
  2286   001DA6  0E00               	movlw	high main@x0
  2287   001DA8  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  2288   001DAA  0E6A               	movlw	low main@x_1
  2289   001DAC  6E50               	movwf	Calculate_digits@x_1^0,c
  2290   001DAE  0E00               	movlw	high main@x_1
  2291   001DB0  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  2292   001DB2  0E68               	movlw	low main@x_2
  2293   001DB4  6E52               	movwf	Calculate_digits@x_2^0,c
  2294   001DB6  0E00               	movlw	high main@x_2
  2295   001DB8  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  2296   001DBA  ECD3  F00F         	call	_Calculate_digits	;wreg free
  2297   001DBE                     
  2298                           ;main.c: 177:                  Display_Resistance(&lcd,x2,x1,x0,x_1,x_2);
  2299   001DBE  0EA6               	movlw	low _lcd
  2300   001DC0  6E28               	movwf	Display_Resistance@My_lcd^0,c
  2301   001DC2  0E00               	movlw	high _lcd
  2302   001DC4  6E29               	movwf	(Display_Resistance@My_lcd+1)^0,c
  2303   001DC6  C070  F02A         	movff	main@x2,Display_Resistance@x2
  2304   001DCA  C071  F02B         	movff	main@x2+1,Display_Resistance@x2+1
  2305   001DCE  C06E  F02C         	movff	main@x1,Display_Resistance@x1
  2306   001DD2  C06F  F02D         	movff	main@x1+1,Display_Resistance@x1+1
  2307   001DD6  C06C  F02E         	movff	main@x0,Display_Resistance@x0
  2308   001DDA  C06D  F02F         	movff	main@x0+1,Display_Resistance@x0+1
  2309   001DDE  C06A  F030         	movff	main@x_1,Display_Resistance@x_1
  2310   001DE2  C06B  F031         	movff	main@x_1+1,Display_Resistance@x_1+1
  2311   001DE6  C068  F032         	movff	main@x_2,Display_Resistance@x_2
  2312   001DEA  C069  F033         	movff	main@x_2+1,Display_Resistance@x_2+1
  2313   001DEE  EC28  F01F         	call	_Display_Resistance	;wreg free
  2314   001DF2                     l5401:
  2315                           
  2316                           ;main.c: 181:             if(PORTDbits.RD4==1)
  2317   001DF2  A883               	btfss	131,4,c	;volatile
  2318   001DF4  EFFE  F00E         	goto	u5041
  2319   001DF8  EF00  F00F         	goto	u5040
  2320   001DFC                     u5041:
  2321   001DFC  EF11  F008         	goto	l5229
  2322   001E00                     u5040:
  2323   001E00                     
  2324                           ;main.c: 182:              { Resistance_Up_to_1M_selection();
  2325   001E00  ECA6  F022         	call	_Resistance_Up_to_1M_selection	;wreg free
  2326   001E04                     
  2327                           ;main.c: 183:                  adc_start_conv(&ADC_Pin);
  2328   001E04  0E9E               	movlw	low _ADC_Pin
  2329   001E06  6E02               	movwf	adc_start_conv@my_adc^0,c
  2330   001E08  0E00               	movlw	high _ADC_Pin
  2331   001E0A  6E03               	movwf	(adc_start_conv@my_adc+1)^0,c
  2332   001E0C  EC67  F022         	call	_adc_start_conv	;wreg free
  2333   001E10                     
  2334                           ;main.c: 184:                  adc_get_result(&ADC_Pin,&ADC_Val);
  2335   001E10  0E9E               	movlw	low _ADC_Pin
  2336   001E12  6E02               	movwf	adc_get_result@my_adc^0,c
  2337   001E14  0E00               	movlw	high _ADC_Pin
  2338   001E16  6E03               	movwf	(adc_get_result@my_adc+1)^0,c
  2339   001E18  0E78               	movlw	low _ADC_Val
  2340   001E1A  6E04               	movwf	adc_get_result@myres^0,c
  2341   001E1C  0E00               	movlw	high _ADC_Val
  2342   001E1E  6E05               	movwf	(adc_get_result@myres+1)^0,c
  2343   001E20  ECF1  F020         	call	_adc_get_result	;wreg free
  2344   001E24                     
  2345                           ;main.c: 185:                  x=(float)(ADC_Val*5)/1023;
  2346   001E24  C078  F002         	movff	_ADC_Val,___wmul@multiplier
  2347   001E28  C079  F003         	movff	_ADC_Val+1,___wmul@multiplier+1
  2348   001E2C  0E00               	movlw	0
  2349   001E2E  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  2350   001E30  0E05               	movlw	5
  2351   001E32  6E04               	movwf	___wmul@multiplicand^0,c
  2352   001E34  EC43  F022         	call	___wmul	;wreg free
  2353   001E38  C002  F008         	movff	?___wmul,___xxtofl@val
  2354   001E3C  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  2355   001E40  6A0A               	clrf	(___xxtofl@val+2)^0,c
  2356   001E42  6A0B               	clrf	(___xxtofl@val+3)^0,c
  2357   001E44  0E00               	movlw	0
  2358   001E46  ECBF  F019         	call	___xxtofl
  2359   001E4A  C008  F023         	movff	?___xxtofl,___fldiv@b
  2360   001E4E  C009  F024         	movff	?___xxtofl+1,___fldiv@b+1
  2361   001E52  C00A  F025         	movff	?___xxtofl+2,___fldiv@b+2
  2362   001E56  C00B  F026         	movff	?___xxtofl+3,___fldiv@b+3
  2363   001E5A  0E00               	movlw	0
  2364   001E5C  6E27               	movwf	___fldiv@a^0,c
  2365   001E5E  0EC0               	movlw	192
  2366   001E60  6E28               	movwf	(___fldiv@a+1)^0,c
  2367   001E62  0E7F               	movlw	127
  2368   001E64  6E29               	movwf	(___fldiv@a+2)^0,c
  2369   001E66  0E44               	movlw	68
  2370   001E68  6E2A               	movwf	(___fldiv@a+3)^0,c
  2371   001E6A  ECC7  F016         	call	___fldiv	;wreg free
  2372   001E6E  C023  F072         	movff	?___fldiv,main@x
  2373   001E72  C024  F073         	movff	?___fldiv+1,main@x+1
  2374   001E76  C025  F074         	movff	?___fldiv+2,main@x+2
  2375   001E7A  C026  F075         	movff	?___fldiv+3,main@x+3
  2376   001E7E                     
  2377                           ;main.c: 186:                  x=(float)(1500350.0f * x) / (float)( 5.0f-x );
  2378   001E7E  0EF0               	movlw	240
  2379   001E80  6E06               	movwf	___flmul@a^0,c
  2380   001E82  0E25               	movlw	37
  2381   001E84  6E07               	movwf	(___flmul@a+1)^0,c
  2382   001E86  0EB7               	movlw	183
  2383   001E88  6E08               	movwf	(___flmul@a+2)^0,c
  2384   001E8A  0E49               	movlw	73
  2385   001E8C  6E09               	movwf	(___flmul@a+3)^0,c
  2386   001E8E  C072  F002         	movff	main@x,___flmul@b
  2387   001E92  C073  F003         	movff	main@x+1,___flmul@b+1
  2388   001E96  C074  F004         	movff	main@x+2,___flmul@b+2
  2389   001E9A  C075  F005         	movff	main@x+3,___flmul@b+3
  2390   001E9E  ECB2  F014         	call	___flmul	;wreg free
  2391   001EA2  C002  F023         	movff	?___flmul,___fldiv@b
  2392   001EA6  C003  F024         	movff	?___flmul+1,___fldiv@b+1
  2393   001EAA  C004  F025         	movff	?___flmul+2,___fldiv@b+2
  2394   001EAE  C005  F026         	movff	?___flmul+3,___fldiv@b+3
  2395   001EB2  C072  F01F         	movff	main@x,___flsub@a
  2396   001EB6  C073  F020         	movff	main@x+1,___flsub@a+1
  2397   001EBA  C074  F021         	movff	main@x+2,___flsub@a+2
  2398   001EBE  C075  F022         	movff	main@x+3,___flsub@a+3
  2399   001EC2  0E00               	movlw	0
  2400   001EC4  6E1B               	movwf	___flsub@b^0,c
  2401   001EC6  0E00               	movlw	0
  2402   001EC8  6E1C               	movwf	(___flsub@b+1)^0,c
  2403   001ECA  0EA0               	movlw	160
  2404   001ECC  6E1D               	movwf	(___flsub@b+2)^0,c
  2405   001ECE  0E40               	movlw	64
  2406   001ED0  6E1E               	movwf	(___flsub@b+3)^0,c
  2407   001ED2  EC0A  F022         	call	___flsub	;wreg free
  2408   001ED6  C01B  F027         	movff	?___flsub,___fldiv@a
  2409   001EDA  C01C  F028         	movff	?___flsub+1,___fldiv@a+1
  2410   001EDE  C01D  F029         	movff	?___flsub+2,___fldiv@a+2
  2411   001EE2  C01E  F02A         	movff	?___flsub+3,___fldiv@a+3
  2412   001EE6  ECC7  F016         	call	___fldiv	;wreg free
  2413   001EEA  C023  F072         	movff	?___fldiv,main@x
  2414   001EEE  C024  F073         	movff	?___fldiv+1,main@x+1
  2415   001EF2  C025  F074         	movff	?___fldiv+2,main@x+2
  2416   001EF6  C026  F075         	movff	?___fldiv+3,main@x+3
  2417   001EFA                     
  2418                           ;main.c: 187:                  x=x/1000.0f;
  2419   001EFA  C072  F023         	movff	main@x,___fldiv@b
  2420   001EFE  C073  F024         	movff	main@x+1,___fldiv@b+1
  2421   001F02  C074  F025         	movff	main@x+2,___fldiv@b+2
  2422   001F06  C075  F026         	movff	main@x+3,___fldiv@b+3
  2423   001F0A  0E00               	movlw	0
  2424   001F0C  6E27               	movwf	___fldiv@a^0,c
  2425   001F0E  0E00               	movlw	0
  2426   001F10  6E28               	movwf	(___fldiv@a+1)^0,c
  2427   001F12  0E7A               	movlw	122
  2428   001F14  6E29               	movwf	(___fldiv@a+2)^0,c
  2429   001F16  0E44               	movlw	68
  2430   001F18  6E2A               	movwf	(___fldiv@a+3)^0,c
  2431   001F1A  ECC7  F016         	call	___fldiv	;wreg free
  2432   001F1E  C023  F072         	movff	?___fldiv,main@x
  2433   001F22  C024  F073         	movff	?___fldiv+1,main@x+1
  2434   001F26  C025  F074         	movff	?___fldiv+2,main@x+2
  2435   001F2A  C026  F075         	movff	?___fldiv+3,main@x+3
  2436   001F2E                     
  2437                           ;main.c: 188:                  Calculate_digits(x,&x2,&x1,&x0,&x_1,&x_2);
  2438   001F2E  C072  F046         	movff	main@x,Calculate_digits@x
  2439   001F32  C073  F047         	movff	main@x+1,Calculate_digits@x+1
  2440   001F36  C074  F048         	movff	main@x+2,Calculate_digits@x+2
  2441   001F3A  C075  F049         	movff	main@x+3,Calculate_digits@x+3
  2442   001F3E  0E70               	movlw	low main@x2
  2443   001F40  6E4A               	movwf	Calculate_digits@x2^0,c
  2444   001F42  0E00               	movlw	high main@x2
  2445   001F44  6E4B               	movwf	(Calculate_digits@x2+1)^0,c
  2446   001F46  0E6E               	movlw	low main@x1
  2447   001F48  6E4C               	movwf	Calculate_digits@x1^0,c
  2448   001F4A  0E00               	movlw	high main@x1
  2449   001F4C  6E4D               	movwf	(Calculate_digits@x1+1)^0,c
  2450   001F4E  0E6C               	movlw	low main@x0
  2451   001F50  6E4E               	movwf	Calculate_digits@x0^0,c
  2452   001F52  0E00               	movlw	high main@x0
  2453   001F54  6E4F               	movwf	(Calculate_digits@x0+1)^0,c
  2454   001F56  0E6A               	movlw	low main@x_1
  2455   001F58  6E50               	movwf	Calculate_digits@x_1^0,c
  2456   001F5A  0E00               	movlw	high main@x_1
  2457   001F5C  6E51               	movwf	(Calculate_digits@x_1+1)^0,c
  2458   001F5E  0E68               	movlw	low main@x_2
  2459   001F60  6E52               	movwf	Calculate_digits@x_2^0,c
  2460   001F62  0E00               	movlw	high main@x_2
  2461   001F64  6E53               	movwf	(Calculate_digits@x_2+1)^0,c
  2462   001F66  ECD3  F00F         	call	_Calculate_digits	;wreg free
  2463   001F6A                     
  2464                           ;main.c: 189:                  Display_Resistance(&lcd,x2,x1,x0,x_1,x_2);
  2465   001F6A  0EA6               	movlw	low _lcd
  2466   001F6C  6E28               	movwf	Display_Resistance@My_lcd^0,c
  2467   001F6E  0E00               	movlw	high _lcd
  2468   001F70  6E29               	movwf	(Display_Resistance@My_lcd+1)^0,c
  2469   001F72  C070  F02A         	movff	main@x2,Display_Resistance@x2
  2470   001F76  C071  F02B         	movff	main@x2+1,Display_Resistance@x2+1
  2471   001F7A  C06E  F02C         	movff	main@x1,Display_Resistance@x1
  2472   001F7E  C06F  F02D         	movff	main@x1+1,Display_Resistance@x1+1
  2473   001F82  C06C  F02E         	movff	main@x0,Display_Resistance@x0
  2474   001F86  C06D  F02F         	movff	main@x0+1,Display_Resistance@x0+1
  2475   001F8A  C06A  F030         	movff	main@x_1,Display_Resistance@x_1
  2476   001F8E  C06B  F031         	movff	main@x_1+1,Display_Resistance@x_1+1
  2477   001F92  C068  F032         	movff	main@x_2,Display_Resistance@x_2
  2478   001F96  C069  F033         	movff	main@x_2+1,Display_Resistance@x_2+1
  2479   001F9A  EC28  F01F         	call	_Display_Resistance	;wreg free
  2480   001F9E  EF11  F008         	goto	l5229
  2481   001FA2  EF33  F000         	goto	start
  2482   001FA6                     __end_of_main:
  2483                           	callstack 0
  2484                           
  2485 ;; *************** function _lcd_4bit_initilization *****************
  2486 ;; Defined at:
  2487 ;;		line 71 in file "ECU_layer/lcd/lcd.c"
  2488 ;; Parameters:    Size  Location     Type
  2489 ;;  my_lcd          2   26[COMRAM] PTR struct .
  2490 ;;		 -> lcd(6), 
  2491 ;; Auto vars:     Size  Location     Type
  2492 ;;  i               2   30[COMRAM] int 
  2493 ;;  ret             1   32[COMRAM] unsigned char 
  2494 ;; Return value:  Size  Location     Type
  2495 ;;                  1    wreg      unsigned char 
  2496 ;; Registers used:
  2497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2498 ;; Tracked objects:
  2499 ;;		On entry : 0/0
  2500 ;;		On exit  : 0/0
  2501 ;;		Unchanged: 0/0
  2502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2503 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2504 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2505 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2506 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2507 ;;Total ram usage:        7 bytes
  2508 ;; Hardware stack levels used: 1
  2509 ;; Hardware stack levels required when called: 7
  2510 ;; This function calls:
  2511 ;;		_gio_pin_init
  2512 ;;		_lcd_4bit_sned_command
  2513 ;; This function is called by:
  2514 ;;		_main
  2515 ;; This function uses a non-reentrant model
  2516 ;;
  2517                           
  2518                           	psect	text1
  2519   0037EE                     __ptext1:
  2520                           	callstack 0
  2521   0037EE                     _lcd_4bit_initilization:
  2522                           	callstack 23
  2523   0037EE                     
  2524                           ;ECU_layer/lcd/lcd.c: 75:      if(my_lcd==((void*)0) )
  2525   0037EE  501B               	movf	lcd_4bit_initilization@my_lcd^0,w,c
  2526   0037F0  101C               	iorwf	(lcd_4bit_initilization@my_lcd+1)^0,w,c
  2527   0037F2  A4D8               	btfss	status,2,c
  2528   0037F4  EFFE  F01B         	goto	u3931
  2529   0037F8  EF00  F01C         	goto	u3930
  2530   0037FC                     u3931:
  2531   0037FC  EF02  F01C         	goto	l4455
  2532   003800                     u3930:
  2533   003800                     
  2534                           ;ECU_layer/lcd/lcd.c: 78:     }
  2535   003800  EF8D  F01C         	goto	l41
  2536   003804                     l4455:
  2537                           
  2538                           ;ECU_layer/lcd/lcd.c: 80:     {;ECU_layer/lcd/lcd.c: 110:   ret=gio_pin_init(&(my_lcd->l
      +                          cd_rs));
  2539   003804  C01B  F00C         	movff	lcd_4bit_initilization@my_lcd,gio_pin_init@my_config
  2540   003808  C01C  F00D         	movff	lcd_4bit_initilization@my_lcd+1,gio_pin_init@my_config+1
  2541   00380C  EC42  F021         	call	_gio_pin_init	;wreg free
  2542   003810  6E21               	movwf	lcd_4bit_initilization@ret^0,c
  2543                           
  2544                           ;ECU_layer/lcd/lcd.c: 111:         ret=gio_pin_init(&(my_lcd->lcd_e));
  2545   003812  0E01               	movlw	1
  2546   003814  241B               	addwf	lcd_4bit_initilization@my_lcd^0,w,c
  2547   003816  6E0C               	movwf	gio_pin_init@my_config^0,c
  2548   003818  0E00               	movlw	0
  2549   00381A  201C               	addwfc	(lcd_4bit_initilization@my_lcd+1)^0,w,c
  2550   00381C  6E0D               	movwf	(gio_pin_init@my_config+1)^0,c
  2551   00381E  EC42  F021         	call	_gio_pin_init	;wreg free
  2552   003822  6E21               	movwf	lcd_4bit_initilization@ret^0,c
  2553   003824                     
  2554                           ;ECU_layer/lcd/lcd.c: 112:          for(int i=0;i<4;i++)
  2555   003824  0E00               	movlw	0
  2556   003826  6E20               	movwf	(lcd_4bit_initilization@i+1)^0,c
  2557   003828  0E00               	movlw	0
  2558   00382A  6E1F               	movwf	lcd_4bit_initilization@i^0,c
  2559   00382C                     l4463:
  2560   00382C  501F               	movf	lcd_4bit_initilization@i^0,w,c
  2561   00382E  241B               	addwf	lcd_4bit_initilization@my_lcd^0,w,c
  2562   003830  6E1D               	movwf	??_lcd_4bit_initilization^0,c
  2563   003832  5020               	movf	(lcd_4bit_initilization@i+1)^0,w,c
  2564   003834  201C               	addwfc	(lcd_4bit_initilization@my_lcd+1)^0,w,c
  2565   003836  6E1E               	movwf	(??_lcd_4bit_initilization+1)^0,c
  2566   003838  0E02               	movlw	2
  2567   00383A  241D               	addwf	??_lcd_4bit_initilization^0,w,c
  2568   00383C  6E0C               	movwf	gio_pin_init@my_config^0,c
  2569   00383E  0E00               	movlw	0
  2570   003840  201E               	addwfc	(??_lcd_4bit_initilization+1)^0,w,c
  2571   003842  6E0D               	movwf	(gio_pin_init@my_config+1)^0,c
  2572   003844  EC42  F021         	call	_gio_pin_init	;wreg free
  2573   003848                     
  2574                           ;ECU_layer/lcd/lcd.c: 115:          }
  2575   003848  4A1F               	infsnz	lcd_4bit_initilization@i^0,f,c
  2576   00384A  2A20               	incf	(lcd_4bit_initilization@i+1)^0,f,c
  2577   00384C  BE20               	btfsc	(lcd_4bit_initilization@i+1)^0,7,c
  2578   00384E  EF32  F01C         	goto	u3941
  2579   003852  5020               	movf	(lcd_4bit_initilization@i+1)^0,w,c
  2580   003854  E109               	bnz	u3940
  2581   003856  0E04               	movlw	4
  2582   003858  5C1F               	subwf	lcd_4bit_initilization@i^0,w,c
  2583   00385A  A0D8               	btfss	status,0,c
  2584   00385C  EF32  F01C         	goto	u3941
  2585   003860  EF34  F01C         	goto	u3940
  2586   003864                     u3941:
  2587   003864  EF16  F01C         	goto	l4463
  2588   003868                     u3940:
  2589   003868                     
  2590                           ;ECU_layer/lcd/lcd.c: 117:         _delay((unsigned long)((20)*(8000000/4000.0)));
  2591   003868  0E34               	movlw	52
  2592   00386A  6E1D               	movwf	??_lcd_4bit_initilization^0,c
  2593   00386C  0EF2               	movlw	242
  2594   00386E                     u5057:
  2595   00386E  2EE8               	decfsz	wreg,f,c
  2596   003870  D7FE               	bra	u5057
  2597   003872  2E1D               	decfsz	??_lcd_4bit_initilization^0,f,c
  2598   003874  D7FC               	bra	u5057
  2599   003876  C01B  F00F         	movff	lcd_4bit_initilization@my_lcd,lcd_4bit_sned_command@my_lcd
  2600   00387A  C01C  F010         	movff	lcd_4bit_initilization@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  2601   00387E  0E38               	movlw	56
  2602   003880  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  2603   003882  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  2604   003886                     
  2605                           ;ECU_layer/lcd/lcd.c: 119:         _delay((unsigned long)((5)*(8000000/4000.0)));
  2606   003886  0E0D               	movlw	13
  2607   003888  6E1D               	movwf	??_lcd_4bit_initilization^0,c
  2608   00388A  0EFC               	movlw	252
  2609   00388C                     u5067:
  2610   00388C  2EE8               	decfsz	wreg,f,c
  2611   00388E  D7FE               	bra	u5067
  2612   003890  2E1D               	decfsz	??_lcd_4bit_initilization^0,f,c
  2613   003892  D7FC               	bra	u5067
  2614   003894  C01B  F00F         	movff	lcd_4bit_initilization@my_lcd,lcd_4bit_sned_command@my_lcd
  2615   003898  C01C  F010         	movff	lcd_4bit_initilization@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  2616   00389C  0E38               	movlw	56
  2617   00389E  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  2618   0038A0  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  2619   0038A4                     
  2620                           ;ECU_layer/lcd/lcd.c: 121:         _delay((unsigned long)((150)*(8000000/4000000.0)));
  2621   0038A4  0E64               	movlw	100
  2622   0038A6                     u5077:
  2623   0038A6  2EE8               	decfsz	wreg,f,c
  2624   0038A8  D7FE               	bra	u5077
  2625   0038AA  C01B  F00F         	movff	lcd_4bit_initilization@my_lcd,lcd_4bit_sned_command@my_lcd
  2626   0038AE  C01C  F010         	movff	lcd_4bit_initilization@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  2627   0038B2  0E38               	movlw	56
  2628   0038B4  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  2629   0038B6  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  2630   0038BA  C01B  F00F         	movff	lcd_4bit_initilization@my_lcd,lcd_4bit_sned_command@my_lcd
  2631   0038BE  C01C  F010         	movff	lcd_4bit_initilization@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  2632   0038C2  0E01               	movlw	1
  2633   0038C4  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  2634   0038C6  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  2635   0038CA  C01B  F00F         	movff	lcd_4bit_initilization@my_lcd,lcd_4bit_sned_command@my_lcd
  2636   0038CE  C01C  F010         	movff	lcd_4bit_initilization@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  2637   0038D2  0E02               	movlw	2
  2638   0038D4  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  2639   0038D6  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  2640   0038DA  C01B  F00F         	movff	lcd_4bit_initilization@my_lcd,lcd_4bit_sned_command@my_lcd
  2641   0038DE  C01C  F010         	movff	lcd_4bit_initilization@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  2642   0038E2  0E06               	movlw	6
  2643   0038E4  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  2644   0038E6  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  2645   0038EA  C01B  F00F         	movff	lcd_4bit_initilization@my_lcd,lcd_4bit_sned_command@my_lcd
  2646   0038EE  C01C  F010         	movff	lcd_4bit_initilization@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  2647   0038F2  0E0C               	movlw	12
  2648   0038F4  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  2649   0038F6  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  2650   0038FA  C01B  F00F         	movff	lcd_4bit_initilization@my_lcd,lcd_4bit_sned_command@my_lcd
  2651   0038FE  C01C  F010         	movff	lcd_4bit_initilization@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  2652   003902  0E28               	movlw	40
  2653   003904  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  2654   003906  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  2655   00390A  C01B  F00F         	movff	lcd_4bit_initilization@my_lcd,lcd_4bit_sned_command@my_lcd
  2656   00390E  C01C  F010         	movff	lcd_4bit_initilization@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  2657   003912  0E80               	movlw	128
  2658   003914  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  2659   003916  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  2660   00391A                     l41:
  2661   00391A  0012               	return		;funcret
  2662   00391C                     __end_of_lcd_4bit_initilization:
  2663                           	callstack 0
  2664                           
  2665 ;; *************** function _gio_pin_init *****************
  2666 ;; Defined at:
  2667 ;;		line 117 in file "MCAL_layer/GPIO/hel_gpio.c"
  2668 ;; Parameters:    Size  Location     Type
  2669 ;;  my_config       2   11[COMRAM] PTR struct .
  2670 ;;		 -> lcd.lcd_pins(4), lcd(6), 
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;  ret             1   14[COMRAM] unsigned char 
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      unsigned char 
  2675 ;; Registers used:
  2676 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2682 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2683 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2684 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2686 ;;Total ram usage:        4 bytes
  2687 ;; Hardware stack levels used: 1
  2688 ;; Hardware stack levels required when called: 5
  2689 ;; This function calls:
  2690 ;;		_gio_pin_write_direction
  2691 ;;		_gio_pin_write_logic
  2692 ;; This function is called by:
  2693 ;;		_lcd_4bit_initilization
  2694 ;;		_lcd_8bit_initilization
  2695 ;; This function uses a non-reentrant model
  2696 ;;
  2697                           
  2698                           	psect	text2
  2699   004284                     __ptext2:
  2700                           	callstack 0
  2701   004284                     _gio_pin_init:
  2702                           	callstack 24
  2703   004284                     
  2704                           ;MCAL_layer/GPIO/hel_gpio.c: 121:     if(my_config==((void*)0)|| (my_config->my_pin > 8 
      +                          -1) || (my_config->my_port > 5 -1) )
  2705   004284  500C               	movf	gio_pin_init@my_config^0,w,c
  2706   004286  100D               	iorwf	(gio_pin_init@my_config+1)^0,w,c
  2707   004288  B4D8               	btfsc	status,2,c
  2708   00428A  EF49  F021         	goto	u3261
  2709   00428E  EF4B  F021         	goto	u3260
  2710   004292                     u3261:
  2711   004292  EF6B  F021         	goto	l3965
  2712   004296                     u3260:
  2713   004296  C00C  FFD9         	movff	gio_pin_init@my_config,fsr2l
  2714   00429A  C00D  FFDA         	movff	gio_pin_init@my_config+1,fsr2h
  2715   00429E  50DF               	movf	223,w,c
  2716   0042A0  0B07               	andlw	7
  2717   0042A2  6E0E               	movwf	??_gio_pin_init^0,c
  2718   0042A4  0E08               	movlw	8
  2719   0042A6  600E               	cpfslt	??_gio_pin_init^0,c
  2720   0042A8  EF58  F021         	goto	u3271
  2721   0042AC  EF5A  F021         	goto	u3270
  2722   0042B0                     u3271:
  2723   0042B0  EF6B  F021         	goto	l3965
  2724   0042B4                     u3270:
  2725   0042B4  C00C  FFD9         	movff	gio_pin_init@my_config,fsr2l
  2726   0042B8  C00D  FFDA         	movff	gio_pin_init@my_config+1,fsr2h
  2727   0042BC  30DF               	rrcf	223,w,c
  2728   0042BE  32E8               	rrcf	wreg,f,c
  2729   0042C0  32E8               	rrcf	wreg,f,c
  2730   0042C2  0B07               	andlw	7
  2731   0042C4  6E0E               	movwf	??_gio_pin_init^0,c
  2732   0042C6  0E04               	movlw	4
  2733   0042C8  640E               	cpfsgt	??_gio_pin_init^0,c
  2734   0042CA  EF69  F021         	goto	u3281
  2735   0042CE  EF6B  F021         	goto	u3280
  2736   0042D2                     u3281:
  2737   0042D2  EF6F  F021         	goto	l3967
  2738   0042D6                     u3280:
  2739   0042D6                     l3965:
  2740                           
  2741                           ;MCAL_layer/GPIO/hel_gpio.c: 122:     {;MCAL_layer/GPIO/hel_gpio.c: 123:         ret=(St
      +                          d_ReturnType) 0x0;
  2742   0042D6  0E00               	movlw	0
  2743   0042D8  6E0F               	movwf	gio_pin_init@ret^0,c
  2744                           
  2745                           ;MCAL_layer/GPIO/hel_gpio.c: 124:     }
  2746   0042DA  EF8D  F021         	goto	l3969
  2747   0042DE                     l3967:
  2748                           
  2749                           ;MCAL_layer/GPIO/hel_gpio.c: 126:     {;MCAL_layer/GPIO/hel_gpio.c: 128:         ret= gi
      +                          o_pin_write_direction(my_config,my_config->my_direction);
  2750   0042DE  C00C  F002         	movff	gio_pin_init@my_config,gio_pin_write_direction@my_config
  2751   0042E2  C00D  F003         	movff	gio_pin_init@my_config+1,gio_pin_write_direction@my_config+1
  2752   0042E6  C00C  FFD9         	movff	gio_pin_init@my_config,fsr2l
  2753   0042EA  C00D  FFDA         	movff	gio_pin_init@my_config+1,fsr2h
  2754   0042EE  0E00               	movlw	0
  2755   0042F0  BCDF               	btfsc	indf2,6,c
  2756   0042F2  0E01               	movlw	1
  2757   0042F4  6E04               	movwf	gio_pin_write_direction@direc^0,c
  2758   0042F6  EC99  F01A         	call	_gio_pin_write_direction	;wreg free
  2759   0042FA  6E0F               	movwf	gio_pin_init@ret^0,c
  2760                           
  2761                           ;MCAL_layer/GPIO/hel_gpio.c: 129:         ret= gio_pin_write_logic(my_config,my_config->
      +                          my_logic);
  2762   0042FC  C00C  F002         	movff	gio_pin_init@my_config,gio_pin_write_logic@my_config
  2763   004300  C00D  F003         	movff	gio_pin_init@my_config+1,gio_pin_write_logic@my_config+1
  2764   004304  C00C  FFD9         	movff	gio_pin_init@my_config,fsr2l
  2765   004308  C00D  FFDA         	movff	gio_pin_init@my_config+1,fsr2h
  2766   00430C  0E00               	movlw	0
  2767   00430E  BEDF               	btfsc	indf2,7,c
  2768   004310  0E01               	movlw	1
  2769   004312  6E04               	movwf	gio_pin_write_logic@logic^0,c
  2770   004314  EC48  F01B         	call	_gio_pin_write_logic	;wreg free
  2771   004318  6E0F               	movwf	gio_pin_init@ret^0,c
  2772   00431A                     l3969:
  2773                           
  2774                           ;MCAL_layer/GPIO/hel_gpio.c: 132:         return ret;
  2775   00431A  500F               	movf	gio_pin_init@ret^0,w,c
  2776   00431C  0012               	return		;funcret
  2777   00431E                     __end_of_gio_pin_init:
  2778                           	callstack 0
  2779                           
  2780 ;; *************** function _gio_pin_write_direction *****************
  2781 ;; Defined at:
  2782 ;;		line 7 in file "MCAL_layer/GPIO/hel_gpio.c"
  2783 ;; Parameters:    Size  Location     Type
  2784 ;;  my_config       2    1[COMRAM] PTR struct .
  2785 ;;		 -> lcd.lcd_pins(4), lcd(6), 
  2786 ;;  direc           1    3[COMRAM] unsigned char 
  2787 ;; Auto vars:     Size  Location     Type
  2788 ;;  ret             1   10[COMRAM] unsigned char 
  2789 ;; Return value:  Size  Location     Type
  2790 ;;                  1    wreg      unsigned char 
  2791 ;; Registers used:
  2792 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  2793 ;; Tracked objects:
  2794 ;;		On entry : 0/0
  2795 ;;		On exit  : 0/0
  2796 ;;		Unchanged: 0/0
  2797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2798 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2799 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2800 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2801 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2802 ;;Total ram usage:       10 bytes
  2803 ;; Hardware stack levels used: 1
  2804 ;; Hardware stack levels required when called: 4
  2805 ;; This function calls:
  2806 ;;		Nothing
  2807 ;; This function is called by:
  2808 ;;		_gio_pin_init
  2809 ;;		_INTERRUPT_INTX_PIN_INIT
  2810 ;;		_INTERRUPT_RBX_INIT
  2811 ;; This function uses a non-reentrant model
  2812 ;;
  2813                           
  2814                           	psect	text3
  2815   003532                     __ptext3:
  2816                           	callstack 0
  2817   003532                     _gio_pin_write_direction:
  2818                           	callstack 24
  2819   003532                     
  2820                           ;MCAL_layer/GPIO/hel_gpio.c: 7: Std_ReturnType gio_pin_write_direction(pin_config* my_co
      +                          nfig,uint8 direc);MCAL_layer/GPIO/hel_gpio.c: 8: { Std_ReturnType ret=(Std_ReturnType) 0
      +                          x1;
  2821   003532  0E01               	movlw	1
  2822   003534  6E0B               	movwf	gio_pin_write_direction@ret^0,c
  2823   003536                     
  2824                           ;MCAL_layer/GPIO/hel_gpio.c: 10:     if(my_config==((void*)0)|| (my_config->my_pin > 8 -
      +                          1) || (my_config->my_port > 5 -1) )
  2825   003536  5002               	movf	gio_pin_write_direction@my_config^0,w,c
  2826   003538  1003               	iorwf	(gio_pin_write_direction@my_config+1)^0,w,c
  2827   00353A  B4D8               	btfsc	status,2,c
  2828   00353C  EFA2  F01A         	goto	u2821
  2829   003540  EFA4  F01A         	goto	u2820
  2830   003544                     u2821:
  2831   003544  EFC4  F01A         	goto	l3731
  2832   003548                     u2820:
  2833   003548  C002  FFD9         	movff	gio_pin_write_direction@my_config,fsr2l
  2834   00354C  C003  FFDA         	movff	gio_pin_write_direction@my_config+1,fsr2h
  2835   003550  50DF               	movf	223,w,c
  2836   003552  0B07               	andlw	7
  2837   003554  6E05               	movwf	??_gio_pin_write_direction^0,c
  2838   003556  0E08               	movlw	8
  2839   003558  6005               	cpfslt	??_gio_pin_write_direction^0,c
  2840   00355A  EFB1  F01A         	goto	u2831
  2841   00355E  EFB3  F01A         	goto	u2830
  2842   003562                     u2831:
  2843   003562  EFC4  F01A         	goto	l3731
  2844   003566                     u2830:
  2845   003566  C002  FFD9         	movff	gio_pin_write_direction@my_config,fsr2l
  2846   00356A  C003  FFDA         	movff	gio_pin_write_direction@my_config+1,fsr2h
  2847   00356E  30DF               	rrcf	223,w,c
  2848   003570  32E8               	rrcf	wreg,f,c
  2849   003572  32E8               	rrcf	wreg,f,c
  2850   003574  0B07               	andlw	7
  2851   003576  6E05               	movwf	??_gio_pin_write_direction^0,c
  2852   003578  0E04               	movlw	4
  2853   00357A  6405               	cpfsgt	??_gio_pin_write_direction^0,c
  2854   00357C  EFC2  F01A         	goto	u2841
  2855   003580  EFC4  F01A         	goto	u2840
  2856   003584                     u2841:
  2857   003584  EF31  F01B         	goto	l3745
  2858   003588                     u2840:
  2859   003588                     l3731:
  2860                           
  2861                           ;MCAL_layer/GPIO/hel_gpio.c: 11:     {;MCAL_layer/GPIO/hel_gpio.c: 12:         ret=(Std_
      +                          ReturnType) 0x0;
  2862   003588  0E00               	movlw	0
  2863   00358A  6E0B               	movwf	gio_pin_write_direction@ret^0,c
  2864                           
  2865                           ;MCAL_layer/GPIO/hel_gpio.c: 13:     }
  2866   00358C  EF46  F01B         	goto	l3747
  2867   003590                     l3733:
  2868                           
  2869                           ;MCAL_layer/GPIO/hel_gpio.c: 18:                 (*TRIS_REG[my_config->my_port] &=~(1<<m
      +                          y_config->my_pin));
  2870   003590  C002  FFD9         	movff	gio_pin_write_direction@my_config,fsr2l
  2871   003594  C003  FFDA         	movff	gio_pin_write_direction@my_config+1,fsr2h
  2872   003598  50DF               	movf	223,w,c
  2873   00359A  0B07               	andlw	7
  2874   00359C  6E05               	movwf	??_gio_pin_write_direction^0,c
  2875   00359E  0E01               	movlw	1
  2876   0035A0  6E06               	movwf	(??_gio_pin_write_direction+1)^0,c
  2877   0035A2  2A05               	incf	??_gio_pin_write_direction^0,f,c
  2878   0035A4  EFD6  F01A         	goto	u2854
  2879   0035A8                     u2855:
  2880   0035A8  90D8               	bcf	status,0,c
  2881   0035AA  3606               	rlcf	(??_gio_pin_write_direction+1)^0,f,c
  2882   0035AC                     u2854:
  2883   0035AC  2E05               	decfsz	??_gio_pin_write_direction^0,f,c
  2884   0035AE  EFD4  F01A         	goto	u2855
  2885   0035B2  5006               	movf	(??_gio_pin_write_direction+1)^0,w,c
  2886   0035B4  0AFF               	xorlw	255
  2887   0035B6  6E07               	movwf	(??_gio_pin_write_direction+2)^0,c
  2888   0035B8  C002  FFD9         	movff	gio_pin_write_direction@my_config,fsr2l
  2889   0035BC  C003  FFDA         	movff	gio_pin_write_direction@my_config+1,fsr2h
  2890   0035C0  30DF               	rrcf	223,w,c
  2891   0035C2  32E8               	rrcf	wreg,f,c
  2892   0035C4  32E8               	rrcf	wreg,f,c
  2893   0035C6  0B07               	andlw	7
  2894   0035C8  6E08               	movwf	(??_gio_pin_write_direction+3)^0,c
  2895   0035CA  5008               	movf	(??_gio_pin_write_direction+3)^0,w,c
  2896   0035CC  0D02               	mullw	2
  2897   0035CE  0E94               	movlw	low _TRIS_REG
  2898   0035D0  24F3               	addwf	243,w,c
  2899   0035D2  6ED9               	movwf	fsr2l,c
  2900   0035D4  0E00               	movlw	high _TRIS_REG
  2901   0035D6  20F4               	addwfc	prodh,w,c
  2902   0035D8  6EDA               	movwf	fsr2h,c
  2903   0035DA  CFDE F009          	movff	postinc2,??_gio_pin_write_direction+4
  2904   0035DE  CFDD F00A          	movff	postdec2,??_gio_pin_write_direction+5
  2905   0035E2  C009  FFD9         	movff	??_gio_pin_write_direction+4,fsr2l
  2906   0035E6  C00A  FFDA         	movff	??_gio_pin_write_direction+5,fsr2h
  2907   0035EA  5007               	movf	(??_gio_pin_write_direction+2)^0,w,c
  2908   0035EC  16DF               	andwf	indf2,f,c
  2909   0035EE                     
  2910                           ;MCAL_layer/GPIO/hel_gpio.c: 19:                 my_config->my_direction=1;
  2911   0035EE  C002  FFD9         	movff	gio_pin_write_direction@my_config,fsr2l
  2912   0035F2  C003  FFDA         	movff	gio_pin_write_direction@my_config+1,fsr2h
  2913   0035F6  8CDF               	bsf	indf2,6,c
  2914                           
  2915                           ;MCAL_layer/GPIO/hel_gpio.c: 20:                 break;
  2916   0035F8  EF46  F01B         	goto	l3747
  2917   0035FC                     l3737:
  2918                           
  2919                           ;MCAL_layer/GPIO/hel_gpio.c: 23:                 (*TRIS_REG[my_config->my_port] |=(1<<my
      +                          _config->my_pin));
  2920   0035FC  C002  FFD9         	movff	gio_pin_write_direction@my_config,fsr2l
  2921   003600  C003  FFDA         	movff	gio_pin_write_direction@my_config+1,fsr2h
  2922   003604  50DF               	movf	223,w,c
  2923   003606  0B07               	andlw	7
  2924   003608  6E05               	movwf	??_gio_pin_write_direction^0,c
  2925   00360A  0E01               	movlw	1
  2926   00360C  6E06               	movwf	(??_gio_pin_write_direction+1)^0,c
  2927   00360E  2A05               	incf	??_gio_pin_write_direction^0,f,c
  2928   003610  EF0C  F01B         	goto	u2864
  2929   003614                     u2865:
  2930   003614  90D8               	bcf	status,0,c
  2931   003616  3606               	rlcf	(??_gio_pin_write_direction+1)^0,f,c
  2932   003618                     u2864:
  2933   003618  2E05               	decfsz	??_gio_pin_write_direction^0,f,c
  2934   00361A  EF0A  F01B         	goto	u2865
  2935   00361E  C002  FFD9         	movff	gio_pin_write_direction@my_config,fsr2l
  2936   003622  C003  FFDA         	movff	gio_pin_write_direction@my_config+1,fsr2h
  2937   003626  30DF               	rrcf	223,w,c
  2938   003628  32E8               	rrcf	wreg,f,c
  2939   00362A  32E8               	rrcf	wreg,f,c
  2940   00362C  0B07               	andlw	7
  2941   00362E  6E07               	movwf	(??_gio_pin_write_direction+2)^0,c
  2942   003630  5007               	movf	(??_gio_pin_write_direction+2)^0,w,c
  2943   003632  0D02               	mullw	2
  2944   003634  0E94               	movlw	low _TRIS_REG
  2945   003636  24F3               	addwf	243,w,c
  2946   003638  6ED9               	movwf	fsr2l,c
  2947   00363A  0E00               	movlw	high _TRIS_REG
  2948   00363C  20F4               	addwfc	prodh,w,c
  2949   00363E  6EDA               	movwf	fsr2h,c
  2950   003640  CFDE F008          	movff	postinc2,??_gio_pin_write_direction+3
  2951   003644  CFDD F009          	movff	postdec2,??_gio_pin_write_direction+4
  2952   003648  C008  FFD9         	movff	??_gio_pin_write_direction+3,fsr2l
  2953   00364C  C009  FFDA         	movff	??_gio_pin_write_direction+4,fsr2h
  2954   003650  5006               	movf	(??_gio_pin_write_direction+1)^0,w,c
  2955   003652  12DF               	iorwf	indf2,f,c
  2956   003654                     
  2957                           ;MCAL_layer/GPIO/hel_gpio.c: 24:                 my_config->my_direction=0;
  2958   003654  C002  FFD9         	movff	gio_pin_write_direction@my_config,fsr2l
  2959   003658  C003  FFDA         	movff	gio_pin_write_direction@my_config+1,fsr2h
  2960   00365C  9CDF               	bcf	indf2,6,c
  2961                           
  2962                           ;MCAL_layer/GPIO/hel_gpio.c: 26:                 break;
  2963   00365E  EF46  F01B         	goto	l3747
  2964   003662                     l3745:
  2965   003662  5004               	movf	gio_pin_write_direction@direc^0,w,c
  2966   003664  6E05               	movwf	??_gio_pin_write_direction^0,c
  2967   003666  6A06               	clrf	(??_gio_pin_write_direction+1)^0,c
  2968                           
  2969                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2970                           ; Switch size 1, requested type "simple"
  2971                           ; Number of cases is 1, Range of values is 0 to 0
  2972                           ; switch strategies available:
  2973                           ; Name         Instructions Cycles
  2974                           ; simple_byte            4     3 (average)
  2975                           ;	Chosen strategy is simple_byte
  2976   003668  5006               	movf	(??_gio_pin_write_direction+1)^0,w,c
  2977   00366A  0A00               	xorlw	0	; case 0
  2978   00366C  B4D8               	btfsc	status,2,c
  2979   00366E  EF3B  F01B         	goto	l5435
  2980   003672  EFC4  F01A         	goto	l3731
  2981   003676                     l5435:
  2982                           
  2983                           ; Switch size 1, requested type "simple"
  2984                           ; Number of cases is 2, Range of values is 0 to 1
  2985                           ; switch strategies available:
  2986                           ; Name         Instructions Cycles
  2987                           ; simple_byte            7     4 (average)
  2988                           ;	Chosen strategy is simple_byte
  2989   003676  5005               	movf	??_gio_pin_write_direction^0,w,c
  2990   003678  0A00               	xorlw	0	; case 0
  2991   00367A  B4D8               	btfsc	status,2,c
  2992   00367C  EFC8  F01A         	goto	l3733
  2993   003680  0A01               	xorlw	1	; case 1
  2994   003682  B4D8               	btfsc	status,2,c
  2995   003684  EFFE  F01A         	goto	l3737
  2996   003688  EFC4  F01A         	goto	l3731
  2997   00368C                     l3747:
  2998                           
  2999                           ;MCAL_layer/GPIO/hel_gpio.c: 33:         return ret;
  3000   00368C  500B               	movf	gio_pin_write_direction@ret^0,w,c
  3001   00368E  0012               	return		;funcret
  3002   003690                     __end_of_gio_pin_write_direction:
  3003                           	callstack 0
  3004                           
  3005 ;; *************** function _config_pins *****************
  3006 ;; Defined at:
  3007 ;;		line 253 in file "main.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		None
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3025 ;;Total ram usage:        0 bytes
  3026 ;; Hardware stack levels used: 1
  3027 ;; Hardware stack levels required when called: 4
  3028 ;; This function calls:
  3029 ;;		Nothing
  3030 ;; This function is called by:
  3031 ;;		_main
  3032 ;; This function uses a non-reentrant model
  3033 ;;
  3034                           
  3035                           	psect	text4
  3036   0044AC                     __ptext4:
  3037                           	callstack 0
  3038   0044AC                     _config_pins:
  3039                           	callstack 26
  3040   0044AC                     
  3041                           ;main.c: 257: TRISBbits.TRISB5 = 1;
  3042   0044AC  8A93               	bsf	147,5,c	;volatile
  3043                           
  3044                           ;main.c: 258: TRISBbits.TRISB4 = 1;
  3045   0044AE  8893               	bsf	147,4,c	;volatile
  3046                           
  3047                           ;main.c: 259: TRISBbits.TRISB3 = 1;
  3048   0044B0  8693               	bsf	147,3,c	;volatile
  3049                           
  3050                           ;main.c: 260: TRISBbits.TRISB2 = 1;
  3051   0044B2  8493               	bsf	147,2,c	;volatile
  3052                           
  3053                           ;main.c: 261: TRISBbits.TRISB1 = 1;
  3054   0044B4  8293               	bsf	147,1,c	;volatile
  3055                           
  3056                           ;main.c: 262: TRISBbits.TRISB0 = 1;
  3057   0044B6  8093               	bsf	147,0,c	;volatile
  3058                           
  3059                           ;main.c: 263: TRISDbits.TRISD7 = 1;
  3060   0044B8  8E95               	bsf	149,7,c	;volatile
  3061                           
  3062                           ;main.c: 264: TRISDbits.TRISD6 = 1;
  3063   0044BA  8C95               	bsf	149,6,c	;volatile
  3064                           
  3065                           ;main.c: 265: TRISDbits.TRISD5 = 1;
  3066   0044BC  8A95               	bsf	149,5,c	;volatile
  3067                           
  3068                           ;main.c: 266: TRISDbits.TRISD4 = 1;
  3069   0044BE  8895               	bsf	149,4,c	;volatile
  3070                           
  3071                           ;main.c: 268: TRISAbits.TRISA6 = 0;
  3072   0044C0  9C92               	bcf	146,6,c	;volatile
  3073                           
  3074                           ;main.c: 269: TRISAbits.TRISA5 = 0;
  3075   0044C2  9A92               	bcf	146,5,c	;volatile
  3076                           
  3077                           ;main.c: 270: TRISAbits.TRISA4 = 0;
  3078   0044C4  9892               	bcf	146,4,c	;volatile
  3079                           
  3080                           ;main.c: 271: TRISAbits.TRISA3 = 0;
  3081   0044C6  9692               	bcf	146,3,c	;volatile
  3082                           
  3083                           ;main.c: 272: TRISAbits.TRISA2 = 0;
  3084   0044C8  9492               	bcf	146,2,c	;volatile
  3085                           
  3086                           ;main.c: 273: TRISAbits.TRISA1 = 0;
  3087   0044CA  9292               	bcf	146,1,c	;volatile
  3088   0044CC  0012               	return		;funcret
  3089   0044CE                     __end_of_config_pins:
  3090                           	callstack 0
  3091                           
  3092 ;; *************** function _adc_start_conv *****************
  3093 ;; Defined at:
  3094 ;;		line 104 in file "MCAL_layer/adc/adc.c"
  3095 ;; Parameters:    Size  Location     Type
  3096 ;;  my_adc          2    1[COMRAM] PTR struct .
  3097 ;;		 -> ADC_Pin(8), 
  3098 ;; Auto vars:     Size  Location     Type
  3099 ;;  ret             1    0        unsigned char 
  3100 ;; Return value:  Size  Location     Type
  3101 ;;                  1    wreg      unsigned char 
  3102 ;; Registers used:
  3103 ;;		wreg, status,2, status,0
  3104 ;; Tracked objects:
  3105 ;;		On entry : 0/0
  3106 ;;		On exit  : 0/0
  3107 ;;		Unchanged: 0/0
  3108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3109 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3112 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3113 ;;Total ram usage:        2 bytes
  3114 ;; Hardware stack levels used: 1
  3115 ;; Hardware stack levels required when called: 4
  3116 ;; This function calls:
  3117 ;;		Nothing
  3118 ;; This function is called by:
  3119 ;;		_main
  3120 ;;		_adc_all_conv
  3121 ;;		_adc_all_conv_inter
  3122 ;; This function uses a non-reentrant model
  3123 ;;
  3124                           
  3125                           	psect	text5
  3126   0044CE                     __ptext5:
  3127                           	callstack 0
  3128   0044CE                     _adc_start_conv:
  3129                           	callstack 26
  3130   0044CE                     
  3131                           ;MCAL_layer/adc/adc.c: 108:     if( my_adc == ((void*)0) )
  3132   0044CE  5002               	movf	adc_start_conv@my_adc^0,w,c
  3133   0044D0  1003               	iorwf	(adc_start_conv@my_adc+1)^0,w,c
  3134   0044D2  A4D8               	btfss	status,2,c
  3135   0044D4  EF6E  F022         	goto	u4011
  3136   0044D8  EF70  F022         	goto	u4010
  3137   0044DC                     u4011:
  3138   0044DC  EF72  F022         	goto	l228
  3139   0044E0                     u4010:
  3140   0044E0                     
  3141                           ;MCAL_layer/adc/adc.c: 111:     }
  3142   0044E0  EF73  F022         	goto	l230
  3143   0044E4                     l228:
  3144                           
  3145                           ;MCAL_layer/adc/adc.c: 113:     {;MCAL_layer/adc/adc.c: 114:         (ADCON0bits.GO_nDON
      +                          E=1);
  3146   0044E4  82C2               	bsf	194,1,c	;volatile
  3147   0044E6                     l230:
  3148   0044E6  0012               	return		;funcret
  3149   0044E8                     __end_of_adc_start_conv:
  3150                           	callstack 0
  3151                           
  3152 ;; *************** function _adc_init *****************
  3153 ;; Defined at:
  3154 ;;		line 27 in file "MCAL_layer/adc/adc.c"
  3155 ;; Parameters:    Size  Location     Type
  3156 ;;  my_adc          2    4[COMRAM] PTR struct .
  3157 ;;		 -> ADC_Pin(8), 
  3158 ;; Auto vars:     Size  Location     Type
  3159 ;;  ret             1    0        unsigned char 
  3160 ;; Return value:  Size  Location     Type
  3161 ;;                  1    wreg      unsigned char 
  3162 ;; Registers used:
  3163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3164 ;; Tracked objects:
  3165 ;;		On entry : 0/0
  3166 ;;		On exit  : 0/0
  3167 ;;		Unchanged: 0/0
  3168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3170 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3171 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3172 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3173 ;;Total ram usage:        3 bytes
  3174 ;; Hardware stack levels used: 1
  3175 ;; Hardware stack levels required when called: 5
  3176 ;; This function calls:
  3177 ;;		_adc_input_pin
  3178 ;; This function is called by:
  3179 ;;		_main
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text6
  3184   003B40                     __ptext6:
  3185                           	callstack 0
  3186   003B40                     _adc_init:
  3187                           	callstack 25
  3188   003B40                     
  3189                           ;MCAL_layer/adc/adc.c: 31:     if( my_adc == ((void*)0) )
  3190   003B40  5005               	movf	adc_init@my_adc^0,w,c
  3191   003B42  1006               	iorwf	(adc_init@my_adc+1)^0,w,c
  3192   003B44  A4D8               	btfss	status,2,c
  3193   003B46  EFA7  F01D         	goto	u3961
  3194   003B4A  EFA9  F01D         	goto	u3960
  3195   003B4E                     u3961:
  3196   003B4E  EFAB  F01D         	goto	l4511
  3197   003B52                     u3960:
  3198   003B52                     
  3199                           ;MCAL_layer/adc/adc.c: 34:     }
  3200   003B52  EF26  F01E         	goto	l220
  3201   003B56                     l4511:
  3202                           
  3203                           ;MCAL_layer/adc/adc.c: 36:     {;MCAL_layer/adc/adc.c: 39:  adc_input_pin(my_adc->pin_na
      +                          me);
  3204   003B56  EE20 F003          	lfsr	2,3
  3205   003B5A  5005               	movf	adc_init@my_adc^0,w,c
  3206   003B5C  26D9               	addwf	fsr2l,f,c
  3207   003B5E  5006               	movf	(adc_init@my_adc+1)^0,w,c
  3208   003B60  22DA               	addwfc	fsr2h,f,c
  3209   003B62  50DF               	movf	indf2,w,c
  3210   003B64  EC24  F020         	call	_adc_input_pin
  3211   003B68                     
  3212                           ;MCAL_layer/adc/adc.c: 40:  (ADCON2bits.ACQT=my_adc->pin_time) ;
  3213   003B68  EE20 F005          	lfsr	2,5
  3214   003B6C  5005               	movf	adc_init@my_adc^0,w,c
  3215   003B6E  26D9               	addwf	fsr2l,f,c
  3216   003B70  5006               	movf	(adc_init@my_adc+1)^0,w,c
  3217   003B72  22DA               	addwfc	fsr2h,f,c
  3218   003B74  50DF               	movf	indf2,w,c
  3219   003B76  6E07               	movwf	??_adc_init^0,c
  3220   003B78  4607               	rlncf	??_adc_init^0,f,c
  3221   003B7A  4607               	rlncf	??_adc_init^0,f,c
  3222   003B7C  4607               	rlncf	??_adc_init^0,f,c
  3223   003B7E  50C0               	movf	192,w,c	;volatile
  3224   003B80  1807               	xorwf	??_adc_init^0,w,c
  3225   003B82  0BC7               	andlw	-57
  3226   003B84  1807               	xorwf	??_adc_init^0,w,c
  3227   003B86  6EC0               	movwf	192,c	;volatile
  3228   003B88                     
  3229                           ;MCAL_layer/adc/adc.c: 41:  (ADCON2bits.ADCS=my_adc->pin_clock) ;
  3230   003B88  EE20 F006          	lfsr	2,6
  3231   003B8C  5005               	movf	adc_init@my_adc^0,w,c
  3232   003B8E  26D9               	addwf	fsr2l,f,c
  3233   003B90  5006               	movf	(adc_init@my_adc+1)^0,w,c
  3234   003B92  22DA               	addwfc	fsr2h,f,c
  3235   003B94  50DF               	movf	indf2,w,c
  3236   003B96  6E07               	movwf	??_adc_init^0,c
  3237   003B98  50C0               	movf	192,w,c	;volatile
  3238   003B9A  1807               	xorwf	??_adc_init^0,w,c
  3239   003B9C  0BF8               	andlw	-8
  3240   003B9E  1807               	xorwf	??_adc_init^0,w,c
  3241   003BA0  6EC0               	movwf	192,c	;volatile
  3242   003BA2                     
  3243                           ;MCAL_layer/adc/adc.c: 42:  (ADCON0bits.CHS=my_adc->pin_name);
  3244   003BA2  EE20 F003          	lfsr	2,3
  3245   003BA6  5005               	movf	adc_init@my_adc^0,w,c
  3246   003BA8  26D9               	addwf	fsr2l,f,c
  3247   003BAA  5006               	movf	(adc_init@my_adc+1)^0,w,c
  3248   003BAC  22DA               	addwfc	fsr2h,f,c
  3249   003BAE  50DF               	movf	indf2,w,c
  3250   003BB0  6E07               	movwf	??_adc_init^0,c
  3251   003BB2  4607               	rlncf	??_adc_init^0,f,c
  3252   003BB4  4607               	rlncf	??_adc_init^0,f,c
  3253   003BB6  50C2               	movf	194,w,c	;volatile
  3254   003BB8  1807               	xorwf	??_adc_init^0,w,c
  3255   003BBA  0BC3               	andlw	-61
  3256   003BBC  1807               	xorwf	??_adc_init^0,w,c
  3257   003BBE  6EC2               	movwf	194,c	;volatile
  3258   003BC0  9C9E               	bcf	158,6,c	;volatile
  3259   003BC2                     
  3260                           ;MCAL_layer/adc/adc.c: 47:          (RCONbits.IPEN=1);
  3261   003BC2  8ED0               	bsf	208,7,c	;volatile
  3262   003BC4                     
  3263                           ;MCAL_layer/adc/adc.c: 48:          if(my_adc->priority==High_Priority)
  3264   003BC4  EE20 F002          	lfsr	2,2
  3265   003BC8  5005               	movf	adc_init@my_adc^0,w,c
  3266   003BCA  26D9               	addwf	fsr2l,f,c
  3267   003BCC  5006               	movf	(adc_init@my_adc+1)^0,w,c
  3268   003BCE  22DA               	addwfc	fsr2h,f,c
  3269   003BD0  04DE               	decf	postinc2,w,c
  3270   003BD2  A4D8               	btfss	status,2,c
  3271   003BD4  EFEE  F01D         	goto	u3971
  3272   003BD8  EFF0  F01D         	goto	u3970
  3273   003BDC                     u3971:
  3274   003BDC  EFF4  F01D         	goto	l214
  3275   003BE0                     u3970:
  3276   003BE0                     
  3277                           ;MCAL_layer/adc/adc.c: 49:          {;MCAL_layer/adc/adc.c: 50:              (INTCONbits
      +                          .GIEH=1);
  3278   003BE0  8EF2               	bsf	242,7,c	;volatile
  3279                           
  3280                           ;MCAL_layer/adc/adc.c: 51:              (IPR1bits.ADIP=1);
  3281   003BE2  8C9F               	bsf	159,6,c	;volatile
  3282                           
  3283                           ;MCAL_layer/adc/adc.c: 53:          }
  3284   003BE4  EFF6  F01D         	goto	l4527
  3285   003BE8                     l214:
  3286                           
  3287                           ;MCAL_layer/adc/adc.c: 55:          {;MCAL_layer/adc/adc.c: 56:              (INTCONbits
      +                          .GIEL=1);
  3288   003BE8  8CF2               	bsf	242,6,c	;volatile
  3289                           
  3290                           ;MCAL_layer/adc/adc.c: 57:            (IPR1bits.ADIP=0);
  3291   003BEA  9C9F               	bcf	159,6,c	;volatile
  3292   003BEC                     l4527:
  3293                           
  3294                           ;MCAL_layer/adc/adc.c: 63:         adc_call=my_adc->ADC_INTER;
  3295   003BEC  C005  FFD9         	movff	adc_init@my_adc,fsr2l
  3296   003BF0  C006  FFDA         	movff	adc_init@my_adc+1,fsr2h
  3297   003BF4  CFDE F076          	movff	postinc2,_adc_call
  3298   003BF8  CFDD F077          	movff	postdec2,_adc_call+1
  3299   003BFC  8C9D               	bsf	157,6,c	;volatile
  3300   003BFE                     
  3301                           ;MCAL_layer/adc/adc.c: 68:  if(my_adc->res_format==1)
  3302   003BFE  EE20 F007          	lfsr	2,7
  3303   003C02  5005               	movf	adc_init@my_adc^0,w,c
  3304   003C04  26D9               	addwf	fsr2l,f,c
  3305   003C06  5006               	movf	(adc_init@my_adc+1)^0,w,c
  3306   003C08  22DA               	addwfc	fsr2h,f,c
  3307   003C0A  04DE               	decf	postinc2,w,c
  3308   003C0C  A4D8               	btfss	status,2,c
  3309   003C0E  EF0B  F01E         	goto	u3981
  3310   003C12  EF0D  F01E         	goto	u3980
  3311   003C16                     u3981:
  3312   003C16  EF10  F01E         	goto	l216
  3313   003C1A                     u3980:
  3314   003C1A                     
  3315                           ;MCAL_layer/adc/adc.c: 69:  { (ADCON2bits.ADFM=1);}
  3316   003C1A  8EC0               	bsf	192,7,c	;volatile
  3317   003C1C  EF11  F01E         	goto	l4535
  3318   003C20                     l216:
  3319                           
  3320                           ;MCAL_layer/adc/adc.c: 72:  {(ADCON2bits.ADFM=0);}
  3321   003C20  9EC0               	bcf	192,7,c	;volatile
  3322   003C22                     l4535:
  3323                           
  3324                           ;MCAL_layer/adc/adc.c: 74:  if(my_adc->v_ref==0)
  3325   003C22  EE20 F004          	lfsr	2,4
  3326   003C26  5005               	movf	adc_init@my_adc^0,w,c
  3327   003C28  26D9               	addwf	fsr2l,f,c
  3328   003C2A  5006               	movf	(adc_init@my_adc+1)^0,w,c
  3329   003C2C  22DA               	addwfc	fsr2h,f,c
  3330   003C2E  50DF               	movf	indf2,w,c
  3331   003C30  A4D8               	btfss	status,2,c
  3332   003C32  EF1D  F01E         	goto	u3991
  3333   003C36  EF1F  F01E         	goto	u3990
  3334   003C3A                     u3991:
  3335   003C3A  EF23  F01E         	goto	l218
  3336   003C3E                     u3990:
  3337   003C3E                     
  3338                           ;MCAL_layer/adc/adc.c: 75:  {{ADCON1bits.VCFG1 = 0; ADCON1bits.VCFG0 = 0; };}
  3339   003C3E  9AC1               	bcf	193,5,c	;volatile
  3340   003C40  98C1               	bcf	193,4,c	;volatile
  3341   003C42  EF25  F01E         	goto	l219
  3342   003C46                     l218:
  3343                           
  3344                           ;MCAL_layer/adc/adc.c: 77:  {;MCAL_layer/adc/adc.c: 78:      {ADCON1bits.VCFG1 = 1; ADCO
      +                          N1bits.VCFG0 = 1; };
  3345   003C46  8AC1               	bsf	193,5,c	;volatile
  3346   003C48  88C1               	bsf	193,4,c	;volatile
  3347   003C4A                     l219:
  3348                           
  3349                           ;MCAL_layer/adc/adc.c: 81:  (ADCON0bits.ADON=1);
  3350   003C4A  80C2               	bsf	194,0,c	;volatile
  3351   003C4C                     l220:
  3352   003C4C  0012               	return		;funcret
  3353   003C4E                     __end_of_adc_init:
  3354                           	callstack 0
  3355                           
  3356 ;; *************** function _adc_input_pin *****************
  3357 ;; Defined at:
  3358 ;;		line 3 in file "MCAL_layer/adc/adc.c"
  3359 ;; Parameters:    Size  Location     Type
  3360 ;;  my_pin          1    wreg     unsigned char 
  3361 ;; Auto vars:     Size  Location     Type
  3362 ;;  my_pin          1    3[COMRAM] unsigned char 
  3363 ;; Return value:  Size  Location     Type
  3364 ;;                  1    wreg      unsigned char 
  3365 ;; Registers used:
  3366 ;;		wreg, status,2, status,0
  3367 ;; Tracked objects:
  3368 ;;		On entry : 0/0
  3369 ;;		On exit  : 0/0
  3370 ;;		Unchanged: 0/0
  3371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3373 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3374 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3375 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3376 ;;Total ram usage:        3 bytes
  3377 ;; Hardware stack levels used: 1
  3378 ;; Hardware stack levels required when called: 4
  3379 ;; This function calls:
  3380 ;;		Nothing
  3381 ;; This function is called by:
  3382 ;;		_adc_init
  3383 ;;		_adc_select_pin
  3384 ;; This function uses a non-reentrant model
  3385 ;;
  3386                           
  3387                           	psect	text7
  3388   004048                     __ptext7:
  3389                           	callstack 0
  3390   004048                     _adc_input_pin:
  3391                           	callstack 25
  3392                           
  3393                           ;incstack = 0
  3394                           ;adc_input_pin@my_pin stored from wreg
  3395   004048  6E04               	movwf	adc_input_pin@my_pin^0,c
  3396   00404A                     
  3397                           ;MCAL_layer/adc/adc.c: 3: static Std_ReturnType adc_input_pin(uint8 my_pin);MCAL_layer/a
      +                          dc/adc.c: 4: {;MCAL_layer/adc/adc.c: 6:     switch(my_pin)
  3398   00404A  EF4E  F020         	goto	l4073
  3399   00404E                     l4045:
  3400   00404E  8092               	bsf	146,0,c	;volatile
  3401   004050  EF8F  F020         	goto	l209
  3402   004054                     l4047:
  3403   004054  8292               	bsf	146,1,c	;volatile
  3404   004056  EF8F  F020         	goto	l209
  3405   00405A                     l4049:
  3406   00405A  8492               	bsf	146,2,c	;volatile
  3407   00405C  EF8F  F020         	goto	l209
  3408   004060                     l4051:
  3409   004060  8692               	bsf	146,3,c	;volatile
  3410   004062  EF8F  F020         	goto	l209
  3411   004066                     l4053:
  3412   004066  8A92               	bsf	146,5,c	;volatile
  3413   004068  EF8F  F020         	goto	l209
  3414   00406C                     l4055:
  3415   00406C  8096               	bsf	150,0,c	;volatile
  3416   00406E  EF8F  F020         	goto	l209
  3417   004072                     l4057:
  3418   004072  8296               	bsf	150,1,c	;volatile
  3419   004074  EF8F  F020         	goto	l209
  3420   004078                     l4059:
  3421   004078  8496               	bsf	150,2,c	;volatile
  3422   00407A  EF8F  F020         	goto	l209
  3423   00407E                     l4061:
  3424   00407E  8493               	bsf	147,2,c	;volatile
  3425   004080  EF8F  F020         	goto	l209
  3426   004084                     l4063:
  3427   004084  8693               	bsf	147,3,c	;volatile
  3428   004086  EF8F  F020         	goto	l209
  3429   00408A                     l4065:
  3430   00408A  8293               	bsf	147,1,c	;volatile
  3431   00408C  EF8F  F020         	goto	l209
  3432   004090                     l4067:
  3433   004090  8893               	bsf	147,4,c	;volatile
  3434   004092  EF8F  F020         	goto	l209
  3435   004096                     l4069:
  3436   004096  8093               	bsf	147,0,c	;volatile
  3437   004098  EF8F  F020         	goto	l209
  3438   00409C                     l4073:
  3439   00409C  5004               	movf	adc_input_pin@my_pin^0,w,c
  3440   00409E  6E02               	movwf	??_adc_input_pin^0,c
  3441   0040A0  6A03               	clrf	(??_adc_input_pin+1)^0,c
  3442                           
  3443                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3444                           ; Switch size 1, requested type "simple"
  3445                           ; Number of cases is 1, Range of values is 0 to 0
  3446                           ; switch strategies available:
  3447                           ; Name         Instructions Cycles
  3448                           ; simple_byte            4     3 (average)
  3449                           ;	Chosen strategy is simple_byte
  3450   0040A2  5003               	movf	(??_adc_input_pin+1)^0,w,c
  3451   0040A4  0A00               	xorlw	0	; case 0
  3452   0040A6  B4D8               	btfsc	status,2,c
  3453   0040A8  EF58  F020         	goto	l5437
  3454   0040AC  EF8F  F020         	goto	l209
  3455   0040B0                     l5437:
  3456                           
  3457                           ; Switch size 1, requested type "simple"
  3458                           ; Number of cases is 13, Range of values is 0 to 12
  3459                           ; switch strategies available:
  3460                           ; Name         Instructions Cycles
  3461                           ; simple_byte           40    21 (average)
  3462                           ;	Chosen strategy is simple_byte
  3463   0040B0  5002               	movf	??_adc_input_pin^0,w,c
  3464   0040B2  0A00               	xorlw	0	; case 0
  3465   0040B4  B4D8               	btfsc	status,2,c
  3466   0040B6  EF27  F020         	goto	l4045
  3467   0040BA  0A01               	xorlw	1	; case 1
  3468   0040BC  B4D8               	btfsc	status,2,c
  3469   0040BE  EF2A  F020         	goto	l4047
  3470   0040C2  0A03               	xorlw	3	; case 2
  3471   0040C4  B4D8               	btfsc	status,2,c
  3472   0040C6  EF2D  F020         	goto	l4049
  3473   0040CA  0A01               	xorlw	1	; case 3
  3474   0040CC  B4D8               	btfsc	status,2,c
  3475   0040CE  EF30  F020         	goto	l4051
  3476   0040D2  0A07               	xorlw	7	; case 4
  3477   0040D4  B4D8               	btfsc	status,2,c
  3478   0040D6  EF33  F020         	goto	l4053
  3479   0040DA  0A01               	xorlw	1	; case 5
  3480   0040DC  B4D8               	btfsc	status,2,c
  3481   0040DE  EF36  F020         	goto	l4055
  3482   0040E2  0A03               	xorlw	3	; case 6
  3483   0040E4  B4D8               	btfsc	status,2,c
  3484   0040E6  EF39  F020         	goto	l4057
  3485   0040EA  0A01               	xorlw	1	; case 7
  3486   0040EC  B4D8               	btfsc	status,2,c
  3487   0040EE  EF3C  F020         	goto	l4059
  3488   0040F2  0A0F               	xorlw	15	; case 8
  3489   0040F4  B4D8               	btfsc	status,2,c
  3490   0040F6  EF3F  F020         	goto	l4061
  3491   0040FA  0A01               	xorlw	1	; case 9
  3492   0040FC  B4D8               	btfsc	status,2,c
  3493   0040FE  EF42  F020         	goto	l4063
  3494   004102  0A03               	xorlw	3	; case 10
  3495   004104  B4D8               	btfsc	status,2,c
  3496   004106  EF45  F020         	goto	l4065
  3497   00410A  0A01               	xorlw	1	; case 11
  3498   00410C  B4D8               	btfsc	status,2,c
  3499   00410E  EF48  F020         	goto	l4067
  3500   004112  0A07               	xorlw	7	; case 12
  3501   004114  B4D8               	btfsc	status,2,c
  3502   004116  EF4B  F020         	goto	l4069
  3503   00411A  EF8F  F020         	goto	l209
  3504   00411E                     l209:
  3505   00411E  0012               	return		;funcret
  3506   004120                     __end_of_adc_input_pin:
  3507                           	callstack 0
  3508                           
  3509 ;; *************** function _adc_get_result *****************
  3510 ;; Defined at:
  3511 ;;		line 138 in file "MCAL_layer/adc/adc.c"
  3512 ;; Parameters:    Size  Location     Type
  3513 ;;  my_adc          2    1[COMRAM] PTR struct .
  3514 ;;		 -> ADC_Pin(8), 
  3515 ;;  myres           2    3[COMRAM] PTR unsigned short 
  3516 ;;		 -> ADC_Val(2), 
  3517 ;; Auto vars:     Size  Location     Type
  3518 ;;  ret             1    0        unsigned char 
  3519 ;; Return value:  Size  Location     Type
  3520 ;;                  1    wreg      unsigned char 
  3521 ;; Registers used:
  3522 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3523 ;; Tracked objects:
  3524 ;;		On entry : 0/0
  3525 ;;		On exit  : 0/0
  3526 ;;		Unchanged: 0/0
  3527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3529 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3530 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3531 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3532 ;;Total ram usage:        7 bytes
  3533 ;; Hardware stack levels used: 1
  3534 ;; Hardware stack levels required when called: 4
  3535 ;; This function calls:
  3536 ;;		Nothing
  3537 ;; This function is called by:
  3538 ;;		_main
  3539 ;;		_adc_all_conv
  3540 ;; This function uses a non-reentrant model
  3541 ;;
  3542                           
  3543                           	psect	text8
  3544   0041E2                     __ptext8:
  3545                           	callstack 0
  3546   0041E2                     _adc_get_result:
  3547                           	callstack 26
  3548   0041E2                     
  3549                           ;MCAL_layer/adc/adc.c: 142:     if( my_adc == ((void*)0) || myres==((void*)0) )
  3550   0041E2  5002               	movf	adc_get_result@my_adc^0,w,c
  3551   0041E4  1003               	iorwf	(adc_get_result@my_adc+1)^0,w,c
  3552   0041E6  B4D8               	btfsc	status,2,c
  3553   0041E8  EFF8  F020         	goto	u4021
  3554   0041EC  EFFA  F020         	goto	u4020
  3555   0041F0                     u4021:
  3556   0041F0  EF03  F021         	goto	l4573
  3557   0041F4                     u4020:
  3558   0041F4  5004               	movf	adc_get_result@myres^0,w,c
  3559   0041F6  1005               	iorwf	(adc_get_result@myres+1)^0,w,c
  3560   0041F8  A4D8               	btfss	status,2,c
  3561   0041FA  EF01  F021         	goto	u4031
  3562   0041FE  EF03  F021         	goto	u4030
  3563   004202                     u4031:
  3564   004202  EF05  F021         	goto	l4575
  3565   004206                     u4030:
  3566   004206                     l4573:
  3567                           
  3568                           ;MCAL_layer/adc/adc.c: 145:     }
  3569   004206  EF41  F021         	goto	l248
  3570   00420A                     l4575:
  3571                           
  3572                           ;MCAL_layer/adc/adc.c: 147:     { if(my_adc->res_format==1)
  3573   00420A  EE20 F007          	lfsr	2,7
  3574   00420E  5002               	movf	adc_get_result@my_adc^0,w,c
  3575   004210  26D9               	addwf	fsr2l,f,c
  3576   004212  5003               	movf	(adc_get_result@my_adc+1)^0,w,c
  3577   004214  22DA               	addwfc	fsr2h,f,c
  3578   004216  04DE               	decf	postinc2,w,c
  3579   004218  A4D8               	btfss	status,2,c
  3580   00421A  EF11  F021         	goto	u4041
  3581   00421E  EF13  F021         	goto	u4040
  3582   004222                     u4041:
  3583   004222  EF27  F021         	goto	l4579
  3584   004226                     u4040:
  3585   004226                     
  3586                           ;MCAL_layer/adc/adc.c: 148:         *myres=(ADRESH<<8)+ADRESL;
  3587   004226  50C3               	movf	195,w,c	;volatile
  3588   004228  CFC4 F006          	movff	4036,??_adc_get_result	;volatile
  3589   00422C  6A07               	clrf	(??_adc_get_result+1)^0,c
  3590   00422E  C006  F007         	movff	??_adc_get_result,??_adc_get_result+1
  3591   004232  6A06               	clrf	??_adc_get_result^0,c
  3592   004234  2606               	addwf	??_adc_get_result^0,f,c
  3593   004236  0E00               	movlw	0
  3594   004238  2207               	addwfc	(??_adc_get_result+1)^0,f,c
  3595   00423A  C004  FFD9         	movff	adc_get_result@myres,fsr2l
  3596   00423E  C005  FFDA         	movff	adc_get_result@myres+1,fsr2h
  3597   004242  C006  FFDE         	movff	??_adc_get_result,postinc2
  3598   004246  C007  FFDD         	movff	??_adc_get_result+1,postdec2
  3599   00424A  EF41  F021         	goto	l4581
  3600   00424E                     l4579:
  3601                           
  3602                           ;MCAL_layer/adc/adc.c: 150:     {;MCAL_layer/adc/adc.c: 151:     *myres=(((ADRESH<<8)+AD
      +                          RESL)>>6);
  3603   00424E  50C3               	movf	195,w,c	;volatile
  3604   004250  CFC4 F006          	movff	4036,??_adc_get_result	;volatile
  3605   004254  6A07               	clrf	(??_adc_get_result+1)^0,c
  3606   004256  C006  F007         	movff	??_adc_get_result,??_adc_get_result+1
  3607   00425A  6A06               	clrf	??_adc_get_result^0,c
  3608   00425C  2606               	addwf	??_adc_get_result^0,f,c
  3609   00425E  0E00               	movlw	0
  3610   004260  2207               	addwfc	(??_adc_get_result+1)^0,f,c
  3611   004262  0E06               	movlw	6
  3612   004264  6E08               	movwf	(??_adc_get_result+2)^0,c
  3613   004266                     u4055:
  3614   004266  3407               	rlcf	(??_adc_get_result+1)^0,w,c
  3615   004268  3207               	rrcf	(??_adc_get_result+1)^0,f,c
  3616   00426A  3206               	rrcf	??_adc_get_result^0,f,c
  3617   00426C  2E08               	decfsz	(??_adc_get_result+2)^0,f,c
  3618   00426E  EF33  F021         	goto	u4055
  3619   004272  C004  FFD9         	movff	adc_get_result@myres,fsr2l
  3620   004276  C005  FFDA         	movff	adc_get_result@myres+1,fsr2h
  3621   00427A  C006  FFDE         	movff	??_adc_get_result,postinc2
  3622   00427E  C007  FFDD         	movff	??_adc_get_result+1,postdec2
  3623   004282                     l4581:
  3624   004282                     l248:
  3625   004282  0012               	return		;funcret
  3626   004284                     __end_of_adc_get_result:
  3627                           	callstack 0
  3628                           
  3629 ;; *************** function _Resistance_Up_to_1M_selection *****************
  3630 ;; Defined at:
  3631 ;;		line 351 in file "main.c"
  3632 ;; Parameters:    Size  Location     Type
  3633 ;;		None
  3634 ;; Auto vars:     Size  Location     Type
  3635 ;;		None
  3636 ;; Return value:  Size  Location     Type
  3637 ;;                  1    wreg      void 
  3638 ;; Registers used:
  3639 ;;		None
  3640 ;; Tracked objects:
  3641 ;;		On entry : 0/0
  3642 ;;		On exit  : 0/0
  3643 ;;		Unchanged: 0/0
  3644 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3649 ;;Total ram usage:        0 bytes
  3650 ;; Hardware stack levels used: 1
  3651 ;; Hardware stack levels required when called: 4
  3652 ;; This function calls:
  3653 ;;		Nothing
  3654 ;; This function is called by:
  3655 ;;		_main
  3656 ;; This function uses a non-reentrant model
  3657 ;;
  3658                           
  3659                           	psect	text9
  3660   00454C                     __ptext9:
  3661                           	callstack 0
  3662   00454C                     _Resistance_Up_to_1M_selection:
  3663                           	callstack 26
  3664   00454C                     
  3665                           ;main.c: 353: LATAbits.LATA4=1;
  3666   00454C  8889               	bsf	137,4,c	;volatile
  3667                           
  3668                           ;main.c: 354: LATAbits.LATA3=1;
  3669   00454E  8689               	bsf	137,3,c	;volatile
  3670                           
  3671                           ;main.c: 355: LATAbits.LATA5=0;
  3672   004550  9A89               	bcf	137,5,c	;volatile
  3673   004552  0012               	return		;funcret
  3674   004554                     __end_of_Resistance_Up_to_1M_selection:
  3675                           	callstack 0
  3676                           
  3677 ;; *************** function _Resistance_Up_to_10k_selection *****************
  3678 ;; Defined at:
  3679 ;;		line 345 in file "main.c"
  3680 ;; Parameters:    Size  Location     Type
  3681 ;;		None
  3682 ;; Auto vars:     Size  Location     Type
  3683 ;;		None
  3684 ;; Return value:  Size  Location     Type
  3685 ;;                  1    wreg      void 
  3686 ;; Registers used:
  3687 ;;		None
  3688 ;; Tracked objects:
  3689 ;;		On entry : 0/0
  3690 ;;		On exit  : 0/0
  3691 ;;		Unchanged: 0/0
  3692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3697 ;;Total ram usage:        0 bytes
  3698 ;; Hardware stack levels used: 1
  3699 ;; Hardware stack levels required when called: 4
  3700 ;; This function calls:
  3701 ;;		Nothing
  3702 ;; This function is called by:
  3703 ;;		_main
  3704 ;; This function uses a non-reentrant model
  3705 ;;
  3706                           
  3707                           	psect	text10
  3708   004554                     __ptext10:
  3709                           	callstack 0
  3710   004554                     _Resistance_Up_to_10k_selection:
  3711                           	callstack 26
  3712   004554                     
  3713                           ;main.c: 347: LATAbits.LATA4=1;
  3714   004554  8889               	bsf	137,4,c	;volatile
  3715                           
  3716                           ;main.c: 348: LATAbits.LATA3=1;
  3717   004556  8689               	bsf	137,3,c	;volatile
  3718                           
  3719                           ;main.c: 349: LATAbits.LATA5=1;
  3720   004558  8A89               	bsf	137,5,c	;volatile
  3721   00455A  0012               	return		;funcret
  3722   00455C                     __end_of_Resistance_Up_to_10k_selection:
  3723                           	callstack 0
  3724                           
  3725 ;; *************** function _Display_volt *****************
  3726 ;; Defined at:
  3727 ;;		line 199 in file "main.c"
  3728 ;; Parameters:    Size  Location     Type
  3729 ;;  My_lcd          2   39[COMRAM] PTR struct .
  3730 ;;		 -> lcd(6), 
  3731 ;;  x2              2   41[COMRAM] unsigned int 
  3732 ;;  x1              2   43[COMRAM] unsigned int 
  3733 ;;  x0              2   45[COMRAM] unsigned int 
  3734 ;;  x_1             2   47[COMRAM] unsigned int 
  3735 ;;  x_2             2   49[COMRAM] unsigned int 
  3736 ;; Auto vars:     Size  Location     Type
  3737 ;;		None
  3738 ;; Return value:  Size  Location     Type
  3739 ;;                  1    wreg      void 
  3740 ;; Registers used:
  3741 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3742 ;; Tracked objects:
  3743 ;;		On entry : 0/0
  3744 ;;		On exit  : 0/0
  3745 ;;		Unchanged: 0/0
  3746 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3747 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3748 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3749 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3750 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3751 ;;Total ram usage:       12 bytes
  3752 ;; Hardware stack levels used: 1
  3753 ;; Hardware stack levels required when called: 9
  3754 ;; This function calls:
  3755 ;;		_lcd_4bit_sned_character_at_pos
  3756 ;; This function is called by:
  3757 ;;		_main
  3758 ;; This function uses a non-reentrant model
  3759 ;;
  3760                           
  3761                           	psect	text11
  3762   003D54                     __ptext11:
  3763                           	callstack 0
  3764   003D54                     _Display_volt:
  3765                           	callstack 21
  3766   003D54                     
  3767                           ;main.c: 199: void Display_volt(lcd_4 *My_lcd,unsigned int x2,unsigned int x1,unsigned i
      +                          nt x0,unsigned int x_1,unsigned int x_2);main.c: 200:  {;main.c: 201:       lcd_4bit_sne
      +                          d_character_at_pos(My_lcd,1,1,x2+'0');
  3768   003D54  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3769   003D58  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3770   003D5C  0E01               	movlw	1
  3771   003D5E  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3772   003D60  0E01               	movlw	1
  3773   003D62  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3774   003D64  502A               	movf	Display_volt@x2^0,w,c
  3775   003D66  0F30               	addlw	48
  3776   003D68  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3777   003D6A  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3778                           
  3779                           ;main.c: 202:      lcd_4bit_sned_character_at_pos(My_lcd,1,2,x1+'0');
  3780   003D6E  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3781   003D72  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3782   003D76  0E01               	movlw	1
  3783   003D78  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3784   003D7A  0E02               	movlw	2
  3785   003D7C  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3786   003D7E  502C               	movf	Display_volt@x1^0,w,c
  3787   003D80  0F30               	addlw	48
  3788   003D82  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3789   003D84  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3790                           
  3791                           ;main.c: 203:      lcd_4bit_sned_character_at_pos(My_lcd,1,3,x0+'0');
  3792   003D88  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3793   003D8C  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3794   003D90  0E01               	movlw	1
  3795   003D92  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3796   003D94  0E03               	movlw	3
  3797   003D96  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3798   003D98  502E               	movf	Display_volt@x0^0,w,c
  3799   003D9A  0F30               	addlw	48
  3800   003D9C  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3801   003D9E  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3802                           
  3803                           ;main.c: 204:      lcd_4bit_sned_character_at_pos(My_lcd,1,4,'.');
  3804   003DA2  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3805   003DA6  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3806   003DAA  0E01               	movlw	1
  3807   003DAC  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3808   003DAE  0E04               	movlw	4
  3809   003DB0  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3810   003DB2  0E2E               	movlw	46
  3811   003DB4  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3812   003DB6  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3813                           
  3814                           ;main.c: 205:      lcd_4bit_sned_character_at_pos(My_lcd,1,5,x_1+'0');
  3815   003DBA  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3816   003DBE  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3817   003DC2  0E01               	movlw	1
  3818   003DC4  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3819   003DC6  0E05               	movlw	5
  3820   003DC8  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3821   003DCA  5030               	movf	Display_volt@x_1^0,w,c
  3822   003DCC  0F30               	addlw	48
  3823   003DCE  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3824   003DD0  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3825                           
  3826                           ;main.c: 206:      lcd_4bit_sned_character_at_pos(My_lcd,1,6,x_2+'0');
  3827   003DD4  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3828   003DD8  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3829   003DDC  0E01               	movlw	1
  3830   003DDE  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3831   003DE0  0E06               	movlw	6
  3832   003DE2  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3833   003DE4  5032               	movf	Display_volt@x_2^0,w,c
  3834   003DE6  0F30               	addlw	48
  3835   003DE8  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3836   003DEA  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3837                           
  3838                           ;main.c: 207:      lcd_4bit_sned_character_at_pos(My_lcd,1,7,'V');
  3839   003DEE  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3840   003DF2  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3841   003DF6  0E01               	movlw	1
  3842   003DF8  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3843   003DFA  0E07               	movlw	7
  3844   003DFC  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3845   003DFE  0E56               	movlw	86
  3846   003E00  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3847   003E02  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3848                           
  3849                           ;main.c: 208:      lcd_4bit_sned_character_at_pos(My_lcd,1,8,' ');
  3850   003E06  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3851   003E0A  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3852   003E0E  0E01               	movlw	1
  3853   003E10  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3854   003E12  0E08               	movlw	8
  3855   003E14  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3856   003E16  0E20               	movlw	32
  3857   003E18  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3858   003E1A  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3859                           
  3860                           ;main.c: 209:      lcd_4bit_sned_character_at_pos(My_lcd,1,9,' ');
  3861   003E1E  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3862   003E22  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3863   003E26  0E01               	movlw	1
  3864   003E28  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3865   003E2A  0E09               	movlw	9
  3866   003E2C  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3867   003E2E  0E20               	movlw	32
  3868   003E30  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3869   003E32  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3870                           
  3871                           ;main.c: 210:      lcd_4bit_sned_character_at_pos(My_lcd,1,10,' ');
  3872   003E36  C028  F022         	movff	Display_volt@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3873   003E3A  C029  F023         	movff	Display_volt@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3874   003E3E  0E01               	movlw	1
  3875   003E40  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3876   003E42  0E0A               	movlw	10
  3877   003E44  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3878   003E46  0E20               	movlw	32
  3879   003E48  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3880   003E4A  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3881   003E4E  0012               	return		;funcret
  3882   003E50                     __end_of_Display_volt:
  3883                           	callstack 0
  3884                           
  3885 ;; *************** function _Display_Resistance *****************
  3886 ;; Defined at:
  3887 ;;		line 229 in file "main.c"
  3888 ;; Parameters:    Size  Location     Type
  3889 ;;  My_lcd          2   39[COMRAM] PTR struct .
  3890 ;;		 -> lcd(6), 
  3891 ;;  x2              2   41[COMRAM] unsigned int 
  3892 ;;  x1              2   43[COMRAM] unsigned int 
  3893 ;;  x0              2   45[COMRAM] unsigned int 
  3894 ;;  x_1             2   47[COMRAM] unsigned int 
  3895 ;;  x_2             2   49[COMRAM] unsigned int 
  3896 ;; Auto vars:     Size  Location     Type
  3897 ;;		None
  3898 ;; Return value:  Size  Location     Type
  3899 ;;                  1    wreg      void 
  3900 ;; Registers used:
  3901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3902 ;; Tracked objects:
  3903 ;;		On entry : 0/0
  3904 ;;		On exit  : 0/0
  3905 ;;		Unchanged: 0/0
  3906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3907 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3910 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3911 ;;Total ram usage:       12 bytes
  3912 ;; Hardware stack levels used: 1
  3913 ;; Hardware stack levels required when called: 9
  3914 ;; This function calls:
  3915 ;;		_lcd_4bit_sned_character_at_pos
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text12
  3922   003E50                     __ptext12:
  3923                           	callstack 0
  3924   003E50                     _Display_Resistance:
  3925                           	callstack 21
  3926   003E50                     
  3927                           ;main.c: 229: void Display_Resistance(lcd_4 *My_lcd,unsigned int x2,unsigned int x1,unsi
      +                          gned int x0,unsigned int x_1,unsigned int x_2);main.c: 230:   {;main.c: 231:      lcd_4b
      +                          it_sned_character_at_pos(My_lcd,1,1,x2+'0');
  3928   003E50  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3929   003E54  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3930   003E58  0E01               	movlw	1
  3931   003E5A  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3932   003E5C  0E01               	movlw	1
  3933   003E5E  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3934   003E60  502A               	movf	Display_Resistance@x2^0,w,c
  3935   003E62  0F30               	addlw	48
  3936   003E64  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3937   003E66  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3938                           
  3939                           ;main.c: 232:      lcd_4bit_sned_character_at_pos(My_lcd,1,2,x1+'0');
  3940   003E6A  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3941   003E6E  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3942   003E72  0E01               	movlw	1
  3943   003E74  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3944   003E76  0E02               	movlw	2
  3945   003E78  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3946   003E7A  502C               	movf	Display_Resistance@x1^0,w,c
  3947   003E7C  0F30               	addlw	48
  3948   003E7E  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3949   003E80  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3950                           
  3951                           ;main.c: 233:      lcd_4bit_sned_character_at_pos(My_lcd,1,3,x0+'0');
  3952   003E84  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3953   003E88  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3954   003E8C  0E01               	movlw	1
  3955   003E8E  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3956   003E90  0E03               	movlw	3
  3957   003E92  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3958   003E94  502E               	movf	Display_Resistance@x0^0,w,c
  3959   003E96  0F30               	addlw	48
  3960   003E98  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3961   003E9A  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3962                           
  3963                           ;main.c: 234:      lcd_4bit_sned_character_at_pos(My_lcd,1,4,'.');
  3964   003E9E  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3965   003EA2  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3966   003EA6  0E01               	movlw	1
  3967   003EA8  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3968   003EAA  0E04               	movlw	4
  3969   003EAC  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3970   003EAE  0E2E               	movlw	46
  3971   003EB0  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3972   003EB2  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3973                           
  3974                           ;main.c: 235:      lcd_4bit_sned_character_at_pos(My_lcd,1,5,x_1+'0');
  3975   003EB6  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3976   003EBA  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3977   003EBE  0E01               	movlw	1
  3978   003EC0  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3979   003EC2  0E05               	movlw	5
  3980   003EC4  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3981   003EC6  5030               	movf	Display_Resistance@x_1^0,w,c
  3982   003EC8  0F30               	addlw	48
  3983   003ECA  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3984   003ECC  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3985                           
  3986                           ;main.c: 236:      lcd_4bit_sned_character_at_pos(My_lcd,1,6,x_2+'0');
  3987   003ED0  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  3988   003ED4  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  3989   003ED8  0E01               	movlw	1
  3990   003EDA  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  3991   003EDC  0E06               	movlw	6
  3992   003EDE  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  3993   003EE0  5032               	movf	Display_Resistance@x_2^0,w,c
  3994   003EE2  0F30               	addlw	48
  3995   003EE4  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  3996   003EE6  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  3997                           
  3998                           ;main.c: 237:      lcd_4bit_sned_character_at_pos(My_lcd,1,7,'K');
  3999   003EEA  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4000   003EEE  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4001   003EF2  0E01               	movlw	1
  4002   003EF4  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4003   003EF6  0E07               	movlw	7
  4004   003EF8  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4005   003EFA  0E4B               	movlw	75
  4006   003EFC  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4007   003EFE  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4008                           
  4009                           ;main.c: 238:      lcd_4bit_sned_character_at_pos(My_lcd,1,8,'o');
  4010   003F02  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4011   003F06  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4012   003F0A  0E01               	movlw	1
  4013   003F0C  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4014   003F0E  0E08               	movlw	8
  4015   003F10  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4016   003F12  0E6F               	movlw	111
  4017   003F14  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4018   003F16  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4019                           
  4020                           ;main.c: 239:      lcd_4bit_sned_character_at_pos(My_lcd,1,9,'h');
  4021   003F1A  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4022   003F1E  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4023   003F22  0E01               	movlw	1
  4024   003F24  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4025   003F26  0E09               	movlw	9
  4026   003F28  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4027   003F2A  0E68               	movlw	104
  4028   003F2C  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4029   003F2E  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4030                           
  4031                           ;main.c: 240:      lcd_4bit_sned_character_at_pos(My_lcd,1,10,'m');
  4032   003F32  C028  F022         	movff	Display_Resistance@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4033   003F36  C029  F023         	movff	Display_Resistance@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4034   003F3A  0E01               	movlw	1
  4035   003F3C  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4036   003F3E  0E0A               	movlw	10
  4037   003F40  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4038   003F42  0E6D               	movlw	109
  4039   003F44  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4040   003F46  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4041   003F4A  0012               	return		;funcret
  4042   003F4C                     __end_of_Display_Resistance:
  4043                           	callstack 0
  4044                           
  4045 ;; *************** function _Display_Current *****************
  4046 ;; Defined at:
  4047 ;;		line 215 in file "main.c"
  4048 ;; Parameters:    Size  Location     Type
  4049 ;;  My_lcd          2   39[COMRAM] PTR struct .
  4050 ;;		 -> lcd(6), 
  4051 ;;  x2              2   41[COMRAM] unsigned int 
  4052 ;;  x1              2   43[COMRAM] unsigned int 
  4053 ;;  x0              2   45[COMRAM] unsigned int 
  4054 ;;  x_1             2   47[COMRAM] unsigned int 
  4055 ;;  x_2             2   49[COMRAM] unsigned int 
  4056 ;; Auto vars:     Size  Location     Type
  4057 ;;		None
  4058 ;; Return value:  Size  Location     Type
  4059 ;;                  1    wreg      void 
  4060 ;; Registers used:
  4061 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4062 ;; Tracked objects:
  4063 ;;		On entry : 0/0
  4064 ;;		On exit  : 0/0
  4065 ;;		Unchanged: 0/0
  4066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4067 ;;      Params:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4070 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4071 ;;Total ram usage:       12 bytes
  4072 ;; Hardware stack levels used: 1
  4073 ;; Hardware stack levels required when called: 9
  4074 ;; This function calls:
  4075 ;;		_lcd_4bit_sned_character_at_pos
  4076 ;; This function is called by:
  4077 ;;		_main
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text13
  4082   003F4C                     __ptext13:
  4083                           	callstack 0
  4084   003F4C                     _Display_Current:
  4085                           	callstack 21
  4086   003F4C                     
  4087                           ;main.c: 215: void Display_Current(lcd_4 *My_lcd,unsigned int x2,unsigned int x1,unsigne
      +                          d int x0,unsigned int x_1,unsigned int x_2);main.c: 216:  {;main.c: 217:      lcd_4bit_s
      +                          ned_character_at_pos(My_lcd,1,1,x2+'0');
  4088   003F4C  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4089   003F50  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4090   003F54  0E01               	movlw	1
  4091   003F56  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4092   003F58  0E01               	movlw	1
  4093   003F5A  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4094   003F5C  502A               	movf	Display_Current@x2^0,w,c
  4095   003F5E  0F30               	addlw	48
  4096   003F60  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4097   003F62  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4098                           
  4099                           ;main.c: 218:      lcd_4bit_sned_character_at_pos(My_lcd,1,2,x1+'0');
  4100   003F66  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4101   003F6A  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4102   003F6E  0E01               	movlw	1
  4103   003F70  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4104   003F72  0E02               	movlw	2
  4105   003F74  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4106   003F76  502C               	movf	Display_Current@x1^0,w,c
  4107   003F78  0F30               	addlw	48
  4108   003F7A  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4109   003F7C  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4110                           
  4111                           ;main.c: 219:      lcd_4bit_sned_character_at_pos(My_lcd,1,3,x0+'0');
  4112   003F80  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4113   003F84  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4114   003F88  0E01               	movlw	1
  4115   003F8A  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4116   003F8C  0E03               	movlw	3
  4117   003F8E  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4118   003F90  502E               	movf	Display_Current@x0^0,w,c
  4119   003F92  0F30               	addlw	48
  4120   003F94  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4121   003F96  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4122                           
  4123                           ;main.c: 220:      lcd_4bit_sned_character_at_pos(My_lcd,1,4,'.');
  4124   003F9A  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4125   003F9E  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4126   003FA2  0E01               	movlw	1
  4127   003FA4  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4128   003FA6  0E04               	movlw	4
  4129   003FA8  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4130   003FAA  0E2E               	movlw	46
  4131   003FAC  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4132   003FAE  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4133                           
  4134                           ;main.c: 221:      lcd_4bit_sned_character_at_pos(My_lcd,1,5,x_1+'0');
  4135   003FB2  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4136   003FB6  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4137   003FBA  0E01               	movlw	1
  4138   003FBC  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4139   003FBE  0E05               	movlw	5
  4140   003FC0  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4141   003FC2  5030               	movf	Display_Current@x_1^0,w,c
  4142   003FC4  0F30               	addlw	48
  4143   003FC6  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4144   003FC8  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4145                           
  4146                           ;main.c: 222:      lcd_4bit_sned_character_at_pos(My_lcd,1,6,x_2+'0');
  4147   003FCC  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4148   003FD0  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4149   003FD4  0E01               	movlw	1
  4150   003FD6  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4151   003FD8  0E06               	movlw	6
  4152   003FDA  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4153   003FDC  5032               	movf	Display_Current@x_2^0,w,c
  4154   003FDE  0F30               	addlw	48
  4155   003FE0  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4156   003FE2  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4157                           
  4158                           ;main.c: 223:      lcd_4bit_sned_character_at_pos(My_lcd,1,7,'m');
  4159   003FE6  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4160   003FEA  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4161   003FEE  0E01               	movlw	1
  4162   003FF0  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4163   003FF2  0E07               	movlw	7
  4164   003FF4  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4165   003FF6  0E6D               	movlw	109
  4166   003FF8  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4167   003FFA  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4168                           
  4169                           ;main.c: 224:      lcd_4bit_sned_character_at_pos(My_lcd,1,8,'A');
  4170   003FFE  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4171   004002  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4172   004006  0E01               	movlw	1
  4173   004008  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4174   00400A  0E08               	movlw	8
  4175   00400C  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4176   00400E  0E41               	movlw	65
  4177   004010  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4178   004012  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4179                           
  4180                           ;main.c: 225:      lcd_4bit_sned_character_at_pos(My_lcd,1,9,' ');
  4181   004016  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4182   00401A  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4183   00401E  0E01               	movlw	1
  4184   004020  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4185   004022  0E09               	movlw	9
  4186   004024  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4187   004026  0E20               	movlw	32
  4188   004028  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4189   00402A  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4190                           
  4191                           ;main.c: 226:      lcd_4bit_sned_character_at_pos(My_lcd,1,10,' ');
  4192   00402E  C028  F022         	movff	Display_Current@My_lcd,lcd_4bit_sned_character_at_pos@my_lcd
  4193   004032  C029  F023         	movff	Display_Current@My_lcd+1,lcd_4bit_sned_character_at_pos@my_lcd+1
  4194   004036  0E01               	movlw	1
  4195   004038  6E24               	movwf	lcd_4bit_sned_character_at_pos@row^0,c
  4196   00403A  0E0A               	movlw	10
  4197   00403C  6E25               	movwf	lcd_4bit_sned_character_at_pos@column^0,c
  4198   00403E  0E20               	movlw	32
  4199   004040  6E26               	movwf	lcd_4bit_sned_character_at_pos@character^0,c
  4200   004042  ECE7  F021         	call	_lcd_4bit_sned_character_at_pos	;wreg free
  4201   004046  0012               	return		;funcret
  4202   004048                     __end_of_Display_Current:
  4203                           	callstack 0
  4204                           
  4205 ;; *************** function _lcd_4bit_sned_character_at_pos *****************
  4206 ;; Defined at:
  4207 ;;		line 396 in file "ECU_layer/lcd/lcd.c"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;  my_lcd          2   33[COMRAM] PTR struct .
  4210 ;;		 -> lcd(6), 
  4211 ;;  row             1   35[COMRAM] unsigned char 
  4212 ;;  column          1   36[COMRAM] unsigned char 
  4213 ;;  character       1   37[COMRAM] unsigned char 
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;  ret             1   38[COMRAM] unsigned char 
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      unsigned char 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4225 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4226 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4228 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4229 ;;Total ram usage:        6 bytes
  4230 ;; Hardware stack levels used: 1
  4231 ;; Hardware stack levels required when called: 8
  4232 ;; This function calls:
  4233 ;;		_lcd_4bit_sned_character
  4234 ;;		_set_cursor_4
  4235 ;; This function is called by:
  4236 ;;		_Display_volt
  4237 ;;		_Display_Current
  4238 ;;		_Display_Resistance
  4239 ;;		_lcd_4bit_sned_custom_char
  4240 ;; This function uses a non-reentrant model
  4241 ;;
  4242                           
  4243                           	psect	text14
  4244   0043CE                     __ptext14:
  4245                           	callstack 0
  4246   0043CE                     _lcd_4bit_sned_character_at_pos:
  4247                           	callstack 21
  4248   0043CE                     
  4249                           ;ECU_layer/lcd/lcd.c: 400:      if(my_lcd==((void*)0) )
  4250   0043CE  5022               	movf	lcd_4bit_sned_character_at_pos@my_lcd^0,w,c
  4251   0043D0  1023               	iorwf	(lcd_4bit_sned_character_at_pos@my_lcd+1)^0,w,c
  4252   0043D2  A4D8               	btfss	status,2,c
  4253   0043D4  EFEE  F021         	goto	u3331
  4254   0043D8  EFF0  F021         	goto	u3330
  4255   0043DC                     u3331:
  4256   0043DC  EFF4  F021         	goto	l4037
  4257   0043E0                     u3330:
  4258   0043E0                     
  4259                           ;ECU_layer/lcd/lcd.c: 401:     {;ECU_layer/lcd/lcd.c: 402:         ret=(Std_ReturnType) 
      +                          0x0;
  4260   0043E0  0E00               	movlw	0
  4261   0043E2  6E27               	movwf	lcd_4bit_sned_character_at_pos@ret^0,c
  4262                           
  4263                           ;ECU_layer/lcd/lcd.c: 403:     }
  4264   0043E4  EF08  F022         	goto	l4039
  4265   0043E8                     l4037:
  4266                           
  4267                           ;ECU_layer/lcd/lcd.c: 405:     {;ECU_layer/lcd/lcd.c: 407:            ret=set_cursor_4( 
      +                          my_lcd,row, column);
  4268   0043E8  C022  F01B         	movff	lcd_4bit_sned_character_at_pos@my_lcd,set_cursor_4@my_lcd
  4269   0043EC  C023  F01C         	movff	lcd_4bit_sned_character_at_pos@my_lcd+1,set_cursor_4@my_lcd+1
  4270   0043F0  C024  F01D         	movff	lcd_4bit_sned_character_at_pos@row,set_cursor_4@row
  4271   0043F4  C025  F01E         	movff	lcd_4bit_sned_character_at_pos@column,set_cursor_4@column
  4272   0043F8  EC90  F020         	call	_set_cursor_4	;wreg free
  4273   0043FC  6E27               	movwf	lcd_4bit_sned_character_at_pos@ret^0,c
  4274                           
  4275                           ;ECU_layer/lcd/lcd.c: 408:           ret=lcd_4bit_sned_character(my_lcd,character);
  4276   0043FE  C022  F00F         	movff	lcd_4bit_sned_character_at_pos@my_lcd,lcd_4bit_sned_character@my_lcd
  4277   004402  C023  F010         	movff	lcd_4bit_sned_character_at_pos@my_lcd+1,lcd_4bit_sned_character@my_lcd+1
  4278   004406  C026  F011         	movff	lcd_4bit_sned_character_at_pos@character,lcd_4bit_sned_character@character
  4279   00440A  EC17  F01D         	call	_lcd_4bit_sned_character	;wreg free
  4280   00440E  6E27               	movwf	lcd_4bit_sned_character_at_pos@ret^0,c
  4281   004410                     l4039:
  4282                           
  4283                           ;ECU_layer/lcd/lcd.c: 410: return ret;
  4284   004410  5027               	movf	lcd_4bit_sned_character_at_pos@ret^0,w,c
  4285   004412  0012               	return		;funcret
  4286   004414                     __end_of_lcd_4bit_sned_character_at_pos:
  4287                           	callstack 0
  4288                           
  4289 ;; *************** function _set_cursor_4 *****************
  4290 ;; Defined at:
  4291 ;;		line 4 in file "ECU_layer/lcd/lcd.c"
  4292 ;; Parameters:    Size  Location     Type
  4293 ;;  my_lcd          2   26[COMRAM] PTR struct .
  4294 ;;		 -> lcd(6), 
  4295 ;;  row             1   28[COMRAM] unsigned char 
  4296 ;;  column          1   29[COMRAM] unsigned char 
  4297 ;; Auto vars:     Size  Location     Type
  4298 ;;  ret             1   32[COMRAM] unsigned char 
  4299 ;; Return value:  Size  Location     Type
  4300 ;;                  1    wreg      unsigned char 
  4301 ;; Registers used:
  4302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4303 ;; Tracked objects:
  4304 ;;		On entry : 0/0
  4305 ;;		On exit  : 0/0
  4306 ;;		Unchanged: 0/0
  4307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4308 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4309 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4310 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4311 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4312 ;;Total ram usage:        7 bytes
  4313 ;; Hardware stack levels used: 1
  4314 ;; Hardware stack levels required when called: 7
  4315 ;; This function calls:
  4316 ;;		_lcd_4bit_sned_command
  4317 ;; This function is called by:
  4318 ;;		_lcd_4bit_sned_character_at_pos
  4319 ;;		_lcd_4bit_sned_string_at_pos
  4320 ;; This function uses a non-reentrant model
  4321 ;;
  4322                           
  4323                           	psect	text15
  4324   004120                     __ptext15:
  4325                           	callstack 0
  4326   004120                     _set_cursor_4:
  4327                           	callstack 21
  4328   004120                     
  4329                           ;ECU_layer/lcd/lcd.c: 4: static Std_ReturnType set_cursor_4(lcd_4 * my_lcd,char row,char
      +                           column);ECU_layer/lcd/lcd.c: 6:  {;ECU_layer/lcd/lcd.c: 8:  Std_ReturnType ret=(Std_Ret
      +                          urnType) 0x1;
  4330   004120  0E01               	movlw	1
  4331   004122  6E21               	movwf	set_cursor_4@ret^0,c
  4332   004124                     
  4333                           ;ECU_layer/lcd/lcd.c: 9:      if(my_lcd==((void*)0) )
  4334   004124  501B               	movf	set_cursor_4@my_lcd^0,w,c
  4335   004126  101C               	iorwf	(set_cursor_4@my_lcd+1)^0,w,c
  4336   004128  A4D8               	btfss	status,2,c
  4337   00412A  EF99  F020         	goto	u2731
  4338   00412E  EF9B  F020         	goto	u2730
  4339   004132                     u2731:
  4340   004132  EF9F  F020         	goto	l3629
  4341   004136                     u2730:
  4342   004136                     
  4343                           ;ECU_layer/lcd/lcd.c: 10:     {;ECU_layer/lcd/lcd.c: 11:         ret=(Std_ReturnType) 0x
      +                          0;
  4344   004136  0E00               	movlw	0
  4345   004138  6E21               	movwf	set_cursor_4@ret^0,c
  4346                           
  4347                           ;ECU_layer/lcd/lcd.c: 12:     }
  4348   00413A  EFEF  F020         	goto	l3645
  4349   00413E                     l3629:
  4350                           
  4351                           ;ECU_layer/lcd/lcd.c: 14:     { column --;
  4352   00413E  061E               	decf	set_cursor_4@column^0,f,c
  4353                           
  4354                           ;ECU_layer/lcd/lcd.c: 15:     switch(row)
  4355   004140  EFD2  F020         	goto	l3643
  4356   004144                     l3631:
  4357                           
  4358                           ;ECU_layer/lcd/lcd.c: 18:                ret=lcd_4bit_sned_command(my_lcd,(0x80+column))
      +                          ;
  4359   004144  C01B  F00F         	movff	set_cursor_4@my_lcd,lcd_4bit_sned_command@my_lcd
  4360   004148  C01C  F010         	movff	set_cursor_4@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  4361   00414C  501E               	movf	set_cursor_4@column^0,w,c
  4362   00414E  0F80               	addlw	128
  4363   004150  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  4364   004152  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  4365   004156  6E21               	movwf	set_cursor_4@ret^0,c
  4366                           
  4367                           ;ECU_layer/lcd/lcd.c: 19:                break;
  4368   004158  EFEF  F020         	goto	l3645
  4369   00415C                     l3633:
  4370                           
  4371                           ;ECU_layer/lcd/lcd.c: 21:               ret=lcd_4bit_sned_command(my_lcd,(0xc0+column));
  4372   00415C  C01B  F00F         	movff	set_cursor_4@my_lcd,lcd_4bit_sned_command@my_lcd
  4373   004160  C01C  F010         	movff	set_cursor_4@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  4374   004164  501E               	movf	set_cursor_4@column^0,w,c
  4375   004166  0FC0               	addlw	192
  4376   004168  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  4377   00416A  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  4378   00416E  6E21               	movwf	set_cursor_4@ret^0,c
  4379                           
  4380                           ;ECU_layer/lcd/lcd.c: 22:               break;
  4381   004170  EFEF  F020         	goto	l3645
  4382   004174                     l3635:
  4383                           
  4384                           ;ECU_layer/lcd/lcd.c: 24:               ret=lcd_4bit_sned_command(my_lcd,(0x94+column));
  4385   004174  C01B  F00F         	movff	set_cursor_4@my_lcd,lcd_4bit_sned_command@my_lcd
  4386   004178  C01C  F010         	movff	set_cursor_4@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  4387   00417C  501E               	movf	set_cursor_4@column^0,w,c
  4388   00417E  0F94               	addlw	148
  4389   004180  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  4390   004182  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  4391   004186  6E21               	movwf	set_cursor_4@ret^0,c
  4392                           
  4393                           ;ECU_layer/lcd/lcd.c: 25:               break;
  4394   004188  EFEF  F020         	goto	l3645
  4395   00418C                     l3639:
  4396                           
  4397                           ;ECU_layer/lcd/lcd.c: 28:               ret=lcd_4bit_sned_command(my_lcd,(0xd4+column));
  4398   00418C  C01B  F00F         	movff	set_cursor_4@my_lcd,lcd_4bit_sned_command@my_lcd
  4399   004190  C01C  F010         	movff	set_cursor_4@my_lcd+1,lcd_4bit_sned_command@my_lcd+1
  4400   004194  501E               	movf	set_cursor_4@column^0,w,c
  4401   004196  0FD4               	addlw	212
  4402   004198  6E11               	movwf	lcd_4bit_sned_command@command^0,c
  4403   00419A  EC8E  F01C         	call	_lcd_4bit_sned_command	;wreg free
  4404   00419E  6E21               	movwf	set_cursor_4@ret^0,c
  4405                           
  4406                           ;ECU_layer/lcd/lcd.c: 29:               break;
  4407   0041A0  EFEF  F020         	goto	l3645
  4408   0041A4                     l3643:
  4409   0041A4  501D               	movf	set_cursor_4@row^0,w,c
  4410   0041A6  6E1F               	movwf	??_set_cursor_4^0,c
  4411   0041A8  6A20               	clrf	(??_set_cursor_4+1)^0,c
  4412                           
  4413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4414                           ; Switch size 1, requested type "simple"
  4415                           ; Number of cases is 1, Range of values is 0 to 0
  4416                           ; switch strategies available:
  4417                           ; Name         Instructions Cycles
  4418                           ; simple_byte            4     3 (average)
  4419                           ;	Chosen strategy is simple_byte
  4420   0041AA  5020               	movf	(??_set_cursor_4+1)^0,w,c
  4421   0041AC  0A00               	xorlw	0	; case 0
  4422   0041AE  B4D8               	btfsc	status,2,c
  4423   0041B0  EFDC  F020         	goto	l5439
  4424   0041B4  EFEF  F020         	goto	l3645
  4425   0041B8                     l5439:
  4426                           
  4427                           ; Switch size 1, requested type "simple"
  4428                           ; Number of cases is 4, Range of values is 1 to 4
  4429                           ; switch strategies available:
  4430                           ; Name         Instructions Cycles
  4431                           ; simple_byte           13     7 (average)
  4432                           ;	Chosen strategy is simple_byte
  4433   0041B8  501F               	movf	??_set_cursor_4^0,w,c
  4434   0041BA  0A01               	xorlw	1	; case 1
  4435   0041BC  B4D8               	btfsc	status,2,c
  4436   0041BE  EFA2  F020         	goto	l3631
  4437   0041C2  0A03               	xorlw	3	; case 2
  4438   0041C4  B4D8               	btfsc	status,2,c
  4439   0041C6  EFAE  F020         	goto	l3633
  4440   0041CA  0A01               	xorlw	1	; case 3
  4441   0041CC  B4D8               	btfsc	status,2,c
  4442   0041CE  EFBA  F020         	goto	l3635
  4443   0041D2  0A07               	xorlw	7	; case 4
  4444   0041D4  B4D8               	btfsc	status,2,c
  4445   0041D6  EFC6  F020         	goto	l3639
  4446   0041DA  EFEF  F020         	goto	l3645
  4447   0041DE                     l3645:
  4448                           
  4449                           ;ECU_layer/lcd/lcd.c: 36: return ret;
  4450   0041DE  5021               	movf	set_cursor_4@ret^0,w,c
  4451   0041E0  0012               	return		;funcret
  4452   0041E2                     __end_of_set_cursor_4:
  4453                           	callstack 0
  4454                           
  4455 ;; *************** function _lcd_4bit_sned_command *****************
  4456 ;; Defined at:
  4457 ;;		line 176 in file "ECU_layer/lcd/lcd.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;  my_lcd          2   14[COMRAM] PTR struct .
  4460 ;;		 -> lcd(6), 
  4461 ;;  command         1   16[COMRAM] unsigned char 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  i               2   24[COMRAM] int 
  4464 ;;  i               2   22[COMRAM] int 
  4465 ;;  ret             1   21[COMRAM] unsigned char 
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      unsigned char 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4475 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4476 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4477 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4478 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4479 ;;Total ram usage:       12 bytes
  4480 ;; Hardware stack levels used: 1
  4481 ;; Hardware stack levels required when called: 6
  4482 ;; This function calls:
  4483 ;;		_gio_pin_write_logic
  4484 ;;		_lcd_4bit_sned_enable
  4485 ;; This function is called by:
  4486 ;;		_set_cursor_4
  4487 ;;		_lcd_4bit_initilization
  4488 ;;		_lcd_4bit_sned_custom_char
  4489 ;; This function uses a non-reentrant model
  4490 ;;
  4491                           
  4492                           	psect	text16
  4493   00391C                     __ptext16:
  4494                           	callstack 0
  4495   00391C                     _lcd_4bit_sned_command:
  4496                           	callstack 23
  4497   00391C                     
  4498                           ;ECU_layer/lcd/lcd.c: 180:      if(my_lcd==((void*)0) )
  4499   00391C  500F               	movf	lcd_4bit_sned_command@my_lcd^0,w,c
  4500   00391E  1010               	iorwf	(lcd_4bit_sned_command@my_lcd+1)^0,w,c
  4501   003920  A4D8               	btfss	status,2,c
  4502   003922  EF95  F01C         	goto	u2671
  4503   003926  EF97  F01C         	goto	u2670
  4504   00392A                     u2671:
  4505   00392A  EF9B  F01C         	goto	l3569
  4506   00392E                     u2670:
  4507   00392E                     
  4508                           ;ECU_layer/lcd/lcd.c: 181:     {;ECU_layer/lcd/lcd.c: 182:         ret=(Std_ReturnType) 
      +                          0x0;
  4509   00392E  0E00               	movlw	0
  4510   003930  6E16               	movwf	lcd_4bit_sned_command@ret^0,c
  4511                           
  4512                           ;ECU_layer/lcd/lcd.c: 183:     }
  4513   003932  EF15  F01D         	goto	l3601
  4514   003936                     l3569:
  4515   003936  C00F  F002         	movff	lcd_4bit_sned_command@my_lcd,gio_pin_write_logic@my_config
  4516   00393A  C010  F003         	movff	lcd_4bit_sned_command@my_lcd+1,gio_pin_write_logic@my_config+1
  4517   00393E  0E00               	movlw	0
  4518   003940  6E04               	movwf	gio_pin_write_logic@logic^0,c
  4519   003942  EC48  F01B         	call	_gio_pin_write_logic	;wreg free
  4520   003946                     
  4521                           ;ECU_layer/lcd/lcd.c: 186:          for(int i=0;i<4;i++)
  4522   003946  0E00               	movlw	0
  4523   003948  6E18               	movwf	(lcd_4bit_sned_command@i+1)^0,c
  4524   00394A  0E00               	movlw	0
  4525   00394C  6E17               	movwf	lcd_4bit_sned_command@i^0,c
  4526   00394E                     l3577:
  4527   00394E  5017               	movf	lcd_4bit_sned_command@i^0,w,c
  4528   003950  240F               	addwf	lcd_4bit_sned_command@my_lcd^0,w,c
  4529   003952  6E12               	movwf	??_lcd_4bit_sned_command^0,c
  4530   003954  5018               	movf	(lcd_4bit_sned_command@i+1)^0,w,c
  4531   003956  2010               	addwfc	(lcd_4bit_sned_command@my_lcd+1)^0,w,c
  4532   003958  6E13               	movwf	(??_lcd_4bit_sned_command+1)^0,c
  4533   00395A  0E02               	movlw	2
  4534   00395C  2412               	addwf	??_lcd_4bit_sned_command^0,w,c
  4535   00395E  6E02               	movwf	gio_pin_write_logic@my_config^0,c
  4536   003960  0E00               	movlw	0
  4537   003962  2013               	addwfc	(??_lcd_4bit_sned_command+1)^0,w,c
  4538   003964  6E03               	movwf	(gio_pin_write_logic@my_config+1)^0,c
  4539   003966  C017  F014         	movff	lcd_4bit_sned_command@i,??_lcd_4bit_sned_command+2
  4540   00396A  0E04               	movlw	4
  4541   00396C  2614               	addwf	(??_lcd_4bit_sned_command+2)^0,f,c
  4542   00396E  C011  F015         	movff	lcd_4bit_sned_command@command,??_lcd_4bit_sned_command+3
  4543   003972  2A14               	incf	(??_lcd_4bit_sned_command+2)^0,f,c
  4544   003974  EFBE  F01C         	goto	u2684
  4545   003978                     u2685:
  4546   003978  90D8               	bcf	status,0,c
  4547   00397A  3215               	rrcf	(??_lcd_4bit_sned_command+3)^0,f,c
  4548   00397C                     u2684:
  4549   00397C  2E14               	decfsz	(??_lcd_4bit_sned_command+2)^0,f,c
  4550   00397E  EFBC  F01C         	goto	u2685
  4551   003982  5015               	movf	(??_lcd_4bit_sned_command+3)^0,w,c
  4552   003984  0B01               	andlw	1
  4553   003986  6E04               	movwf	gio_pin_write_logic@logic^0,c
  4554   003988  EC48  F01B         	call	_gio_pin_write_logic	;wreg free
  4555   00398C                     
  4556                           ;ECU_layer/lcd/lcd.c: 189:          }
  4557   00398C  4A17               	infsnz	lcd_4bit_sned_command@i^0,f,c
  4558   00398E  2A18               	incf	(lcd_4bit_sned_command@i+1)^0,f,c
  4559   003990  BE18               	btfsc	(lcd_4bit_sned_command@i+1)^0,7,c
  4560   003992  EFD4  F01C         	goto	u2691
  4561   003996  5018               	movf	(lcd_4bit_sned_command@i+1)^0,w,c
  4562   003998  E109               	bnz	u2690
  4563   00399A  0E04               	movlw	4
  4564   00399C  5C17               	subwf	lcd_4bit_sned_command@i^0,w,c
  4565   00399E  A0D8               	btfss	status,0,c
  4566   0039A0  EFD4  F01C         	goto	u2691
  4567   0039A4  EFD6  F01C         	goto	u2690
  4568   0039A8                     u2691:
  4569   0039A8  EFA7  F01C         	goto	l3577
  4570   0039AC                     u2690:
  4571   0039AC  C00F  F00C         	movff	lcd_4bit_sned_command@my_lcd,lcd_4bit_sned_enable@my_lcd
  4572   0039B0  C010  F00D         	movff	lcd_4bit_sned_command@my_lcd+1,lcd_4bit_sned_enable@my_lcd+1
  4573   0039B4  ECBE  F021         	call	_lcd_4bit_sned_enable	;wreg free
  4574   0039B8                     
  4575                           ;ECU_layer/lcd/lcd.c: 192:           for(int i=0;i<4;i++)
  4576   0039B8  0E00               	movlw	0
  4577   0039BA  6E1A               	movwf	(lcd_4bit_sned_command@i_163+1)^0,c
  4578   0039BC  0E00               	movlw	0
  4579   0039BE  6E19               	movwf	lcd_4bit_sned_command@i_163^0,c
  4580   0039C0                     l3591:
  4581   0039C0  5019               	movf	lcd_4bit_sned_command@i_163^0,w,c
  4582   0039C2  240F               	addwf	lcd_4bit_sned_command@my_lcd^0,w,c
  4583   0039C4  6E12               	movwf	??_lcd_4bit_sned_command^0,c
  4584   0039C6  501A               	movf	(lcd_4bit_sned_command@i_163+1)^0,w,c
  4585   0039C8  2010               	addwfc	(lcd_4bit_sned_command@my_lcd+1)^0,w,c
  4586   0039CA  6E13               	movwf	(??_lcd_4bit_sned_command+1)^0,c
  4587   0039CC  0E02               	movlw	2
  4588   0039CE  2412               	addwf	??_lcd_4bit_sned_command^0,w,c
  4589   0039D0  6E02               	movwf	gio_pin_write_logic@my_config^0,c
  4590   0039D2  0E00               	movlw	0
  4591   0039D4  2013               	addwfc	(??_lcd_4bit_sned_command+1)^0,w,c
  4592   0039D6  6E03               	movwf	(gio_pin_write_logic@my_config+1)^0,c
  4593   0039D8  C019  F014         	movff	lcd_4bit_sned_command@i_163,??_lcd_4bit_sned_command+2
  4594   0039DC  C011  F015         	movff	lcd_4bit_sned_command@command,??_lcd_4bit_sned_command+3
  4595   0039E0  2A14               	incf	(??_lcd_4bit_sned_command+2)^0,f,c
  4596   0039E2  EFF5  F01C         	goto	u2704
  4597   0039E6                     u2705:
  4598   0039E6  90D8               	bcf	status,0,c
  4599   0039E8  3215               	rrcf	(??_lcd_4bit_sned_command+3)^0,f,c
  4600   0039EA                     u2704:
  4601   0039EA  2E14               	decfsz	(??_lcd_4bit_sned_command+2)^0,f,c
  4602   0039EC  EFF3  F01C         	goto	u2705
  4603   0039F0  5015               	movf	(??_lcd_4bit_sned_command+3)^0,w,c
  4604   0039F2  0B01               	andlw	1
  4605   0039F4  6E04               	movwf	gio_pin_write_logic@logic^0,c
  4606   0039F6  EC48  F01B         	call	_gio_pin_write_logic	;wreg free
  4607   0039FA                     
  4608                           ;ECU_layer/lcd/lcd.c: 195:          }
  4609   0039FA  4A19               	infsnz	lcd_4bit_sned_command@i_163^0,f,c
  4610   0039FC  2A1A               	incf	(lcd_4bit_sned_command@i_163+1)^0,f,c
  4611   0039FE  BE1A               	btfsc	(lcd_4bit_sned_command@i_163+1)^0,7,c
  4612   003A00  EF0B  F01D         	goto	u2711
  4613   003A04  501A               	movf	(lcd_4bit_sned_command@i_163+1)^0,w,c
  4614   003A06  E109               	bnz	u2710
  4615   003A08  0E04               	movlw	4
  4616   003A0A  5C19               	subwf	lcd_4bit_sned_command@i_163^0,w,c
  4617   003A0C  A0D8               	btfss	status,0,c
  4618   003A0E  EF0B  F01D         	goto	u2711
  4619   003A12  EF0D  F01D         	goto	u2710
  4620   003A16                     u2711:
  4621   003A16  EFE0  F01C         	goto	l3591
  4622   003A1A                     u2710:
  4623   003A1A  C00F  F00C         	movff	lcd_4bit_sned_command@my_lcd,lcd_4bit_sned_enable@my_lcd
  4624   003A1E  C010  F00D         	movff	lcd_4bit_sned_command@my_lcd+1,lcd_4bit_sned_enable@my_lcd+1
  4625   003A22  ECBE  F021         	call	_lcd_4bit_sned_enable	;wreg free
  4626   003A26                     
  4627                           ;ECU_layer/lcd/lcd.c: 197:           ret=(Std_ReturnType) 0x1;
  4628   003A26  0E01               	movlw	1
  4629   003A28  6E16               	movwf	lcd_4bit_sned_command@ret^0,c
  4630   003A2A                     l3601:
  4631                           
  4632                           ;ECU_layer/lcd/lcd.c: 208: return ret;
  4633   003A2A  5016               	movf	lcd_4bit_sned_command@ret^0,w,c
  4634   003A2C  0012               	return		;funcret
  4635   003A2E                     __end_of_lcd_4bit_sned_command:
  4636                           	callstack 0
  4637                           
  4638 ;; *************** function _lcd_4bit_sned_character *****************
  4639 ;; Defined at:
  4640 ;;		line 140 in file "ECU_layer/lcd/lcd.c"
  4641 ;; Parameters:    Size  Location     Type
  4642 ;;  my_lcd          2   14[COMRAM] PTR struct .
  4643 ;;		 -> lcd(6), 
  4644 ;;  character       1   16[COMRAM] unsigned char 
  4645 ;; Auto vars:     Size  Location     Type
  4646 ;;  i               2   24[COMRAM] int 
  4647 ;;  i               2   22[COMRAM] int 
  4648 ;;  ret             1   21[COMRAM] unsigned char 
  4649 ;; Return value:  Size  Location     Type
  4650 ;;                  1    wreg      unsigned char 
  4651 ;; Registers used:
  4652 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4653 ;; Tracked objects:
  4654 ;;		On entry : 0/0
  4655 ;;		On exit  : 0/0
  4656 ;;		Unchanged: 0/0
  4657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4658 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4659 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4660 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4661 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4662 ;;Total ram usage:       12 bytes
  4663 ;; Hardware stack levels used: 1
  4664 ;; Hardware stack levels required when called: 6
  4665 ;; This function calls:
  4666 ;;		_gio_pin_write_logic
  4667 ;;		_lcd_4bit_sned_enable
  4668 ;; This function is called by:
  4669 ;;		_lcd_4bit_sned_character_at_pos
  4670 ;;		_lcd_4bit_sned_string
  4671 ;;		_lcd_4bit_sned_string_at_pos
  4672 ;;		_lcd_4bit_sned_custom_char
  4673 ;; This function uses a non-reentrant model
  4674 ;;
  4675                           
  4676                           	psect	text17
  4677   003A2E                     __ptext17:
  4678                           	callstack 0
  4679   003A2E                     _lcd_4bit_sned_character:
  4680                           	callstack 22
  4681   003A2E                     
  4682                           ;ECU_layer/lcd/lcd.c: 145:      if(my_lcd==((void*)0) )
  4683   003A2E  500F               	movf	lcd_4bit_sned_character@my_lcd^0,w,c
  4684   003A30  1010               	iorwf	(lcd_4bit_sned_character@my_lcd+1)^0,w,c
  4685   003A32  A4D8               	btfss	status,2,c
  4686   003A34  EF1E  F01D         	goto	u2741
  4687   003A38  EF20  F01D         	goto	u2740
  4688   003A3C                     u2741:
  4689   003A3C  EF24  F01D         	goto	l3659
  4690   003A40                     u2740:
  4691   003A40                     
  4692                           ;ECU_layer/lcd/lcd.c: 146:     {;ECU_layer/lcd/lcd.c: 147:         ret=(Std_ReturnType) 
      +                          0x0;
  4693   003A40  0E00               	movlw	0
  4694   003A42  6E16               	movwf	lcd_4bit_sned_character@ret^0,c
  4695                           
  4696                           ;ECU_layer/lcd/lcd.c: 148:     }
  4697   003A44  EF9E  F01D         	goto	l3691
  4698   003A48                     l3659:
  4699   003A48  C00F  F002         	movff	lcd_4bit_sned_character@my_lcd,gio_pin_write_logic@my_config
  4700   003A4C  C010  F003         	movff	lcd_4bit_sned_character@my_lcd+1,gio_pin_write_logic@my_config+1
  4701   003A50  0E01               	movlw	1
  4702   003A52  6E04               	movwf	gio_pin_write_logic@logic^0,c
  4703   003A54  EC48  F01B         	call	_gio_pin_write_logic	;wreg free
  4704   003A58                     
  4705                           ;ECU_layer/lcd/lcd.c: 151:          for(int i=0;i<4;i++)
  4706   003A58  0E00               	movlw	0
  4707   003A5A  6E18               	movwf	(lcd_4bit_sned_character@i+1)^0,c
  4708   003A5C  0E00               	movlw	0
  4709   003A5E  6E17               	movwf	lcd_4bit_sned_character@i^0,c
  4710   003A60                     l3667:
  4711   003A60  5017               	movf	lcd_4bit_sned_character@i^0,w,c
  4712   003A62  240F               	addwf	lcd_4bit_sned_character@my_lcd^0,w,c
  4713   003A64  6E12               	movwf	??_lcd_4bit_sned_character^0,c
  4714   003A66  5018               	movf	(lcd_4bit_sned_character@i+1)^0,w,c
  4715   003A68  2010               	addwfc	(lcd_4bit_sned_character@my_lcd+1)^0,w,c
  4716   003A6A  6E13               	movwf	(??_lcd_4bit_sned_character+1)^0,c
  4717   003A6C  0E02               	movlw	2
  4718   003A6E  2412               	addwf	??_lcd_4bit_sned_character^0,w,c
  4719   003A70  6E02               	movwf	gio_pin_write_logic@my_config^0,c
  4720   003A72  0E00               	movlw	0
  4721   003A74  2013               	addwfc	(??_lcd_4bit_sned_character+1)^0,w,c
  4722   003A76  6E03               	movwf	(gio_pin_write_logic@my_config+1)^0,c
  4723   003A78  C017  F014         	movff	lcd_4bit_sned_character@i,??_lcd_4bit_sned_character+2
  4724   003A7C  0E04               	movlw	4
  4725   003A7E  2614               	addwf	(??_lcd_4bit_sned_character+2)^0,f,c
  4726   003A80  C011  F015         	movff	lcd_4bit_sned_character@character,??_lcd_4bit_sned_character+3
  4727   003A84  2A14               	incf	(??_lcd_4bit_sned_character+2)^0,f,c
  4728   003A86  EF47  F01D         	goto	u2754
  4729   003A8A                     u2755:
  4730   003A8A  90D8               	bcf	status,0,c
  4731   003A8C  3215               	rrcf	(??_lcd_4bit_sned_character+3)^0,f,c
  4732   003A8E                     u2754:
  4733   003A8E  2E14               	decfsz	(??_lcd_4bit_sned_character+2)^0,f,c
  4734   003A90  EF45  F01D         	goto	u2755
  4735   003A94  5015               	movf	(??_lcd_4bit_sned_character+3)^0,w,c
  4736   003A96  0B01               	andlw	1
  4737   003A98  6E04               	movwf	gio_pin_write_logic@logic^0,c
  4738   003A9A  EC48  F01B         	call	_gio_pin_write_logic	;wreg free
  4739   003A9E                     
  4740                           ;ECU_layer/lcd/lcd.c: 154:          }
  4741   003A9E  4A17               	infsnz	lcd_4bit_sned_character@i^0,f,c
  4742   003AA0  2A18               	incf	(lcd_4bit_sned_character@i+1)^0,f,c
  4743   003AA2  BE18               	btfsc	(lcd_4bit_sned_character@i+1)^0,7,c
  4744   003AA4  EF5D  F01D         	goto	u2761
  4745   003AA8  5018               	movf	(lcd_4bit_sned_character@i+1)^0,w,c
  4746   003AAA  E109               	bnz	u2760
  4747   003AAC  0E04               	movlw	4
  4748   003AAE  5C17               	subwf	lcd_4bit_sned_character@i^0,w,c
  4749   003AB0  A0D8               	btfss	status,0,c
  4750   003AB2  EF5D  F01D         	goto	u2761
  4751   003AB6  EF5F  F01D         	goto	u2760
  4752   003ABA                     u2761:
  4753   003ABA  EF30  F01D         	goto	l3667
  4754   003ABE                     u2760:
  4755   003ABE  C00F  F00C         	movff	lcd_4bit_sned_character@my_lcd,lcd_4bit_sned_enable@my_lcd
  4756   003AC2  C010  F00D         	movff	lcd_4bit_sned_character@my_lcd+1,lcd_4bit_sned_enable@my_lcd+1
  4757   003AC6  ECBE  F021         	call	_lcd_4bit_sned_enable	;wreg free
  4758   003ACA                     
  4759                           ;ECU_layer/lcd/lcd.c: 157:           for(int i=0;i<4;i++)
  4760   003ACA  0E00               	movlw	0
  4761   003ACC  6E1A               	movwf	(lcd_4bit_sned_character@i_146+1)^0,c
  4762   003ACE  0E00               	movlw	0
  4763   003AD0  6E19               	movwf	lcd_4bit_sned_character@i_146^0,c
  4764   003AD2                     l3681:
  4765   003AD2  5019               	movf	lcd_4bit_sned_character@i_146^0,w,c
  4766   003AD4  240F               	addwf	lcd_4bit_sned_character@my_lcd^0,w,c
  4767   003AD6  6E12               	movwf	??_lcd_4bit_sned_character^0,c
  4768   003AD8  501A               	movf	(lcd_4bit_sned_character@i_146+1)^0,w,c
  4769   003ADA  2010               	addwfc	(lcd_4bit_sned_character@my_lcd+1)^0,w,c
  4770   003ADC  6E13               	movwf	(??_lcd_4bit_sned_character+1)^0,c
  4771   003ADE  0E02               	movlw	2
  4772   003AE0  2412               	addwf	??_lcd_4bit_sned_character^0,w,c
  4773   003AE2  6E02               	movwf	gio_pin_write_logic@my_config^0,c
  4774   003AE4  0E00               	movlw	0
  4775   003AE6  2013               	addwfc	(??_lcd_4bit_sned_character+1)^0,w,c
  4776   003AE8  6E03               	movwf	(gio_pin_write_logic@my_config+1)^0,c
  4777   003AEA  C019  F014         	movff	lcd_4bit_sned_character@i_146,??_lcd_4bit_sned_character+2
  4778   003AEE  C011  F015         	movff	lcd_4bit_sned_character@character,??_lcd_4bit_sned_character+3
  4779   003AF2  2A14               	incf	(??_lcd_4bit_sned_character+2)^0,f,c
  4780   003AF4  EF7E  F01D         	goto	u2774
  4781   003AF8                     u2775:
  4782   003AF8  90D8               	bcf	status,0,c
  4783   003AFA  3215               	rrcf	(??_lcd_4bit_sned_character+3)^0,f,c
  4784   003AFC                     u2774:
  4785   003AFC  2E14               	decfsz	(??_lcd_4bit_sned_character+2)^0,f,c
  4786   003AFE  EF7C  F01D         	goto	u2775
  4787   003B02  5015               	movf	(??_lcd_4bit_sned_character+3)^0,w,c
  4788   003B04  0B01               	andlw	1
  4789   003B06  6E04               	movwf	gio_pin_write_logic@logic^0,c
  4790   003B08  EC48  F01B         	call	_gio_pin_write_logic	;wreg free
  4791   003B0C                     
  4792                           ;ECU_layer/lcd/lcd.c: 160:          }
  4793   003B0C  4A19               	infsnz	lcd_4bit_sned_character@i_146^0,f,c
  4794   003B0E  2A1A               	incf	(lcd_4bit_sned_character@i_146+1)^0,f,c
  4795   003B10  BE1A               	btfsc	(lcd_4bit_sned_character@i_146+1)^0,7,c
  4796   003B12  EF94  F01D         	goto	u2781
  4797   003B16  501A               	movf	(lcd_4bit_sned_character@i_146+1)^0,w,c
  4798   003B18  E109               	bnz	u2780
  4799   003B1A  0E04               	movlw	4
  4800   003B1C  5C19               	subwf	lcd_4bit_sned_character@i_146^0,w,c
  4801   003B1E  A0D8               	btfss	status,0,c
  4802   003B20  EF94  F01D         	goto	u2781
  4803   003B24  EF96  F01D         	goto	u2780
  4804   003B28                     u2781:
  4805   003B28  EF69  F01D         	goto	l3681
  4806   003B2C                     u2780:
  4807   003B2C  C00F  F00C         	movff	lcd_4bit_sned_character@my_lcd,lcd_4bit_sned_enable@my_lcd
  4808   003B30  C010  F00D         	movff	lcd_4bit_sned_character@my_lcd+1,lcd_4bit_sned_enable@my_lcd+1
  4809   003B34  ECBE  F021         	call	_lcd_4bit_sned_enable	;wreg free
  4810   003B38                     
  4811                           ;ECU_layer/lcd/lcd.c: 162:           ret=(Std_ReturnType) 0x1;
  4812   003B38  0E01               	movlw	1
  4813   003B3A  6E16               	movwf	lcd_4bit_sned_character@ret^0,c
  4814   003B3C                     l3691:
  4815                           
  4816                           ;ECU_layer/lcd/lcd.c: 172: return ret;
  4817   003B3C  5016               	movf	lcd_4bit_sned_character@ret^0,w,c
  4818   003B3E  0012               	return		;funcret
  4819   003B40                     __end_of_lcd_4bit_sned_character:
  4820                           	callstack 0
  4821                           
  4822 ;; *************** function _lcd_4bit_sned_enable *****************
  4823 ;; Defined at:
  4824 ;;		line 50 in file "ECU_layer/lcd/lcd.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  my_lcd          2   11[COMRAM] PTR struct .
  4827 ;;		 -> lcd(6), 
  4828 ;; Auto vars:     Size  Location     Type
  4829 ;;  ret             1   13[COMRAM] unsigned char 
  4830 ;; Return value:  Size  Location     Type
  4831 ;;                  1    wreg      unsigned char 
  4832 ;; Registers used:
  4833 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4834 ;; Tracked objects:
  4835 ;;		On entry : 0/0
  4836 ;;		On exit  : 0/0
  4837 ;;		Unchanged: 0/0
  4838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4839 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4840 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4841 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4842 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4843 ;;Total ram usage:        3 bytes
  4844 ;; Hardware stack levels used: 1
  4845 ;; Hardware stack levels required when called: 5
  4846 ;; This function calls:
  4847 ;;		_gio_pin_write_logic
  4848 ;; This function is called by:
  4849 ;;		_lcd_4bit_sned_character
  4850 ;;		_lcd_4bit_sned_command
  4851 ;; This function uses a non-reentrant model
  4852 ;;
  4853                           
  4854                           	psect	text18
  4855   00437C                     __ptext18:
  4856                           	callstack 0
  4857   00437C                     _lcd_4bit_sned_enable:
  4858                           	callstack 23
  4859   00437C                     
  4860                           ;ECU_layer/lcd/lcd.c: 52:      if(my_lcd==((void*)0) )
  4861   00437C  500C               	movf	lcd_4bit_sned_enable@my_lcd^0,w,c
  4862   00437E  100D               	iorwf	(lcd_4bit_sned_enable@my_lcd+1)^0,w,c
  4863   004380  A4D8               	btfss	status,2,c
  4864   004382  EFC5  F021         	goto	u2661
  4865   004386  EFC7  F021         	goto	u2660
  4866   00438A                     u2661:
  4867   00438A  EFCB  F021         	goto	l3551
  4868   00438E                     u2660:
  4869   00438E                     
  4870                           ;ECU_layer/lcd/lcd.c: 53:     {;ECU_layer/lcd/lcd.c: 54:         ret=(Std_ReturnType) 0x
      +                          0;
  4871   00438E  0E00               	movlw	0
  4872   004390  6E0E               	movwf	lcd_4bit_sned_enable@ret^0,c
  4873                           
  4874                           ;ECU_layer/lcd/lcd.c: 55:     }
  4875   004392  EFE5  F021         	goto	l3559
  4876   004396                     l3551:
  4877   004396  0E01               	movlw	1
  4878   004398  240C               	addwf	lcd_4bit_sned_enable@my_lcd^0,w,c
  4879   00439A  6E02               	movwf	gio_pin_write_logic@my_config^0,c
  4880   00439C  0E00               	movlw	0
  4881   00439E  200D               	addwfc	(lcd_4bit_sned_enable@my_lcd+1)^0,w,c
  4882   0043A0  6E03               	movwf	(gio_pin_write_logic@my_config+1)^0,c
  4883   0043A2  0E01               	movlw	1
  4884   0043A4  6E04               	movwf	gio_pin_write_logic@logic^0,c
  4885   0043A6  EC48  F01B         	call	_gio_pin_write_logic	;wreg free
  4886   0043AA                     
  4887                           ;ECU_layer/lcd/lcd.c: 60:         _delay((unsigned long)((0.5)*(8000000/4000.0)));
  4888   0043AA  0EC8               	movlw	200
  4889   0043AC                     u5087:
  4890   0043AC  D000               	nop2	
  4891   0043AE  2EE8               	decfsz	wreg,f,c
  4892   0043B0  D7FD               	bra	u5087
  4893   0043B2  0E01               	movlw	1
  4894   0043B4  240C               	addwf	lcd_4bit_sned_enable@my_lcd^0,w,c
  4895   0043B6  6E02               	movwf	gio_pin_write_logic@my_config^0,c
  4896   0043B8  0E00               	movlw	0
  4897   0043BA  200D               	addwfc	(lcd_4bit_sned_enable@my_lcd+1)^0,w,c
  4898   0043BC  6E03               	movwf	(gio_pin_write_logic@my_config+1)^0,c
  4899   0043BE  0E00               	movlw	0
  4900   0043C0  6E04               	movwf	gio_pin_write_logic@logic^0,c
  4901   0043C2  EC48  F01B         	call	_gio_pin_write_logic	;wreg free
  4902   0043C6                     
  4903                           ;ECU_layer/lcd/lcd.c: 64:           ret=(Std_ReturnType) 0x1;
  4904   0043C6  0E01               	movlw	1
  4905   0043C8  6E0E               	movwf	lcd_4bit_sned_enable@ret^0,c
  4906   0043CA                     l3559:
  4907                           
  4908                           ;ECU_layer/lcd/lcd.c: 68: return ret;
  4909   0043CA  500E               	movf	lcd_4bit_sned_enable@ret^0,w,c
  4910   0043CC  0012               	return		;funcret
  4911   0043CE                     __end_of_lcd_4bit_sned_enable:
  4912                           	callstack 0
  4913                           
  4914 ;; *************** function _gio_pin_write_logic *****************
  4915 ;; Defined at:
  4916 ;;		line 49 in file "MCAL_layer/GPIO/hel_gpio.c"
  4917 ;; Parameters:    Size  Location     Type
  4918 ;;  my_config       2    1[COMRAM] PTR struct .
  4919 ;;		 -> lcd.lcd_pins(4), lcd(6), 
  4920 ;;  logic           1    3[COMRAM] unsigned char 
  4921 ;; Auto vars:     Size  Location     Type
  4922 ;;  ret             1   10[COMRAM] unsigned char 
  4923 ;; Return value:  Size  Location     Type
  4924 ;;                  1    wreg      unsigned char 
  4925 ;; Registers used:
  4926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  4927 ;; Tracked objects:
  4928 ;;		On entry : 0/0
  4929 ;;		On exit  : 0/0
  4930 ;;		Unchanged: 0/0
  4931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4932 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4933 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4934 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4935 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4936 ;;Total ram usage:       10 bytes
  4937 ;; Hardware stack levels used: 1
  4938 ;; Hardware stack levels required when called: 4
  4939 ;; This function calls:
  4940 ;;		Nothing
  4941 ;; This function is called by:
  4942 ;;		_lcd_4bit_sned_enable
  4943 ;;		_lcd_4bit_sned_character
  4944 ;;		_lcd_4bit_sned_command
  4945 ;;		_gio_pin_init
  4946 ;;		_lcd_4bit_sned
  4947 ;;		_lcd_8bit_sned_enable
  4948 ;;		_lcd_8bit_sned_command
  4949 ;;		_lcd_8bit_sned_character
  4950 ;; This function uses a non-reentrant model
  4951 ;;
  4952                           
  4953                           	psect	text19
  4954   003690                     __ptext19:
  4955                           	callstack 0
  4956   003690                     _gio_pin_write_logic:
  4957                           	callstack 23
  4958   003690                     
  4959                           ;MCAL_layer/GPIO/hel_gpio.c: 49: Std_ReturnType gio_pin_write_logic(pin_config* my_confi
      +                          g,uint8 logic );MCAL_layer/GPIO/hel_gpio.c: 50: { Std_ReturnType ret=(Std_ReturnType) 0x
      +                          1;
  4960   003690  0E01               	movlw	1
  4961   003692  6E0B               	movwf	gio_pin_write_logic@ret^0,c
  4962   003694                     
  4963                           ;MCAL_layer/GPIO/hel_gpio.c: 51:      if(my_config==((void*)0)|| (my_config->my_pin > 8 
      +                          -1) || (my_config->my_port > 5 -1) )
  4964   003694  5002               	movf	gio_pin_write_logic@my_config^0,w,c
  4965   003696  1003               	iorwf	(gio_pin_write_logic@my_config+1)^0,w,c
  4966   003698  B4D8               	btfsc	status,2,c
  4967   00369A  EF51  F01B         	goto	u2611
  4968   00369E  EF53  F01B         	goto	u2610
  4969   0036A2                     u2611:
  4970   0036A2  EF73  F01B         	goto	l3521
  4971   0036A6                     u2610:
  4972   0036A6  C002  FFD9         	movff	gio_pin_write_logic@my_config,fsr2l
  4973   0036AA  C003  FFDA         	movff	gio_pin_write_logic@my_config+1,fsr2h
  4974   0036AE  50DF               	movf	223,w,c
  4975   0036B0  0B07               	andlw	7
  4976   0036B2  6E05               	movwf	??_gio_pin_write_logic^0,c
  4977   0036B4  0E08               	movlw	8
  4978   0036B6  6005               	cpfslt	??_gio_pin_write_logic^0,c
  4979   0036B8  EF60  F01B         	goto	u2621
  4980   0036BC  EF62  F01B         	goto	u2620
  4981   0036C0                     u2621:
  4982   0036C0  EF73  F01B         	goto	l3521
  4983   0036C4                     u2620:
  4984   0036C4  C002  FFD9         	movff	gio_pin_write_logic@my_config,fsr2l
  4985   0036C8  C003  FFDA         	movff	gio_pin_write_logic@my_config+1,fsr2h
  4986   0036CC  30DF               	rrcf	223,w,c
  4987   0036CE  32E8               	rrcf	wreg,f,c
  4988   0036D0  32E8               	rrcf	wreg,f,c
  4989   0036D2  0B07               	andlw	7
  4990   0036D4  6E05               	movwf	??_gio_pin_write_logic^0,c
  4991   0036D6  0E04               	movlw	4
  4992   0036D8  6405               	cpfsgt	??_gio_pin_write_logic^0,c
  4993   0036DA  EF71  F01B         	goto	u2631
  4994   0036DE  EF73  F01B         	goto	u2630
  4995   0036E2                     u2631:
  4996   0036E2  EFE0  F01B         	goto	l3535
  4997   0036E6                     u2630:
  4998   0036E6                     l3521:
  4999                           
  5000                           ;MCAL_layer/GPIO/hel_gpio.c: 52:     {;MCAL_layer/GPIO/hel_gpio.c: 53:         ret=(Std_
      +                          ReturnType) 0x0;
  5001   0036E6  0E00               	movlw	0
  5002   0036E8  6E0B               	movwf	gio_pin_write_logic@ret^0,c
  5003                           
  5004                           ;MCAL_layer/GPIO/hel_gpio.c: 54:     }
  5005   0036EA  EFF5  F01B         	goto	l3537
  5006   0036EE                     l3523:
  5007                           
  5008                           ;MCAL_layer/GPIO/hel_gpio.c: 59:                 (*LAT_REG[my_config->my_port] |=(1<<my_
      +                          config->my_pin));
  5009   0036EE  C002  FFD9         	movff	gio_pin_write_logic@my_config,fsr2l
  5010   0036F2  C003  FFDA         	movff	gio_pin_write_logic@my_config+1,fsr2h
  5011   0036F6  50DF               	movf	223,w,c
  5012   0036F8  0B07               	andlw	7
  5013   0036FA  6E05               	movwf	??_gio_pin_write_logic^0,c
  5014   0036FC  0E01               	movlw	1
  5015   0036FE  6E06               	movwf	(??_gio_pin_write_logic+1)^0,c
  5016   003700  2A05               	incf	??_gio_pin_write_logic^0,f,c
  5017   003702  EF85  F01B         	goto	u2644
  5018   003706                     u2645:
  5019   003706  90D8               	bcf	status,0,c
  5020   003708  3606               	rlcf	(??_gio_pin_write_logic+1)^0,f,c
  5021   00370A                     u2644:
  5022   00370A  2E05               	decfsz	??_gio_pin_write_logic^0,f,c
  5023   00370C  EF83  F01B         	goto	u2645
  5024   003710  C002  FFD9         	movff	gio_pin_write_logic@my_config,fsr2l
  5025   003714  C003  FFDA         	movff	gio_pin_write_logic@my_config+1,fsr2h
  5026   003718  30DF               	rrcf	223,w,c
  5027   00371A  32E8               	rrcf	wreg,f,c
  5028   00371C  32E8               	rrcf	wreg,f,c
  5029   00371E  0B07               	andlw	7
  5030   003720  6E07               	movwf	(??_gio_pin_write_logic+2)^0,c
  5031   003722  5007               	movf	(??_gio_pin_write_logic+2)^0,w,c
  5032   003724  0D02               	mullw	2
  5033   003726  0E8A               	movlw	low _LAT_REG
  5034   003728  24F3               	addwf	243,w,c
  5035   00372A  6ED9               	movwf	fsr2l,c
  5036   00372C  0E00               	movlw	high _LAT_REG
  5037   00372E  20F4               	addwfc	prodh,w,c
  5038   003730  6EDA               	movwf	fsr2h,c
  5039   003732  CFDE F008          	movff	postinc2,??_gio_pin_write_logic+3
  5040   003736  CFDD F009          	movff	postdec2,??_gio_pin_write_logic+4
  5041   00373A  C008  FFD9         	movff	??_gio_pin_write_logic+3,fsr2l
  5042   00373E  C009  FFDA         	movff	??_gio_pin_write_logic+4,fsr2h
  5043   003742  5006               	movf	(??_gio_pin_write_logic+1)^0,w,c
  5044   003744  12DF               	iorwf	indf2,f,c
  5045   003746                     
  5046                           ;MCAL_layer/GPIO/hel_gpio.c: 60:                 my_config->my_logic=1;
  5047   003746  C002  FFD9         	movff	gio_pin_write_logic@my_config,fsr2l
  5048   00374A  C003  FFDA         	movff	gio_pin_write_logic@my_config+1,fsr2h
  5049   00374E  8EDF               	bsf	indf2,7,c
  5050                           
  5051                           ;MCAL_layer/GPIO/hel_gpio.c: 61:                 break;
  5052   003750  EFF5  F01B         	goto	l3537
  5053   003754                     l3527:
  5054                           
  5055                           ;MCAL_layer/GPIO/hel_gpio.c: 64:                 (*LAT_REG[my_config->my_port] &=~(1<<my
      +                          _config->my_pin));
  5056   003754  C002  FFD9         	movff	gio_pin_write_logic@my_config,fsr2l
  5057   003758  C003  FFDA         	movff	gio_pin_write_logic@my_config+1,fsr2h
  5058   00375C  50DF               	movf	223,w,c
  5059   00375E  0B07               	andlw	7
  5060   003760  6E05               	movwf	??_gio_pin_write_logic^0,c
  5061   003762  0E01               	movlw	1
  5062   003764  6E06               	movwf	(??_gio_pin_write_logic+1)^0,c
  5063   003766  2A05               	incf	??_gio_pin_write_logic^0,f,c
  5064   003768  EFB8  F01B         	goto	u2654
  5065   00376C                     u2655:
  5066   00376C  90D8               	bcf	status,0,c
  5067   00376E  3606               	rlcf	(??_gio_pin_write_logic+1)^0,f,c
  5068   003770                     u2654:
  5069   003770  2E05               	decfsz	??_gio_pin_write_logic^0,f,c
  5070   003772  EFB6  F01B         	goto	u2655
  5071   003776  5006               	movf	(??_gio_pin_write_logic+1)^0,w,c
  5072   003778  0AFF               	xorlw	255
  5073   00377A  6E07               	movwf	(??_gio_pin_write_logic+2)^0,c
  5074   00377C  C002  FFD9         	movff	gio_pin_write_logic@my_config,fsr2l
  5075   003780  C003  FFDA         	movff	gio_pin_write_logic@my_config+1,fsr2h
  5076   003784  30DF               	rrcf	223,w,c
  5077   003786  32E8               	rrcf	wreg,f,c
  5078   003788  32E8               	rrcf	wreg,f,c
  5079   00378A  0B07               	andlw	7
  5080   00378C  6E08               	movwf	(??_gio_pin_write_logic+3)^0,c
  5081   00378E  5008               	movf	(??_gio_pin_write_logic+3)^0,w,c
  5082   003790  0D02               	mullw	2
  5083   003792  0E8A               	movlw	low _LAT_REG
  5084   003794  24F3               	addwf	243,w,c
  5085   003796  6ED9               	movwf	fsr2l,c
  5086   003798  0E00               	movlw	high _LAT_REG
  5087   00379A  20F4               	addwfc	prodh,w,c
  5088   00379C  6EDA               	movwf	fsr2h,c
  5089   00379E  CFDE F009          	movff	postinc2,??_gio_pin_write_logic+4
  5090   0037A2  CFDD F00A          	movff	postdec2,??_gio_pin_write_logic+5
  5091   0037A6  C009  FFD9         	movff	??_gio_pin_write_logic+4,fsr2l
  5092   0037AA  C00A  FFDA         	movff	??_gio_pin_write_logic+5,fsr2h
  5093   0037AE  5007               	movf	(??_gio_pin_write_logic+2)^0,w,c
  5094   0037B0  16DF               	andwf	indf2,f,c
  5095   0037B2                     
  5096                           ;MCAL_layer/GPIO/hel_gpio.c: 65:                  my_config->my_logic=0;
  5097   0037B2  C002  FFD9         	movff	gio_pin_write_logic@my_config,fsr2l
  5098   0037B6  C003  FFDA         	movff	gio_pin_write_logic@my_config+1,fsr2h
  5099   0037BA  9EDF               	bcf	indf2,7,c
  5100                           
  5101                           ;MCAL_layer/GPIO/hel_gpio.c: 66:                 break;
  5102   0037BC  EFF5  F01B         	goto	l3537
  5103   0037C0                     l3535:
  5104   0037C0  5004               	movf	gio_pin_write_logic@logic^0,w,c
  5105   0037C2  6E05               	movwf	??_gio_pin_write_logic^0,c
  5106   0037C4  6A06               	clrf	(??_gio_pin_write_logic+1)^0,c
  5107                           
  5108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5109                           ; Switch size 1, requested type "simple"
  5110                           ; Number of cases is 1, Range of values is 0 to 0
  5111                           ; switch strategies available:
  5112                           ; Name         Instructions Cycles
  5113                           ; simple_byte            4     3 (average)
  5114                           ;	Chosen strategy is simple_byte
  5115   0037C6  5006               	movf	(??_gio_pin_write_logic+1)^0,w,c
  5116   0037C8  0A00               	xorlw	0	; case 0
  5117   0037CA  B4D8               	btfsc	status,2,c
  5118   0037CC  EFEA  F01B         	goto	l5441
  5119   0037D0  EF73  F01B         	goto	l3521
  5120   0037D4                     l5441:
  5121                           
  5122                           ; Switch size 1, requested type "simple"
  5123                           ; Number of cases is 2, Range of values is 0 to 1
  5124                           ; switch strategies available:
  5125                           ; Name         Instructions Cycles
  5126                           ; simple_byte            7     4 (average)
  5127                           ;	Chosen strategy is simple_byte
  5128   0037D4  5005               	movf	??_gio_pin_write_logic^0,w,c
  5129   0037D6  0A00               	xorlw	0	; case 0
  5130   0037D8  B4D8               	btfsc	status,2,c
  5131   0037DA  EFAA  F01B         	goto	l3527
  5132   0037DE  0A01               	xorlw	1	; case 1
  5133   0037E0  B4D8               	btfsc	status,2,c
  5134   0037E2  EF77  F01B         	goto	l3523
  5135   0037E6  EF73  F01B         	goto	l3521
  5136   0037EA                     l3537:
  5137                           
  5138                           ;MCAL_layer/GPIO/hel_gpio.c: 73: return ret;
  5139   0037EA  500B               	movf	gio_pin_write_logic@ret^0,w,c
  5140   0037EC  0012               	return		;funcret
  5141   0037EE                     __end_of_gio_pin_write_logic:
  5142                           	callstack 0
  5143                           
  5144 ;; *************** function _DC_Volt_Up_to_5_selection *****************
  5145 ;; Defined at:
  5146 ;;		line 276 in file "main.c"
  5147 ;; Parameters:    Size  Location     Type
  5148 ;;		None
  5149 ;; Auto vars:     Size  Location     Type
  5150 ;;		None
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  1    wreg      void 
  5153 ;; Registers used:
  5154 ;;		None
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5160 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5163 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5164 ;;Total ram usage:        0 bytes
  5165 ;; Hardware stack levels used: 1
  5166 ;; Hardware stack levels required when called: 4
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_main
  5171 ;; This function uses a non-reentrant model
  5172 ;;
  5173                           
  5174                           	psect	text20
  5175   004512                     __ptext20:
  5176                           	callstack 0
  5177   004512                     _DC_Volt_Up_to_5_selection:
  5178                           	callstack 26
  5179   004512                     
  5180                           ;main.c: 278: LATAbits.LATA4=0;
  5181   004512  9889               	bcf	137,4,c	;volatile
  5182                           
  5183                           ;main.c: 279: LATAbits.LATA3=0;
  5184   004514  9689               	bcf	137,3,c	;volatile
  5185                           
  5186                           ;main.c: 280: LATAbits.LATA2=1;
  5187   004516  8489               	bsf	137,2,c	;volatile
  5188                           
  5189                           ;main.c: 281: LATAbits.LATA1=0;
  5190   004518  9289               	bcf	137,1,c	;volatile
  5191                           
  5192                           ;main.c: 282: LATAbits.LATA5=0;
  5193   00451A  9A89               	bcf	137,5,c	;volatile
  5194   00451C  0012               	return		;funcret
  5195   00451E                     __end_of_DC_Volt_Up_to_5_selection:
  5196                           	callstack 0
  5197                           
  5198 ;; *************** function _DC_Volt_Up_to_50_selection *****************
  5199 ;; Defined at:
  5200 ;;		line 286 in file "main.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		None
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5218 ;;Total ram usage:        0 bytes
  5219 ;; Hardware stack levels used: 1
  5220 ;; Hardware stack levels required when called: 4
  5221 ;; This function calls:
  5222 ;;		Nothing
  5223 ;; This function is called by:
  5224 ;;		_main
  5225 ;; This function uses a non-reentrant model
  5226 ;;
  5227                           
  5228                           	psect	text21
  5229   00451E                     __ptext21:
  5230                           	callstack 0
  5231   00451E                     _DC_Volt_Up_to_50_selection:
  5232                           	callstack 26
  5233   00451E                     
  5234                           ;main.c: 288: LATAbits.LATA4=0;
  5235   00451E  9889               	bcf	137,4,c	;volatile
  5236                           
  5237                           ;main.c: 289: LATAbits.LATA3=0;
  5238   004520  9689               	bcf	137,3,c	;volatile
  5239                           
  5240                           ;main.c: 290: LATAbits.LATA2=0;
  5241   004522  9489               	bcf	137,2,c	;volatile
  5242                           
  5243                           ;main.c: 291: LATAbits.LATA1=1;
  5244   004524  8289               	bsf	137,1,c	;volatile
  5245                           
  5246                           ;main.c: 292: LATAbits.LATA5=0;
  5247   004526  9A89               	bcf	137,5,c	;volatile
  5248   004528  0012               	return		;funcret
  5249   00452A                     __end_of_DC_Volt_Up_to_50_selection:
  5250                           	callstack 0
  5251                           
  5252 ;; *************** function _DC_Volt_Up_to_200_selection *****************
  5253 ;; Defined at:
  5254 ;;		line 294 in file "main.c"
  5255 ;; Parameters:    Size  Location     Type
  5256 ;;		None
  5257 ;; Auto vars:     Size  Location     Type
  5258 ;;		None
  5259 ;; Return value:  Size  Location     Type
  5260 ;;                  1    wreg      void 
  5261 ;; Registers used:
  5262 ;;		None
  5263 ;; Tracked objects:
  5264 ;;		On entry : 0/0
  5265 ;;		On exit  : 0/0
  5266 ;;		Unchanged: 0/0
  5267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5272 ;;Total ram usage:        0 bytes
  5273 ;; Hardware stack levels used: 1
  5274 ;; Hardware stack levels required when called: 4
  5275 ;; This function calls:
  5276 ;;		Nothing
  5277 ;; This function is called by:
  5278 ;;		_main
  5279 ;; This function uses a non-reentrant model
  5280 ;;
  5281                           
  5282                           	psect	text22
  5283   00452A                     __ptext22:
  5284                           	callstack 0
  5285   00452A                     _DC_Volt_Up_to_200_selection:
  5286                           	callstack 26
  5287   00452A                     
  5288                           ;main.c: 296: LATAbits.LATA4=0;
  5289   00452A  9889               	bcf	137,4,c	;volatile
  5290                           
  5291                           ;main.c: 297: LATAbits.LATA3=0;
  5292   00452C  9689               	bcf	137,3,c	;volatile
  5293                           
  5294                           ;main.c: 298: LATAbits.LATA2=0;
  5295   00452E  9489               	bcf	137,2,c	;volatile
  5296                           
  5297                           ;main.c: 299: LATAbits.LATA1=0;
  5298   004530  9289               	bcf	137,1,c	;volatile
  5299                           
  5300                           ;main.c: 300: LATAbits.LATA5=0;
  5301   004532  9A89               	bcf	137,5,c	;volatile
  5302   004534  0012               	return		;funcret
  5303   004536                     __end_of_DC_Volt_Up_to_200_selection:
  5304                           	callstack 0
  5305                           
  5306 ;; *************** function _DC_Current_selection *****************
  5307 ;; Defined at:
  5308 ;;		line 330 in file "main.c"
  5309 ;; Parameters:    Size  Location     Type
  5310 ;;		None
  5311 ;; Auto vars:     Size  Location     Type
  5312 ;;		None
  5313 ;; Return value:  Size  Location     Type
  5314 ;;                  1    wreg      void 
  5315 ;; Registers used:
  5316 ;;		None
  5317 ;; Tracked objects:
  5318 ;;		On entry : 0/0
  5319 ;;		On exit  : 0/0
  5320 ;;		Unchanged: 0/0
  5321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5322 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5323 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5324 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5325 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5326 ;;Total ram usage:        0 bytes
  5327 ;; Hardware stack levels used: 1
  5328 ;; Hardware stack levels required when called: 4
  5329 ;; This function calls:
  5330 ;;		Nothing
  5331 ;; This function is called by:
  5332 ;;		_main
  5333 ;; This function uses a non-reentrant model
  5334 ;;
  5335                           
  5336                           	psect	text23
  5337   004542                     __ptext23:
  5338                           	callstack 0
  5339   004542                     _DC_Current_selection:
  5340                           	callstack 26
  5341   004542                     
  5342                           ;main.c: 332: LATAbits.LATA4=0;
  5343   004542  9889               	bcf	137,4,c	;volatile
  5344                           
  5345                           ;main.c: 333: LATAbits.LATA3=1;
  5346   004544  8689               	bsf	137,3,c	;volatile
  5347                           
  5348                           ;main.c: 334: LATCbits.LATC2=0;
  5349   004546  948B               	bcf	139,2,c	;volatile
  5350                           
  5351                           ;main.c: 335: LATAbits.LATA5=0;
  5352   004548  9A89               	bcf	137,5,c	;volatile
  5353   00454A  0012               	return		;funcret
  5354   00454C                     __end_of_DC_Current_selection:
  5355                           	callstack 0
  5356                           
  5357 ;; *************** function _Calculate_digits *****************
  5358 ;; Defined at:
  5359 ;;		line 245 in file "main.c"
  5360 ;; Parameters:    Size  Location     Type
  5361 ;;  x               4   69[COMRAM] float 
  5362 ;;  x2              2   73[COMRAM] PTR unsigned int 
  5363 ;;		 -> main@x2(2), 
  5364 ;;  x1              2   75[COMRAM] PTR unsigned int 
  5365 ;;		 -> main@x1(2), 
  5366 ;;  x0              2   77[COMRAM] PTR unsigned int 
  5367 ;;		 -> main@x0(2), 
  5368 ;;  x_1             2   79[COMRAM] PTR unsigned int 
  5369 ;;		 -> main@x_1(2), 
  5370 ;;  x_2             2   81[COMRAM] PTR unsigned int 
  5371 ;;		 -> main@x_2(2), 
  5372 ;; Auto vars:     Size  Location     Type
  5373 ;;		None
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5383 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Totals:        26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;Total ram usage:       26 bytes
  5388 ;; Hardware stack levels used: 1
  5389 ;; Hardware stack levels required when called: 6
  5390 ;; This function calls:
  5391 ;;		___fldiv
  5392 ;;		___flmul
  5393 ;;		___flsub
  5394 ;;		___fltol
  5395 ;;		___wmul
  5396 ;;		___xxtofl
  5397 ;; This function is called by:
  5398 ;;		_main
  5399 ;; This function uses a non-reentrant model
  5400 ;;
  5401                           
  5402                           	psect	text24
  5403   001FA6                     __ptext24:
  5404                           	callstack 0
  5405   001FA6                     _Calculate_digits:
  5406                           	callstack 24
  5407   001FA6                     
  5408                           ;main.c: 245: void Calculate_digits(float x,unsigned int *x2,unsigned int *x1,unsigned i
      +                          nt *x0,unsigned int *x_1,unsigned int *x_2);main.c: 246: {;main.c: 247: (*x2)=x/100 ; (*
      +                          x1)=(x-(*x2)*100)/10 ; (*x0)=(x-(*x2)*100-(*x1)*10) ;
  5409   001FA6  0E00               	movlw	0
  5410   001FA8  6E27               	movwf	___fldiv@a^0,c
  5411   001FAA  0E00               	movlw	0
  5412   001FAC  6E28               	movwf	(___fldiv@a+1)^0,c
  5413   001FAE  0EC8               	movlw	200
  5414   001FB0  6E29               	movwf	(___fldiv@a+2)^0,c
  5415   001FB2  0E42               	movlw	66
  5416   001FB4  6E2A               	movwf	(___fldiv@a+3)^0,c
  5417   001FB6  C046  F023         	movff	Calculate_digits@x,___fldiv@b
  5418   001FBA  C047  F024         	movff	Calculate_digits@x+1,___fldiv@b+1
  5419   001FBE  C048  F025         	movff	Calculate_digits@x+2,___fldiv@b+2
  5420   001FC2  C049  F026         	movff	Calculate_digits@x+3,___fldiv@b+3
  5421   001FC6  ECC7  F016         	call	___fldiv	;wreg free
  5422   001FCA  C023  F03C         	movff	?___fldiv,___fltol@f1
  5423   001FCE  C024  F03D         	movff	?___fldiv+1,___fltol@f1+1
  5424   001FD2  C025  F03E         	movff	?___fldiv+2,___fltol@f1+2
  5425   001FD6  C026  F03F         	movff	?___fldiv+3,___fltol@f1+3
  5426   001FDA  EC27  F01E         	call	___fltol	;wreg free
  5427   001FDE  C04A  FFD9         	movff	Calculate_digits@x2,fsr2l
  5428   001FE2  C04B  FFDA         	movff	Calculate_digits@x2+1,fsr2h
  5429   001FE6  C03C  FFDE         	movff	?___fltol,postinc2
  5430   001FEA  C03D  FFDD         	movff	?___fltol+1,postdec2
  5431   001FEE  0E00               	movlw	0
  5432   001FF0  6E27               	movwf	___fldiv@a^0,c
  5433   001FF2  0E00               	movlw	0
  5434   001FF4  6E28               	movwf	(___fldiv@a+1)^0,c
  5435   001FF6  0E20               	movlw	32
  5436   001FF8  6E29               	movwf	(___fldiv@a+2)^0,c
  5437   001FFA  0E41               	movlw	65
  5438   001FFC  6E2A               	movwf	(___fldiv@a+3)^0,c
  5439   001FFE  C04A  FFD9         	movff	Calculate_digits@x2,fsr2l
  5440   002002  C04B  FFDA         	movff	Calculate_digits@x2+1,fsr2h
  5441   002006  CFDE F002          	movff	postinc2,___wmul@multiplier
  5442   00200A  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5443   00200E  0E00               	movlw	0
  5444   002010  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5445   002012  0E64               	movlw	100
  5446   002014  6E04               	movwf	___wmul@multiplicand^0,c
  5447   002016  EC43  F022         	call	___wmul	;wreg free
  5448   00201A  C002  F008         	movff	?___wmul,___xxtofl@val
  5449   00201E  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5450   002022  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5451   002024  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5452   002026  0E00               	movlw	0
  5453   002028  ECBF  F019         	call	___xxtofl
  5454   00202C  C008  F01F         	movff	?___xxtofl,___flsub@a
  5455   002030  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5456   002034  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5457   002038  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5458   00203C  C046  F01B         	movff	Calculate_digits@x,___flsub@b
  5459   002040  C047  F01C         	movff	Calculate_digits@x+1,___flsub@b+1
  5460   002044  C048  F01D         	movff	Calculate_digits@x+2,___flsub@b+2
  5461   002048  C049  F01E         	movff	Calculate_digits@x+3,___flsub@b+3
  5462   00204C  EC0A  F022         	call	___flsub	;wreg free
  5463   002050  C01B  F023         	movff	?___flsub,___fldiv@b
  5464   002054  C01C  F024         	movff	?___flsub+1,___fldiv@b+1
  5465   002058  C01D  F025         	movff	?___flsub+2,___fldiv@b+2
  5466   00205C  C01E  F026         	movff	?___flsub+3,___fldiv@b+3
  5467   002060  ECC7  F016         	call	___fldiv	;wreg free
  5468   002064  C023  F03C         	movff	?___fldiv,___fltol@f1
  5469   002068  C024  F03D         	movff	?___fldiv+1,___fltol@f1+1
  5470   00206C  C025  F03E         	movff	?___fldiv+2,___fltol@f1+2
  5471   002070  C026  F03F         	movff	?___fldiv+3,___fltol@f1+3
  5472   002074  EC27  F01E         	call	___fltol	;wreg free
  5473   002078  C04C  FFD9         	movff	Calculate_digits@x1,fsr2l
  5474   00207C  C04D  FFDA         	movff	Calculate_digits@x1+1,fsr2h
  5475   002080  C03C  FFDE         	movff	?___fltol,postinc2
  5476   002084  C03D  FFDD         	movff	?___fltol+1,postdec2
  5477   002088  C04A  FFD9         	movff	Calculate_digits@x2,fsr2l
  5478   00208C  C04B  FFDA         	movff	Calculate_digits@x2+1,fsr2h
  5479   002090  CFDE F002          	movff	postinc2,___wmul@multiplier
  5480   002094  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5481   002098  0E00               	movlw	0
  5482   00209A  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5483   00209C  0E64               	movlw	100
  5484   00209E  6E04               	movwf	___wmul@multiplicand^0,c
  5485   0020A0  EC43  F022         	call	___wmul	;wreg free
  5486   0020A4  C002  F008         	movff	?___wmul,___xxtofl@val
  5487   0020A8  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5488   0020AC  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5489   0020AE  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5490   0020B0  0E00               	movlw	0
  5491   0020B2  ECBF  F019         	call	___xxtofl
  5492   0020B6  C008  F01F         	movff	?___xxtofl,___flsub@a
  5493   0020BA  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5494   0020BE  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5495   0020C2  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5496   0020C6  C046  F01B         	movff	Calculate_digits@x,___flsub@b
  5497   0020CA  C047  F01C         	movff	Calculate_digits@x+1,___flsub@b+1
  5498   0020CE  C048  F01D         	movff	Calculate_digits@x+2,___flsub@b+2
  5499   0020D2  C049  F01E         	movff	Calculate_digits@x+3,___flsub@b+3
  5500   0020D6  EC0A  F022         	call	___flsub	;wreg free
  5501   0020DA  C01B  F05C         	movff	?___flsub,_Calculate_digits$2852
  5502   0020DE  C01C  F05D         	movff	?___flsub+1,_Calculate_digits$2852+1
  5503   0020E2  C01D  F05E         	movff	?___flsub+2,_Calculate_digits$2852+2
  5504   0020E6  C01E  F05F         	movff	?___flsub+3,_Calculate_digits$2852+3
  5505   0020EA  0E00               	movlw	0
  5506   0020EC  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5507   0020EE  0E0A               	movlw	10
  5508   0020F0  6E04               	movwf	___wmul@multiplicand^0,c
  5509   0020F2  C04C  FFD9         	movff	Calculate_digits@x1,fsr2l
  5510   0020F6  C04D  FFDA         	movff	Calculate_digits@x1+1,fsr2h
  5511   0020FA  CFDE F002          	movff	postinc2,___wmul@multiplier
  5512   0020FE  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5513   002102  EC43  F022         	call	___wmul	;wreg free
  5514   002106  C002  F008         	movff	?___wmul,___xxtofl@val
  5515   00210A  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5516   00210E  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5517   002110  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5518   002112  0E00               	movlw	0
  5519   002114  ECBF  F019         	call	___xxtofl
  5520   002118  C008  F01F         	movff	?___xxtofl,___flsub@a
  5521   00211C  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5522   002120  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5523   002124  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5524   002128  C05C  F01B         	movff	_Calculate_digits$2852,___flsub@b
  5525   00212C  C05D  F01C         	movff	_Calculate_digits$2852+1,___flsub@b+1
  5526   002130  C05E  F01D         	movff	_Calculate_digits$2852+2,___flsub@b+2
  5527   002134  C05F  F01E         	movff	_Calculate_digits$2852+3,___flsub@b+3
  5528   002138  EC0A  F022         	call	___flsub	;wreg free
  5529   00213C  C01B  F03C         	movff	?___flsub,___fltol@f1
  5530   002140  C01C  F03D         	movff	?___flsub+1,___fltol@f1+1
  5531   002144  C01D  F03E         	movff	?___flsub+2,___fltol@f1+2
  5532   002148  C01E  F03F         	movff	?___flsub+3,___fltol@f1+3
  5533   00214C  EC27  F01E         	call	___fltol	;wreg free
  5534   002150  C04E  FFD9         	movff	Calculate_digits@x0,fsr2l
  5535   002154  C04F  FFDA         	movff	Calculate_digits@x0+1,fsr2h
  5536   002158  C03C  FFDE         	movff	?___fltol,postinc2
  5537   00215C  C03D  FFDD         	movff	?___fltol+1,postdec2
  5538   002160                     
  5539                           ;main.c: 248:        *x_1=(x*100-(*x2)*10000-(*x1)*1000-(*x0)*100)/10;
  5540   002160  0E27               	movlw	39
  5541   002162  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5542   002164  0E10               	movlw	16
  5543   002166  6E04               	movwf	___wmul@multiplicand^0,c
  5544   002168  C04A  FFD9         	movff	Calculate_digits@x2,fsr2l
  5545   00216C  C04B  FFDA         	movff	Calculate_digits@x2+1,fsr2h
  5546   002170  CFDE F002          	movff	postinc2,___wmul@multiplier
  5547   002174  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5548   002178  EC43  F022         	call	___wmul	;wreg free
  5549   00217C  C002  F008         	movff	?___wmul,___xxtofl@val
  5550   002180  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5551   002184  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5552   002186  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5553   002188  0E00               	movlw	0
  5554   00218A  ECBF  F019         	call	___xxtofl
  5555   00218E  C008  F01F         	movff	?___xxtofl,___flsub@a
  5556   002192  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5557   002196  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5558   00219A  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5559   00219E  0E00               	movlw	0
  5560   0021A0  6E06               	movwf	___flmul@a^0,c
  5561   0021A2  0E00               	movlw	0
  5562   0021A4  6E07               	movwf	(___flmul@a+1)^0,c
  5563   0021A6  0EC8               	movlw	200
  5564   0021A8  6E08               	movwf	(___flmul@a+2)^0,c
  5565   0021AA  0E42               	movlw	66
  5566   0021AC  6E09               	movwf	(___flmul@a+3)^0,c
  5567   0021AE  C046  F002         	movff	Calculate_digits@x,___flmul@b
  5568   0021B2  C047  F003         	movff	Calculate_digits@x+1,___flmul@b+1
  5569   0021B6  C048  F004         	movff	Calculate_digits@x+2,___flmul@b+2
  5570   0021BA  C049  F005         	movff	Calculate_digits@x+3,___flmul@b+3
  5571   0021BE  ECB2  F014         	call	___flmul	;wreg free
  5572   0021C2  C002  F01B         	movff	?___flmul,___flsub@b
  5573   0021C6  C003  F01C         	movff	?___flmul+1,___flsub@b+1
  5574   0021CA  C004  F01D         	movff	?___flmul+2,___flsub@b+2
  5575   0021CE  C005  F01E         	movff	?___flmul+3,___flsub@b+3
  5576   0021D2  EC0A  F022         	call	___flsub	;wreg free
  5577   0021D6  C01B  F05C         	movff	?___flsub,_Calculate_digits$2852
  5578   0021DA  C01C  F05D         	movff	?___flsub+1,_Calculate_digits$2852+1
  5579   0021DE  C01D  F05E         	movff	?___flsub+2,_Calculate_digits$2852+2
  5580   0021E2  C01E  F05F         	movff	?___flsub+3,_Calculate_digits$2852+3
  5581   0021E6                     
  5582                           ;main.c: 248:        *x_1=(x*100-(*x2)*10000-(*x1)*1000-(*x0)*100)/10;
  5583   0021E6  0E03               	movlw	3
  5584   0021E8  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5585   0021EA  0EE8               	movlw	232
  5586   0021EC  6E04               	movwf	___wmul@multiplicand^0,c
  5587   0021EE  C04C  FFD9         	movff	Calculate_digits@x1,fsr2l
  5588   0021F2  C04D  FFDA         	movff	Calculate_digits@x1+1,fsr2h
  5589   0021F6  CFDE F002          	movff	postinc2,___wmul@multiplier
  5590   0021FA  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5591   0021FE  EC43  F022         	call	___wmul	;wreg free
  5592   002202  C002  F008         	movff	?___wmul,___xxtofl@val
  5593   002206  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5594   00220A  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5595   00220C  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5596   00220E  0E00               	movlw	0
  5597   002210  ECBF  F019         	call	___xxtofl
  5598   002214  C008  F01F         	movff	?___xxtofl,___flsub@a
  5599   002218  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5600   00221C  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5601   002220  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5602   002224  C05C  F01B         	movff	_Calculate_digits$2852,___flsub@b
  5603   002228  C05D  F01C         	movff	_Calculate_digits$2852+1,___flsub@b+1
  5604   00222C  C05E  F01D         	movff	_Calculate_digits$2852+2,___flsub@b+2
  5605   002230  C05F  F01E         	movff	_Calculate_digits$2852+3,___flsub@b+3
  5606   002234  EC0A  F022         	call	___flsub	;wreg free
  5607   002238  C01B  F058         	movff	?___flsub,_Calculate_digits$2853
  5608   00223C  C01C  F059         	movff	?___flsub+1,_Calculate_digits$2853+1
  5609   002240  C01D  F05A         	movff	?___flsub+2,_Calculate_digits$2853+2
  5610   002244  C01E  F05B         	movff	?___flsub+3,_Calculate_digits$2853+3
  5611   002248                     
  5612                           ;main.c: 248:        *x_1=(x*100-(*x2)*10000-(*x1)*1000-(*x0)*100)/10;
  5613   002248  0E00               	movlw	0
  5614   00224A  6E27               	movwf	___fldiv@a^0,c
  5615   00224C  0E00               	movlw	0
  5616   00224E  6E28               	movwf	(___fldiv@a+1)^0,c
  5617   002250  0E20               	movlw	32
  5618   002252  6E29               	movwf	(___fldiv@a+2)^0,c
  5619   002254  0E41               	movlw	65
  5620   002256  6E2A               	movwf	(___fldiv@a+3)^0,c
  5621   002258  0E00               	movlw	0
  5622   00225A  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5623   00225C  0E64               	movlw	100
  5624   00225E  6E04               	movwf	___wmul@multiplicand^0,c
  5625   002260  C04E  FFD9         	movff	Calculate_digits@x0,fsr2l
  5626   002264  C04F  FFDA         	movff	Calculate_digits@x0+1,fsr2h
  5627   002268  CFDE F002          	movff	postinc2,___wmul@multiplier
  5628   00226C  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5629   002270  EC43  F022         	call	___wmul	;wreg free
  5630   002274  C002  F008         	movff	?___wmul,___xxtofl@val
  5631   002278  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5632   00227C  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5633   00227E  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5634   002280  0E00               	movlw	0
  5635   002282  ECBF  F019         	call	___xxtofl
  5636   002286  C008  F01F         	movff	?___xxtofl,___flsub@a
  5637   00228A  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5638   00228E  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5639   002292  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5640   002296  C058  F01B         	movff	_Calculate_digits$2853,___flsub@b
  5641   00229A  C059  F01C         	movff	_Calculate_digits$2853+1,___flsub@b+1
  5642   00229E  C05A  F01D         	movff	_Calculate_digits$2853+2,___flsub@b+2
  5643   0022A2  C05B  F01E         	movff	_Calculate_digits$2853+3,___flsub@b+3
  5644   0022A6  EC0A  F022         	call	___flsub	;wreg free
  5645   0022AA  C01B  F023         	movff	?___flsub,___fldiv@b
  5646   0022AE  C01C  F024         	movff	?___flsub+1,___fldiv@b+1
  5647   0022B2  C01D  F025         	movff	?___flsub+2,___fldiv@b+2
  5648   0022B6  C01E  F026         	movff	?___flsub+3,___fldiv@b+3
  5649   0022BA  ECC7  F016         	call	___fldiv	;wreg free
  5650   0022BE  C023  F03C         	movff	?___fldiv,___fltol@f1
  5651   0022C2  C024  F03D         	movff	?___fldiv+1,___fltol@f1+1
  5652   0022C6  C025  F03E         	movff	?___fldiv+2,___fltol@f1+2
  5653   0022CA  C026  F03F         	movff	?___fldiv+3,___fltol@f1+3
  5654   0022CE  EC27  F01E         	call	___fltol	;wreg free
  5655   0022D2  C050  FFD9         	movff	Calculate_digits@x_1,fsr2l
  5656   0022D6  C051  FFDA         	movff	Calculate_digits@x_1+1,fsr2h
  5657   0022DA  C03C  FFDE         	movff	?___fltol,postinc2
  5658   0022DE  C03D  FFDD         	movff	?___fltol+1,postdec2
  5659   0022E2                     
  5660                           ;main.c: 249:        *x_2=(x*100-(*x2)*10000-(*x1)*1000-(*x0)*100-(*x_1)*10);
  5661   0022E2  0E27               	movlw	39
  5662   0022E4  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5663   0022E6  0E10               	movlw	16
  5664   0022E8  6E04               	movwf	___wmul@multiplicand^0,c
  5665   0022EA  C04A  FFD9         	movff	Calculate_digits@x2,fsr2l
  5666   0022EE  C04B  FFDA         	movff	Calculate_digits@x2+1,fsr2h
  5667   0022F2  CFDE F002          	movff	postinc2,___wmul@multiplier
  5668   0022F6  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5669   0022FA  EC43  F022         	call	___wmul	;wreg free
  5670   0022FE  C002  F008         	movff	?___wmul,___xxtofl@val
  5671   002302  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5672   002306  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5673   002308  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5674   00230A  0E00               	movlw	0
  5675   00230C  ECBF  F019         	call	___xxtofl
  5676   002310  C008  F01F         	movff	?___xxtofl,___flsub@a
  5677   002314  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5678   002318  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5679   00231C  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5680   002320  0E00               	movlw	0
  5681   002322  6E06               	movwf	___flmul@a^0,c
  5682   002324  0E00               	movlw	0
  5683   002326  6E07               	movwf	(___flmul@a+1)^0,c
  5684   002328  0EC8               	movlw	200
  5685   00232A  6E08               	movwf	(___flmul@a+2)^0,c
  5686   00232C  0E42               	movlw	66
  5687   00232E  6E09               	movwf	(___flmul@a+3)^0,c
  5688   002330  C046  F002         	movff	Calculate_digits@x,___flmul@b
  5689   002334  C047  F003         	movff	Calculate_digits@x+1,___flmul@b+1
  5690   002338  C048  F004         	movff	Calculate_digits@x+2,___flmul@b+2
  5691   00233C  C049  F005         	movff	Calculate_digits@x+3,___flmul@b+3
  5692   002340  ECB2  F014         	call	___flmul	;wreg free
  5693   002344  C002  F01B         	movff	?___flmul,___flsub@b
  5694   002348  C003  F01C         	movff	?___flmul+1,___flsub@b+1
  5695   00234C  C004  F01D         	movff	?___flmul+2,___flsub@b+2
  5696   002350  C005  F01E         	movff	?___flmul+3,___flsub@b+3
  5697   002354  EC0A  F022         	call	___flsub	;wreg free
  5698   002358  C01B  F05C         	movff	?___flsub,_Calculate_digits$2852
  5699   00235C  C01C  F05D         	movff	?___flsub+1,_Calculate_digits$2852+1
  5700   002360  C01D  F05E         	movff	?___flsub+2,_Calculate_digits$2852+2
  5701   002364  C01E  F05F         	movff	?___flsub+3,_Calculate_digits$2852+3
  5702   002368                     
  5703                           ;main.c: 249:        *x_2=(x*100-(*x2)*10000-(*x1)*1000-(*x0)*100-(*x_1)*10);
  5704   002368  0E03               	movlw	3
  5705   00236A  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5706   00236C  0EE8               	movlw	232
  5707   00236E  6E04               	movwf	___wmul@multiplicand^0,c
  5708   002370  C04C  FFD9         	movff	Calculate_digits@x1,fsr2l
  5709   002374  C04D  FFDA         	movff	Calculate_digits@x1+1,fsr2h
  5710   002378  CFDE F002          	movff	postinc2,___wmul@multiplier
  5711   00237C  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5712   002380  EC43  F022         	call	___wmul	;wreg free
  5713   002384  C002  F008         	movff	?___wmul,___xxtofl@val
  5714   002388  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5715   00238C  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5716   00238E  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5717   002390  0E00               	movlw	0
  5718   002392  ECBF  F019         	call	___xxtofl
  5719   002396  C008  F01F         	movff	?___xxtofl,___flsub@a
  5720   00239A  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5721   00239E  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5722   0023A2  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5723   0023A6  C05C  F01B         	movff	_Calculate_digits$2852,___flsub@b
  5724   0023AA  C05D  F01C         	movff	_Calculate_digits$2852+1,___flsub@b+1
  5725   0023AE  C05E  F01D         	movff	_Calculate_digits$2852+2,___flsub@b+2
  5726   0023B2  C05F  F01E         	movff	_Calculate_digits$2852+3,___flsub@b+3
  5727   0023B6  EC0A  F022         	call	___flsub	;wreg free
  5728   0023BA  C01B  F058         	movff	?___flsub,_Calculate_digits$2853
  5729   0023BE  C01C  F059         	movff	?___flsub+1,_Calculate_digits$2853+1
  5730   0023C2  C01D  F05A         	movff	?___flsub+2,_Calculate_digits$2853+2
  5731   0023C6  C01E  F05B         	movff	?___flsub+3,_Calculate_digits$2853+3
  5732   0023CA                     
  5733                           ;main.c: 249:        *x_2=(x*100-(*x2)*10000-(*x1)*1000-(*x0)*100-(*x_1)*10);
  5734   0023CA  0E00               	movlw	0
  5735   0023CC  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5736   0023CE  0E64               	movlw	100
  5737   0023D0  6E04               	movwf	___wmul@multiplicand^0,c
  5738   0023D2  C04E  FFD9         	movff	Calculate_digits@x0,fsr2l
  5739   0023D6  C04F  FFDA         	movff	Calculate_digits@x0+1,fsr2h
  5740   0023DA  CFDE F002          	movff	postinc2,___wmul@multiplier
  5741   0023DE  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5742   0023E2  EC43  F022         	call	___wmul	;wreg free
  5743   0023E6  C002  F008         	movff	?___wmul,___xxtofl@val
  5744   0023EA  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5745   0023EE  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5746   0023F0  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5747   0023F2  0E00               	movlw	0
  5748   0023F4  ECBF  F019         	call	___xxtofl
  5749   0023F8  C008  F01F         	movff	?___xxtofl,___flsub@a
  5750   0023FC  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5751   002400  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5752   002404  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5753   002408  C058  F01B         	movff	_Calculate_digits$2853,___flsub@b
  5754   00240C  C059  F01C         	movff	_Calculate_digits$2853+1,___flsub@b+1
  5755   002410  C05A  F01D         	movff	_Calculate_digits$2853+2,___flsub@b+2
  5756   002414  C05B  F01E         	movff	_Calculate_digits$2853+3,___flsub@b+3
  5757   002418  EC0A  F022         	call	___flsub	;wreg free
  5758   00241C  C01B  F054         	movff	?___flsub,_Calculate_digits$2854
  5759   002420  C01C  F055         	movff	?___flsub+1,_Calculate_digits$2854+1
  5760   002424  C01D  F056         	movff	?___flsub+2,_Calculate_digits$2854+2
  5761   002428  C01E  F057         	movff	?___flsub+3,_Calculate_digits$2854+3
  5762   00242C                     
  5763                           ;main.c: 249:        *x_2=(x*100-(*x2)*10000-(*x1)*1000-(*x0)*100-(*x_1)*10);
  5764   00242C  0E00               	movlw	0
  5765   00242E  6E05               	movwf	(___wmul@multiplicand+1)^0,c
  5766   002430  0E0A               	movlw	10
  5767   002432  6E04               	movwf	___wmul@multiplicand^0,c
  5768   002434  C050  FFD9         	movff	Calculate_digits@x_1,fsr2l
  5769   002438  C051  FFDA         	movff	Calculate_digits@x_1+1,fsr2h
  5770   00243C  CFDE F002          	movff	postinc2,___wmul@multiplier
  5771   002440  CFDD F003          	movff	postdec2,___wmul@multiplier+1
  5772   002444  EC43  F022         	call	___wmul	;wreg free
  5773   002448  C002  F008         	movff	?___wmul,___xxtofl@val
  5774   00244C  C003  F009         	movff	?___wmul+1,___xxtofl@val+1
  5775   002450  6A0A               	clrf	(___xxtofl@val+2)^0,c
  5776   002452  6A0B               	clrf	(___xxtofl@val+3)^0,c
  5777   002454  0E00               	movlw	0
  5778   002456  ECBF  F019         	call	___xxtofl
  5779   00245A  C008  F01F         	movff	?___xxtofl,___flsub@a
  5780   00245E  C009  F020         	movff	?___xxtofl+1,___flsub@a+1
  5781   002462  C00A  F021         	movff	?___xxtofl+2,___flsub@a+2
  5782   002466  C00B  F022         	movff	?___xxtofl+3,___flsub@a+3
  5783   00246A  C054  F01B         	movff	_Calculate_digits$2854,___flsub@b
  5784   00246E  C055  F01C         	movff	_Calculate_digits$2854+1,___flsub@b+1
  5785   002472  C056  F01D         	movff	_Calculate_digits$2854+2,___flsub@b+2
  5786   002476  C057  F01E         	movff	_Calculate_digits$2854+3,___flsub@b+3
  5787   00247A  EC0A  F022         	call	___flsub	;wreg free
  5788   00247E  C01B  F03C         	movff	?___flsub,___fltol@f1
  5789   002482  C01C  F03D         	movff	?___flsub+1,___fltol@f1+1
  5790   002486  C01D  F03E         	movff	?___flsub+2,___fltol@f1+2
  5791   00248A  C01E  F03F         	movff	?___flsub+3,___fltol@f1+3
  5792   00248E  EC27  F01E         	call	___fltol	;wreg free
  5793   002492  C052  FFD9         	movff	Calculate_digits@x_2,fsr2l
  5794   002496  C053  FFDA         	movff	Calculate_digits@x_2+1,fsr2h
  5795   00249A  C03C  FFDE         	movff	?___fltol,postinc2
  5796   00249E  C03D  FFDD         	movff	?___fltol+1,postdec2
  5797   0024A2  0012               	return		;funcret
  5798   0024A4                     __end_of_Calculate_digits:
  5799                           	callstack 0
  5800                           
  5801 ;; *************** function ___xxtofl *****************
  5802 ;; Defined at:
  5803 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\xxtofl.c"
  5804 ;; Parameters:    Size  Location     Type
  5805 ;;  sign            1    wreg     unsigned char 
  5806 ;;  val             4    7[COMRAM] long 
  5807 ;; Auto vars:     Size  Location     Type
  5808 ;;  sign            1   15[COMRAM] unsigned char 
  5809 ;;  arg             4   17[COMRAM] unsigned long 
  5810 ;;  exp             1   16[COMRAM] unsigned char 
  5811 ;; Return value:  Size  Location     Type
  5812 ;;                  4    7[COMRAM] unsigned char 
  5813 ;; Registers used:
  5814 ;;		wreg, status,2, status,0
  5815 ;; Tracked objects:
  5816 ;;		On entry : 0/0
  5817 ;;		On exit  : 0/0
  5818 ;;		Unchanged: 0/0
  5819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5820 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5821 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5822 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5823 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5824 ;;Total ram usage:       14 bytes
  5825 ;; Hardware stack levels used: 1
  5826 ;; Hardware stack levels required when called: 4
  5827 ;; This function calls:
  5828 ;;		Nothing
  5829 ;; This function is called by:
  5830 ;;		_main
  5831 ;;		_Calculate_digits
  5832 ;; This function uses a non-reentrant model
  5833 ;;
  5834                           
  5835                           	psect	text25
  5836   00337E                     __ptext25:
  5837                           	callstack 0
  5838   00337E                     ___xxtofl:
  5839                           	callstack 26
  5840                           
  5841                           ;incstack = 0
  5842                           ;___xxtofl@sign stored from wreg
  5843   00337E  6E10               	movwf	___xxtofl@sign^0,c
  5844   003380  5010               	movf	___xxtofl@sign^0,w,c
  5845   003382  B4D8               	btfsc	status,2,c
  5846   003384  EFC6  F019         	goto	u3831
  5847   003388  EFC8  F019         	goto	u3830
  5848   00338C                     u3831:
  5849   00338C  EFEA  F019         	goto	l1434
  5850   003390                     u3830:
  5851   003390  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  5852   003392  EFCF  F019         	goto	u3840
  5853   003396  EFCD  F019         	goto	u3841
  5854   00339A                     u3841:
  5855   00339A  EFEA  F019         	goto	l1434
  5856   00339E                     u3840:
  5857   00339E  C008  F00C         	movff	___xxtofl@val,??___xxtofl
  5858   0033A2  C009  F00D         	movff	___xxtofl@val+1,??___xxtofl+1
  5859   0033A6  C00A  F00E         	movff	___xxtofl@val+2,??___xxtofl+2
  5860   0033AA  C00B  F00F         	movff	___xxtofl@val+3,??___xxtofl+3
  5861   0033AE  1E0C               	comf	??___xxtofl^0,f,c
  5862   0033B0  1E0D               	comf	(??___xxtofl+1)^0,f,c
  5863   0033B2  1E0E               	comf	(??___xxtofl+2)^0,f,c
  5864   0033B4  1E0F               	comf	(??___xxtofl+3)^0,f,c
  5865   0033B6  2A0C               	incf	??___xxtofl^0,f,c
  5866   0033B8  0E00               	movlw	0
  5867   0033BA  220D               	addwfc	(??___xxtofl+1)^0,f,c
  5868   0033BC  220E               	addwfc	(??___xxtofl+2)^0,f,c
  5869   0033BE  220F               	addwfc	(??___xxtofl+3)^0,f,c
  5870   0033C0  C00C  F012         	movff	??___xxtofl,___xxtofl@arg
  5871   0033C4  C00D  F013         	movff	??___xxtofl+1,___xxtofl@arg+1
  5872   0033C8  C00E  F014         	movff	??___xxtofl+2,___xxtofl@arg+2
  5873   0033CC  C00F  F015         	movff	??___xxtofl+3,___xxtofl@arg+3
  5874   0033D0  EFF2  F019         	goto	l4409
  5875   0033D4                     l1434:
  5876   0033D4  C008  F012         	movff	___xxtofl@val,___xxtofl@arg
  5877   0033D8  C009  F013         	movff	___xxtofl@val+1,___xxtofl@arg+1
  5878   0033DC  C00A  F014         	movff	___xxtofl@val+2,___xxtofl@arg+2
  5879   0033E0  C00B  F015         	movff	___xxtofl@val+3,___xxtofl@arg+3
  5880   0033E4                     l4409:
  5881   0033E4  5008               	movf	___xxtofl@val^0,w,c
  5882   0033E6  1009               	iorwf	(___xxtofl@val+1)^0,w,c
  5883   0033E8  100A               	iorwf	(___xxtofl@val+2)^0,w,c
  5884   0033EA  100B               	iorwf	(___xxtofl@val+3)^0,w,c
  5885   0033EC  A4D8               	btfss	status,2,c
  5886   0033EE  EFFB  F019         	goto	u3851
  5887   0033F2  EFFD  F019         	goto	u3850
  5888   0033F6                     u3851:
  5889   0033F6  EF07  F01A         	goto	l4415
  5890   0033FA                     u3850:
  5891   0033FA  0E00               	movlw	0
  5892   0033FC  6E08               	movwf	?___xxtofl^0,c
  5893   0033FE  0E00               	movlw	0
  5894   003400  6E09               	movwf	(?___xxtofl+1)^0,c
  5895   003402  0E00               	movlw	0
  5896   003404  6E0A               	movwf	(?___xxtofl+2)^0,c
  5897   003406  0E00               	movlw	0
  5898   003408  6E0B               	movwf	(?___xxtofl+3)^0,c
  5899   00340A  EF98  F01A         	goto	l1437
  5900   00340E                     l4415:
  5901   00340E  0E96               	movlw	150
  5902   003410  6E11               	movwf	___xxtofl@exp^0,c
  5903   003412  EF11  F01A         	goto	l4419
  5904   003416                     l4417:
  5905   003416  2A11               	incf	___xxtofl@exp^0,f,c
  5906   003418  90D8               	bcf	status,0,c
  5907   00341A  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  5908   00341C  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  5909   00341E  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  5910   003420  3212               	rrcf	___xxtofl@arg^0,f,c
  5911   003422                     l4419:
  5912   003422  0E00               	movlw	0
  5913   003424  1412               	andwf	___xxtofl@arg^0,w,c
  5914   003426  6E0C               	movwf	??___xxtofl^0,c
  5915   003428  0E00               	movlw	0
  5916   00342A  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  5917   00342C  6E0D               	movwf	(??___xxtofl+1)^0,c
  5918   00342E  0E00               	movlw	0
  5919   003430  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  5920   003432  6E0E               	movwf	(??___xxtofl+2)^0,c
  5921   003434  0EFE               	movlw	254
  5922   003436  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  5923   003438  6E0F               	movwf	(??___xxtofl+3)^0,c
  5924   00343A  500C               	movf	??___xxtofl^0,w,c
  5925   00343C  100D               	iorwf	(??___xxtofl+1)^0,w,c
  5926   00343E  100E               	iorwf	(??___xxtofl+2)^0,w,c
  5927   003440  100F               	iorwf	(??___xxtofl+3)^0,w,c
  5928   003442  A4D8               	btfss	status,2,c
  5929   003444  EF26  F01A         	goto	u3861
  5930   003448  EF28  F01A         	goto	u3860
  5931   00344C                     u3861:
  5932   00344C  EF0B  F01A         	goto	l4417
  5933   003450                     u3860:
  5934   003450  EF36  F01A         	goto	l1441
  5935   003454                     l4421:
  5936   003454  2A11               	incf	___xxtofl@exp^0,f,c
  5937   003456  0E01               	movlw	1
  5938   003458  2612               	addwf	___xxtofl@arg^0,f,c
  5939   00345A  0E00               	movlw	0
  5940   00345C  2213               	addwfc	(___xxtofl@arg+1)^0,f,c
  5941   00345E  2214               	addwfc	(___xxtofl@arg+2)^0,f,c
  5942   003460  2215               	addwfc	(___xxtofl@arg+3)^0,f,c
  5943   003462  90D8               	bcf	status,0,c
  5944   003464  3215               	rrcf	(___xxtofl@arg+3)^0,f,c
  5945   003466  3214               	rrcf	(___xxtofl@arg+2)^0,f,c
  5946   003468  3213               	rrcf	(___xxtofl@arg+1)^0,f,c
  5947   00346A  3212               	rrcf	___xxtofl@arg^0,f,c
  5948   00346C                     l1441:
  5949   00346C  0E00               	movlw	0
  5950   00346E  1412               	andwf	___xxtofl@arg^0,w,c
  5951   003470  6E0C               	movwf	??___xxtofl^0,c
  5952   003472  0E00               	movlw	0
  5953   003474  1413               	andwf	(___xxtofl@arg+1)^0,w,c
  5954   003476  6E0D               	movwf	(??___xxtofl+1)^0,c
  5955   003478  0E00               	movlw	0
  5956   00347A  1414               	andwf	(___xxtofl@arg+2)^0,w,c
  5957   00347C  6E0E               	movwf	(??___xxtofl+2)^0,c
  5958   00347E  0EFF               	movlw	255
  5959   003480  1415               	andwf	(___xxtofl@arg+3)^0,w,c
  5960   003482  6E0F               	movwf	(??___xxtofl+3)^0,c
  5961   003484  500C               	movf	??___xxtofl^0,w,c
  5962   003486  100D               	iorwf	(??___xxtofl+1)^0,w,c
  5963   003488  100E               	iorwf	(??___xxtofl+2)^0,w,c
  5964   00348A  100F               	iorwf	(??___xxtofl+3)^0,w,c
  5965   00348C  A4D8               	btfss	status,2,c
  5966   00348E  EF4B  F01A         	goto	u3871
  5967   003492  EF4D  F01A         	goto	u3870
  5968   003496                     u3871:
  5969   003496  EF2A  F01A         	goto	l4421
  5970   00349A                     u3870:
  5971   00349A  EF55  F01A         	goto	l4429
  5972   00349E                     l4427:
  5973   00349E  0611               	decf	___xxtofl@exp^0,f,c
  5974   0034A0  90D8               	bcf	status,0,c
  5975   0034A2  3612               	rlcf	___xxtofl@arg^0,f,c
  5976   0034A4  3613               	rlcf	(___xxtofl@arg+1)^0,f,c
  5977   0034A6  3614               	rlcf	(___xxtofl@arg+2)^0,f,c
  5978   0034A8  3615               	rlcf	(___xxtofl@arg+3)^0,f,c
  5979   0034AA                     l4429:
  5980   0034AA  BE14               	btfsc	(___xxtofl@arg+2)^0,7,c
  5981   0034AC  EF5A  F01A         	goto	u3881
  5982   0034B0  EF5C  F01A         	goto	u3880
  5983   0034B4                     u3881:
  5984   0034B4  EF64  F01A         	goto	l1448
  5985   0034B8                     u3880:
  5986   0034B8  0E02               	movlw	2
  5987   0034BA  6011               	cpfslt	___xxtofl@exp^0,c
  5988   0034BC  EF62  F01A         	goto	u3891
  5989   0034C0  EF64  F01A         	goto	u3890
  5990   0034C4                     u3891:
  5991   0034C4  EF4F  F01A         	goto	l4427
  5992   0034C8                     u3890:
  5993   0034C8                     l1448:
  5994   0034C8  B011               	btfsc	___xxtofl@exp^0,0,c
  5995   0034CA  EF69  F01A         	goto	u3901
  5996   0034CE  EF6B  F01A         	goto	u3900
  5997   0034D2                     u3901:
  5998   0034D2  EF6C  F01A         	goto	l4435
  5999   0034D6                     u3900:
  6000   0034D6  9E14               	bcf	(___xxtofl@arg+2)^0,7,c
  6001   0034D8                     l4435:
  6002   0034D8  90D8               	bcf	status,0,c
  6003   0034DA  3211               	rrcf	___xxtofl@exp^0,f,c
  6004   0034DC  C011  F00C         	movff	___xxtofl@exp,??___xxtofl
  6005   0034E0  6A0D               	clrf	(??___xxtofl+1)^0,c
  6006   0034E2  6A0E               	clrf	(??___xxtofl+2)^0,c
  6007   0034E4  6A0F               	clrf	(??___xxtofl+3)^0,c
  6008   0034E6  C00C  F00F         	movff	??___xxtofl,??___xxtofl+3
  6009   0034EA  6A0E               	clrf	(??___xxtofl+2)^0,c
  6010   0034EC  6A0D               	clrf	(??___xxtofl+1)^0,c
  6011   0034EE  6A0C               	clrf	??___xxtofl^0,c
  6012   0034F0  500C               	movf	??___xxtofl^0,w,c
  6013   0034F2  1212               	iorwf	___xxtofl@arg^0,f,c
  6014   0034F4  500D               	movf	(??___xxtofl+1)^0,w,c
  6015   0034F6  1213               	iorwf	(___xxtofl@arg+1)^0,f,c
  6016   0034F8  500E               	movf	(??___xxtofl+2)^0,w,c
  6017   0034FA  1214               	iorwf	(___xxtofl@arg+2)^0,f,c
  6018   0034FC  500F               	movf	(??___xxtofl+3)^0,w,c
  6019   0034FE  1215               	iorwf	(___xxtofl@arg+3)^0,f,c
  6020   003500  5010               	movf	___xxtofl@sign^0,w,c
  6021   003502  B4D8               	btfsc	status,2,c
  6022   003504  EF86  F01A         	goto	u3911
  6023   003508  EF88  F01A         	goto	u3910
  6024   00350C                     u3911:
  6025   00350C  EF90  F01A         	goto	l4445
  6026   003510                     u3910:
  6027   003510  BE0B               	btfsc	(___xxtofl@val+3)^0,7,c
  6028   003512  EF8F  F01A         	goto	u3920
  6029   003516  EF8D  F01A         	goto	u3921
  6030   00351A                     u3921:
  6031   00351A  EF90  F01A         	goto	l4445
  6032   00351E                     u3920:
  6033   00351E  8E15               	bsf	(___xxtofl@arg+3)^0,7,c
  6034   003520                     l4445:
  6035   003520  C012  F008         	movff	___xxtofl@arg,?___xxtofl
  6036   003524  C013  F009         	movff	___xxtofl@arg+1,?___xxtofl+1
  6037   003528  C014  F00A         	movff	___xxtofl@arg+2,?___xxtofl+2
  6038   00352C  C015  F00B         	movff	___xxtofl@arg+3,?___xxtofl+3
  6039   003530                     l1437:
  6040   003530  0012               	return		;funcret
  6041   003532                     __end_of___xxtofl:
  6042                           	callstack 0
  6043                           
  6044 ;; *************** function ___wmul *****************
  6045 ;; Defined at:
  6046 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\Umul16.c"
  6047 ;; Parameters:    Size  Location     Type
  6048 ;;  multiplier      2    1[COMRAM] unsigned int 
  6049 ;;  multiplicand    2    3[COMRAM] unsigned int 
  6050 ;; Auto vars:     Size  Location     Type
  6051 ;;  product         2    5[COMRAM] unsigned int 
  6052 ;; Return value:  Size  Location     Type
  6053 ;;                  2    1[COMRAM] unsigned int 
  6054 ;; Registers used:
  6055 ;;		wreg, status,2, status,0, prodl, prodh
  6056 ;; Tracked objects:
  6057 ;;		On entry : 0/0
  6058 ;;		On exit  : 0/0
  6059 ;;		Unchanged: 0/0
  6060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6061 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6062 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6063 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6064 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6065 ;;Total ram usage:        6 bytes
  6066 ;; Hardware stack levels used: 1
  6067 ;; Hardware stack levels required when called: 4
  6068 ;; This function calls:
  6069 ;;		Nothing
  6070 ;; This function is called by:
  6071 ;;		_main
  6072 ;;		_Calculate_digits
  6073 ;; This function uses a non-reentrant model
  6074 ;;
  6075                           
  6076                           	psect	text26
  6077   004486                     __ptext26:
  6078                           	callstack 0
  6079   004486                     ___wmul:
  6080                           	callstack 26
  6081   004486  5002               	movf	___wmul@multiplier^0,w,c
  6082   004488  0204               	mulwf	___wmul@multiplicand^0,c
  6083   00448A  CFF3 F006          	movff	prodl,___wmul@product
  6084   00448E  CFF4 F007          	movff	prodh,___wmul@product+1
  6085   004492  5002               	movf	___wmul@multiplier^0,w,c
  6086   004494  0205               	mulwf	(___wmul@multiplicand+1)^0,c
  6087   004496  50F3               	movf	243,w,c
  6088   004498  2607               	addwf	(___wmul@product+1)^0,f,c
  6089   00449A  5003               	movf	(___wmul@multiplier+1)^0,w,c
  6090   00449C  0204               	mulwf	___wmul@multiplicand^0,c
  6091   00449E  50F3               	movf	243,w,c
  6092   0044A0  2607               	addwf	(___wmul@product+1)^0,f,c
  6093   0044A2  C006  F002         	movff	___wmul@product,?___wmul
  6094   0044A6  C007  F003         	movff	___wmul@product+1,?___wmul+1
  6095   0044AA  0012               	return		;funcret
  6096   0044AC                     __end_of___wmul:
  6097                           	callstack 0
  6098                           
  6099 ;; *************** function ___fltol *****************
  6100 ;; Defined at:
  6101 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\fltol.c"
  6102 ;; Parameters:    Size  Location     Type
  6103 ;;  f1              4   59[COMRAM] unsigned int 
  6104 ;; Auto vars:     Size  Location     Type
  6105 ;;  exp1            1   68[COMRAM] unsigned char 
  6106 ;;  sign1           1   67[COMRAM] unsigned char 
  6107 ;; Return value:  Size  Location     Type
  6108 ;;                  4   59[COMRAM] long 
  6109 ;; Registers used:
  6110 ;;		wreg, status,2, status,0
  6111 ;; Tracked objects:
  6112 ;;		On entry : 0/0
  6113 ;;		On exit  : 0/0
  6114 ;;		Unchanged: 0/0
  6115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6116 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6118 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6119 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6120 ;;Total ram usage:       10 bytes
  6121 ;; Hardware stack levels used: 1
  6122 ;; Hardware stack levels required when called: 4
  6123 ;; This function calls:
  6124 ;;		Nothing
  6125 ;; This function is called by:
  6126 ;;		_Calculate_digits
  6127 ;; This function uses a non-reentrant model
  6128 ;;
  6129                           
  6130                           	psect	text27
  6131   003C4E                     __ptext27:
  6132                           	callstack 0
  6133   003C4E                     ___fltol:
  6134                           	callstack 25
  6135   003C4E  343E               	rlcf	(___fltol@f1+2)^0,w,c
  6136   003C50  343F               	rlcf	(___fltol@f1+3)^0,w,c
  6137   003C52  6E45               	movwf	___fltol@exp1^0,c
  6138   003C54  5045               	movf	___fltol@exp1^0,w,c
  6139   003C56  A4D8               	btfss	status,2,c
  6140   003C58  EF30  F01E         	goto	u3761
  6141   003C5C  EF32  F01E         	goto	u3760
  6142   003C60                     u3761:
  6143   003C60  EF3C  F01E         	goto	l4365
  6144   003C64                     u3760:
  6145   003C64                     l4361:
  6146   003C64  0E00               	movlw	0
  6147   003C66  6E3C               	movwf	?___fltol^0,c
  6148   003C68  0E00               	movlw	0
  6149   003C6A  6E3D               	movwf	(?___fltol+1)^0,c
  6150   003C6C  0E00               	movlw	0
  6151   003C6E  6E3E               	movwf	(?___fltol+2)^0,c
  6152   003C70  0E00               	movlw	0
  6153   003C72  6E3F               	movwf	(?___fltol+3)^0,c
  6154   003C74  EFA9  F01E         	goto	l1076
  6155   003C78                     l4365:
  6156   003C78  C03C  F040         	movff	___fltol@f1,??___fltol
  6157   003C7C  C03D  F041         	movff	___fltol@f1+1,??___fltol+1
  6158   003C80  C03E  F042         	movff	___fltol@f1+2,??___fltol+2
  6159   003C84  C03F  F043         	movff	___fltol@f1+3,??___fltol+3
  6160   003C88  0E20               	movlw	32
  6161   003C8A  EF4C  F01E         	goto	u3770
  6162   003C8E                     u3775:
  6163   003C8E  90D8               	bcf	status,0,c
  6164   003C90  3243               	rrcf	(??___fltol+3)^0,f,c
  6165   003C92  3242               	rrcf	(??___fltol+2)^0,f,c
  6166   003C94  3241               	rrcf	(??___fltol+1)^0,f,c
  6167   003C96  3240               	rrcf	??___fltol^0,f,c
  6168   003C98                     u3770:
  6169   003C98  2EE8               	decfsz	wreg,f,c
  6170   003C9A  EF47  F01E         	goto	u3775
  6171   003C9E  5040               	movf	??___fltol^0,w,c
  6172   003CA0  6E44               	movwf	___fltol@sign1^0,c
  6173   003CA2  8E3E               	bsf	(___fltol@f1+2)^0,7,c
  6174   003CA4  0EFF               	movlw	255
  6175   003CA6  163C               	andwf	___fltol@f1^0,f,c
  6176   003CA8  0EFF               	movlw	255
  6177   003CAA  163D               	andwf	(___fltol@f1+1)^0,f,c
  6178   003CAC  0EFF               	movlw	255
  6179   003CAE  163E               	andwf	(___fltol@f1+2)^0,f,c
  6180   003CB0  0E00               	movlw	0
  6181   003CB2  163F               	andwf	(___fltol@f1+3)^0,f,c
  6182   003CB4  0E96               	movlw	150
  6183   003CB6  5E45               	subwf	___fltol@exp1^0,f,c
  6184   003CB8  BE45               	btfsc	___fltol@exp1^0,7,c
  6185   003CBA  EF63  F01E         	goto	u3780
  6186   003CBE  EF61  F01E         	goto	u3781
  6187   003CC2                     u3781:
  6188   003CC2  EF79  F01E         	goto	l4385
  6189   003CC6                     u3780:
  6190   003CC6  5045               	movf	___fltol@exp1^0,w,c
  6191   003CC8  0A80               	xorlw	128
  6192   003CCA  0F97               	addlw	151
  6193   003CCC  B0D8               	btfsc	status,0,c
  6194   003CCE  EF6B  F01E         	goto	u3791
  6195   003CD2  EF6D  F01E         	goto	u3790
  6196   003CD6                     u3791:
  6197   003CD6  EF6F  F01E         	goto	l4381
  6198   003CDA                     u3790:
  6199   003CDA  EF32  F01E         	goto	l4361
  6200   003CDE                     l4381:
  6201   003CDE  90D8               	bcf	status,0,c
  6202   003CE0  323F               	rrcf	(___fltol@f1+3)^0,f,c
  6203   003CE2  323E               	rrcf	(___fltol@f1+2)^0,f,c
  6204   003CE4  323D               	rrcf	(___fltol@f1+1)^0,f,c
  6205   003CE6  323C               	rrcf	___fltol@f1^0,f,c
  6206   003CE8  3E45               	incfsz	___fltol@exp1^0,f,c
  6207   003CEA  EF6F  F01E         	goto	l4381
  6208   003CEE  EF91  F01E         	goto	l4395
  6209   003CF2                     l4385:
  6210   003CF2  0E1F               	movlw	31
  6211   003CF4  6445               	cpfsgt	___fltol@exp1^0,c
  6212   003CF6  EF7F  F01E         	goto	u3801
  6213   003CFA  EF81  F01E         	goto	u3800
  6214   003CFE                     u3801:
  6215   003CFE  EF89  F01E         	goto	l4393
  6216   003D02                     u3800:
  6217   003D02  EF32  F01E         	goto	l4361
  6218   003D06                     l4391:
  6219   003D06  90D8               	bcf	status,0,c
  6220   003D08  363C               	rlcf	___fltol@f1^0,f,c
  6221   003D0A  363D               	rlcf	(___fltol@f1+1)^0,f,c
  6222   003D0C  363E               	rlcf	(___fltol@f1+2)^0,f,c
  6223   003D0E  363F               	rlcf	(___fltol@f1+3)^0,f,c
  6224   003D10  0645               	decf	___fltol@exp1^0,f,c
  6225   003D12                     l4393:
  6226   003D12  5045               	movf	___fltol@exp1^0,w,c
  6227   003D14  A4D8               	btfss	status,2,c
  6228   003D16  EF8F  F01E         	goto	u3811
  6229   003D1A  EF91  F01E         	goto	u3810
  6230   003D1E                     u3811:
  6231   003D1E  EF83  F01E         	goto	l4391
  6232   003D22                     u3810:
  6233   003D22                     l4395:
  6234   003D22  5044               	movf	___fltol@sign1^0,w,c
  6235   003D24  B4D8               	btfsc	status,2,c
  6236   003D26  EF97  F01E         	goto	u3821
  6237   003D2A  EF99  F01E         	goto	u3820
  6238   003D2E                     u3821:
  6239   003D2E  EFA1  F01E         	goto	l4399
  6240   003D32                     u3820:
  6241   003D32  1E3F               	comf	(___fltol@f1+3)^0,f,c
  6242   003D34  1E3E               	comf	(___fltol@f1+2)^0,f,c
  6243   003D36  1E3D               	comf	(___fltol@f1+1)^0,f,c
  6244   003D38  6C3C               	negf	___fltol@f1^0,c
  6245   003D3A  0E00               	movlw	0
  6246   003D3C  223D               	addwfc	(___fltol@f1+1)^0,f,c
  6247   003D3E  223E               	addwfc	(___fltol@f1+2)^0,f,c
  6248   003D40  223F               	addwfc	(___fltol@f1+3)^0,f,c
  6249   003D42                     l4399:
  6250   003D42  C03C  F03C         	movff	___fltol@f1,?___fltol
  6251   003D46  C03D  F03D         	movff	___fltol@f1+1,?___fltol+1
  6252   003D4A  C03E  F03E         	movff	___fltol@f1+2,?___fltol+2
  6253   003D4E  C03F  F03F         	movff	___fltol@f1+3,?___fltol+3
  6254   003D52                     l1076:
  6255   003D52  0012               	return		;funcret
  6256   003D54                     __end_of___fltol:
  6257                           	callstack 0
  6258                           
  6259 ;; *************** function ___flsub *****************
  6260 ;; Defined at:
  6261 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  6262 ;; Parameters:    Size  Location     Type
  6263 ;;  b               4   26[COMRAM] long 
  6264 ;;  a               4   30[COMRAM] long 
  6265 ;; Auto vars:     Size  Location     Type
  6266 ;;		None
  6267 ;; Return value:  Size  Location     Type
  6268 ;;                  4   26[COMRAM] long 
  6269 ;; Registers used:
  6270 ;;		wreg, status,2, status,0, cstack
  6271 ;; Tracked objects:
  6272 ;;		On entry : 0/0
  6273 ;;		On exit  : 0/0
  6274 ;;		Unchanged: 0/0
  6275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6276 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6277 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6278 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6279 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6280 ;;Total ram usage:        8 bytes
  6281 ;; Hardware stack levels used: 1
  6282 ;; Hardware stack levels required when called: 5
  6283 ;; This function calls:
  6284 ;;		___fladd
  6285 ;; This function is called by:
  6286 ;;		_main
  6287 ;;		_Calculate_digits
  6288 ;; This function uses a non-reentrant model
  6289 ;;
  6290                           
  6291                           	psect	text28
  6292   004414                     __ptext28:
  6293                           	callstack 0
  6294   004414                     ___flsub:
  6295                           	callstack 25
  6296   004414  0E00               	movlw	0
  6297   004416  1A1F               	xorwf	___flsub@a^0,f,c
  6298   004418  0E00               	movlw	0
  6299   00441A  1A20               	xorwf	(___flsub@a+1)^0,f,c
  6300   00441C  0E00               	movlw	0
  6301   00441E  1A21               	xorwf	(___flsub@a+2)^0,f,c
  6302   004420  0E80               	movlw	128
  6303   004422  1A22               	xorwf	(___flsub@a+3)^0,f,c
  6304   004424  C01B  F002         	movff	___flsub@b,___fladd@b
  6305   004428  C01C  F003         	movff	___flsub@b+1,___fladd@b+1
  6306   00442C  C01D  F004         	movff	___flsub@b+2,___fladd@b+2
  6307   004430  C01E  F005         	movff	___flsub@b+3,___fladd@b+3
  6308   004434  C01F  F006         	movff	___flsub@a,___fladd@a
  6309   004438  C020  F007         	movff	___flsub@a+1,___fladd@a+1
  6310   00443C  C021  F008         	movff	___flsub@a+2,___fladd@a+2
  6311   004440  C022  F009         	movff	___flsub@a+3,___fladd@a+3
  6312   004444  EC52  F012         	call	___fladd	;wreg free
  6313   004448  C002  F01B         	movff	?___fladd,?___flsub
  6314   00444C  C003  F01C         	movff	?___fladd+1,?___flsub+1
  6315   004450  C004  F01D         	movff	?___fladd+2,?___flsub+2
  6316   004454  C005  F01E         	movff	?___fladd+3,?___flsub+3
  6317   004458  0012               	return		;funcret
  6318   00445A                     __end_of___flsub:
  6319                           	callstack 0
  6320                           
  6321 ;; *************** function ___fladd *****************
  6322 ;; Defined at:
  6323 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcadd.c"
  6324 ;; Parameters:    Size  Location     Type
  6325 ;;  b               4    1[COMRAM] long 
  6326 ;;  a               4    5[COMRAM] long 
  6327 ;; Auto vars:     Size  Location     Type
  6328 ;;  grs             1   16[COMRAM] unsigned char 
  6329 ;;  bexp            1   15[COMRAM] unsigned char 
  6330 ;;  aexp            1   14[COMRAM] unsigned char 
  6331 ;;  signs           1   13[COMRAM] unsigned char 
  6332 ;; Return value:  Size  Location     Type
  6333 ;;                  4    1[COMRAM] unsigned char 
  6334 ;; Registers used:
  6335 ;;		wreg, status,2, status,0
  6336 ;; Tracked objects:
  6337 ;;		On entry : 0/0
  6338 ;;		On exit  : 0/0
  6339 ;;		Unchanged: 0/0
  6340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6341 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6342 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6343 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6344 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6345 ;;Total ram usage:       16 bytes
  6346 ;; Hardware stack levels used: 1
  6347 ;; Hardware stack levels required when called: 4
  6348 ;; This function calls:
  6349 ;;		Nothing
  6350 ;; This function is called by:
  6351 ;;		___flsub
  6352 ;; This function uses a non-reentrant model
  6353 ;;
  6354                           
  6355                           	psect	text29
  6356   0024A4                     __ptext29:
  6357                           	callstack 0
  6358   0024A4                     ___fladd:
  6359                           	callstack 25
  6360   0024A4  5005               	movf	(___fladd@b+3)^0,w,c
  6361   0024A6  0B80               	andlw	128
  6362   0024A8  6E0E               	movwf	___fladd@signs^0,c
  6363   0024AA  5005               	movf	(___fladd@b+3)^0,w,c
  6364   0024AC  2405               	addwf	(___fladd@b+3)^0,w,c
  6365   0024AE  6E10               	movwf	___fladd@bexp^0,c
  6366   0024B0  AE04               	btfss	(___fladd@b+2)^0,7,c
  6367   0024B2  EF5D  F012         	goto	u2871
  6368   0024B6  EF5F  F012         	goto	u2870
  6369   0024BA                     u2871:
  6370   0024BA  EF60  F012         	goto	l3761
  6371   0024BE                     u2870:
  6372   0024BE  8010               	bsf	___fladd@bexp^0,0,c
  6373   0024C0                     l3761:
  6374   0024C0  5010               	movf	___fladd@bexp^0,w,c
  6375   0024C2  B4D8               	btfsc	status,2,c
  6376   0024C4  EF66  F012         	goto	u2881
  6377   0024C8  EF68  F012         	goto	u2880
  6378   0024CC                     u2881:
  6379   0024CC  EF7D  F012         	goto	l3771
  6380   0024D0                     u2880:
  6381   0024D0  2810               	incf	___fladd@bexp^0,w,c
  6382   0024D2  A4D8               	btfss	status,2,c
  6383   0024D4  EF6E  F012         	goto	u2891
  6384   0024D8  EF70  F012         	goto	u2890
  6385   0024DC                     u2891:
  6386   0024DC  EF78  F012         	goto	l3767
  6387   0024E0                     u2890:
  6388   0024E0  0E00               	movlw	0
  6389   0024E2  6E02               	movwf	___fladd@b^0,c
  6390   0024E4  0E00               	movlw	0
  6391   0024E6  6E03               	movwf	(___fladd@b+1)^0,c
  6392   0024E8  0E00               	movlw	0
  6393   0024EA  6E04               	movwf	(___fladd@b+2)^0,c
  6394   0024EC  0E00               	movlw	0
  6395   0024EE  6E05               	movwf	(___fladd@b+3)^0,c
  6396   0024F0                     l3767:
  6397   0024F0  8E04               	bsf	(___fladd@b+2)^0,7,c
  6398   0024F2  0E00               	movlw	0
  6399   0024F4  6E05               	movwf	(___fladd@b+3)^0,c
  6400   0024F6  EF85  F012         	goto	l3773
  6401   0024FA                     l3771:
  6402   0024FA  0E00               	movlw	0
  6403   0024FC  6E02               	movwf	___fladd@b^0,c
  6404   0024FE  0E00               	movlw	0
  6405   002500  6E03               	movwf	(___fladd@b+1)^0,c
  6406   002502  0E00               	movlw	0
  6407   002504  6E04               	movwf	(___fladd@b+2)^0,c
  6408   002506  0E00               	movlw	0
  6409   002508  6E05               	movwf	(___fladd@b+3)^0,c
  6410   00250A                     l3773:
  6411   00250A  5009               	movf	(___fladd@a+3)^0,w,c
  6412   00250C  0B80               	andlw	128
  6413   00250E  6E0F               	movwf	___fladd@aexp^0,c
  6414   002510  500E               	movf	___fladd@signs^0,w,c
  6415   002512  180F               	xorwf	___fladd@aexp^0,w,c
  6416   002514  B4D8               	btfsc	status,2,c
  6417   002516  EF8F  F012         	goto	u2901
  6418   00251A  EF91  F012         	goto	u2900
  6419   00251E                     u2901:
  6420   00251E  EF92  F012         	goto	l3779
  6421   002522                     u2900:
  6422   002522  8C0E               	bsf	___fladd@signs^0,6,c
  6423   002524                     l3779:
  6424   002524  5009               	movf	(___fladd@a+3)^0,w,c
  6425   002526  2409               	addwf	(___fladd@a+3)^0,w,c
  6426   002528  6E0F               	movwf	___fladd@aexp^0,c
  6427   00252A  AE08               	btfss	(___fladd@a+2)^0,7,c
  6428   00252C  EF9A  F012         	goto	u2911
  6429   002530  EF9C  F012         	goto	u2910
  6430   002534                     u2911:
  6431   002534  EF9D  F012         	goto	l3785
  6432   002538                     u2910:
  6433   002538  800F               	bsf	___fladd@aexp^0,0,c
  6434   00253A                     l3785:
  6435   00253A  500F               	movf	___fladd@aexp^0,w,c
  6436   00253C  B4D8               	btfsc	status,2,c
  6437   00253E  EFA3  F012         	goto	u2921
  6438   002542  EFA5  F012         	goto	u2920
  6439   002546                     u2921:
  6440   002546  EFBA  F012         	goto	l3795
  6441   00254A                     u2920:
  6442   00254A  280F               	incf	___fladd@aexp^0,w,c
  6443   00254C  A4D8               	btfss	status,2,c
  6444   00254E  EFAB  F012         	goto	u2931
  6445   002552  EFAD  F012         	goto	u2930
  6446   002556                     u2931:
  6447   002556  EFB5  F012         	goto	l3791
  6448   00255A                     u2930:
  6449   00255A  0E00               	movlw	0
  6450   00255C  6E06               	movwf	___fladd@a^0,c
  6451   00255E  0E00               	movlw	0
  6452   002560  6E07               	movwf	(___fladd@a+1)^0,c
  6453   002562  0E00               	movlw	0
  6454   002564  6E08               	movwf	(___fladd@a+2)^0,c
  6455   002566  0E00               	movlw	0
  6456   002568  6E09               	movwf	(___fladd@a+3)^0,c
  6457   00256A                     l3791:
  6458   00256A  8E08               	bsf	(___fladd@a+2)^0,7,c
  6459   00256C  0E00               	movlw	0
  6460   00256E  6E09               	movwf	(___fladd@a+3)^0,c
  6461   002570  EFC2  F012         	goto	l3797
  6462   002574                     l3795:
  6463   002574  0E00               	movlw	0
  6464   002576  6E06               	movwf	___fladd@a^0,c
  6465   002578  0E00               	movlw	0
  6466   00257A  6E07               	movwf	(___fladd@a+1)^0,c
  6467   00257C  0E00               	movlw	0
  6468   00257E  6E08               	movwf	(___fladd@a+2)^0,c
  6469   002580  0E00               	movlw	0
  6470   002582  6E09               	movwf	(___fladd@a+3)^0,c
  6471   002584                     l3797:
  6472   002584  5010               	movf	___fladd@bexp^0,w,c
  6473   002586  5C0F               	subwf	___fladd@aexp^0,w,c
  6474   002588  B0D8               	btfsc	status,0,c
  6475   00258A  EFC9  F012         	goto	u2941
  6476   00258E  EFCB  F012         	goto	u2940
  6477   002592                     u2941:
  6478   002592  EFF2  F012         	goto	l3833
  6479   002596                     u2940:
  6480   002596  AC0E               	btfss	___fladd@signs^0,6,c
  6481   002598  EFD0  F012         	goto	u2951
  6482   00259C  EFD2  F012         	goto	u2950
  6483   0025A0                     u2951:
  6484   0025A0  EFD4  F012         	goto	l3803
  6485   0025A4                     u2950:
  6486   0025A4  0E80               	movlw	128
  6487   0025A6  1A0E               	xorwf	___fladd@signs^0,f,c
  6488   0025A8                     l3803:
  6489   0025A8  C010  F011         	movff	___fladd@bexp,___fladd@grs
  6490   0025AC  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
  6491   0025B0  C011  F00F         	movff	___fladd@grs,___fladd@aexp
  6492   0025B4  C002  F011         	movff	___fladd@b,___fladd@grs
  6493   0025B8  C006  F002         	movff	___fladd@a,___fladd@b
  6494   0025BC  C011  F006         	movff	___fladd@grs,___fladd@a
  6495   0025C0  C003  F011         	movff	___fladd@b+1,___fladd@grs
  6496   0025C4  C007  F003         	movff	___fladd@a+1,___fladd@b+1
  6497   0025C8  C011  F007         	movff	___fladd@grs,___fladd@a+1
  6498   0025CC  C004  F011         	movff	___fladd@b+2,___fladd@grs
  6499   0025D0  C008  F004         	movff	___fladd@a+2,___fladd@b+2
  6500   0025D4  C011  F008         	movff	___fladd@grs,___fladd@a+2
  6501   0025D8  C005  F011         	movff	___fladd@b+3,___fladd@grs
  6502   0025DC  C009  F005         	movff	___fladd@a+3,___fladd@b+3
  6503   0025E0  C011  F009         	movff	___fladd@grs,___fladd@a+3
  6504   0025E4                     l3833:
  6505   0025E4  0E00               	movlw	0
  6506   0025E6  6E11               	movwf	___fladd@grs^0,c
  6507   0025E8  5010               	movf	___fladd@bexp^0,w,c
  6508   0025EA  C00F  F00A         	movff	___fladd@aexp,??___fladd
  6509   0025EE  6A0B               	clrf	(??___fladd+1)^0,c
  6510   0025F0  5E0A               	subwf	??___fladd^0,f,c
  6511   0025F2  0E00               	movlw	0
  6512   0025F4  5A0B               	subwfb	(??___fladd+1)^0,f,c
  6513   0025F6  BE0B               	btfsc	(??___fladd+1)^0,7,c
  6514   0025F8  EF07  F013         	goto	u2961
  6515   0025FC  500B               	movf	(??___fladd+1)^0,w,c
  6516   0025FE  E109               	bnz	u2960
  6517   002600  0E1A               	movlw	26
  6518   002602  5C0A               	subwf	??___fladd^0,w,c
  6519   002604  A0D8               	btfss	status,0,c
  6520   002606  EF07  F013         	goto	u2961
  6521   00260A  EF09  F013         	goto	u2960
  6522   00260E                     u2961:
  6523   00260E  EF40  F013         	goto	l1308
  6524   002612                     u2960:
  6525   002612  5002               	movf	___fladd@b^0,w,c
  6526   002614  1003               	iorwf	(___fladd@b+1)^0,w,c
  6527   002616  1004               	iorwf	(___fladd@b+2)^0,w,c
  6528   002618  1005               	iorwf	(___fladd@b+3)^0,w,c
  6529   00261A  A4D8               	btfss	status,2,c
  6530   00261C  EF12  F013         	goto	u2971
  6531   002620  EF15  F013         	goto	u2970
  6532   002624                     u2971:
  6533   002624  0E01               	movlw	1
  6534   002626  EF16  F013         	goto	u2980
  6535   00262A                     u2970:
  6536   00262A  0E00               	movlw	0
  6537   00262C                     u2980:
  6538   00262C  6E11               	movwf	___fladd@grs^0,c
  6539   00262E  0E00               	movlw	0
  6540   002630  6E02               	movwf	___fladd@b^0,c
  6541   002632  0E00               	movlw	0
  6542   002634  6E03               	movwf	(___fladd@b+1)^0,c
  6543   002636  0E00               	movlw	0
  6544   002638  6E04               	movwf	(___fladd@b+2)^0,c
  6545   00263A  0E00               	movlw	0
  6546   00263C  6E05               	movwf	(___fladd@b+3)^0,c
  6547   00263E  C00F  F010         	movff	___fladd@aexp,___fladd@bexp
  6548   002642  EF49  F013         	goto	l1307
  6549   002646                     l1309:
  6550   002646  A011               	btfss	___fladd@grs^0,0,c
  6551   002648  EF28  F013         	goto	u2991
  6552   00264C  EF2A  F013         	goto	u2990
  6553   002650                     u2991:
  6554   002650  EF30  F013         	goto	l3845
  6555   002654                     u2990:
  6556   002654  90D8               	bcf	status,0,c
  6557   002656  3011               	rrcf	___fladd@grs^0,w,c
  6558   002658  0901               	iorlw	1
  6559   00265A  6E11               	movwf	___fladd@grs^0,c
  6560   00265C  EF32  F013         	goto	l3847
  6561   002660                     l3845:
  6562   002660  90D8               	bcf	status,0,c
  6563   002662  3211               	rrcf	___fladd@grs^0,f,c
  6564   002664                     l3847:
  6565   002664  A002               	btfss	___fladd@b^0,0,c
  6566   002666  EF37  F013         	goto	u3001
  6567   00266A  EF39  F013         	goto	u3000
  6568   00266E                     u3001:
  6569   00266E  EF3A  F013         	goto	l3851
  6570   002672                     u3000:
  6571   002672  8E11               	bsf	___fladd@grs^0,7,c
  6572   002674                     l3851:
  6573   002674  3405               	rlcf	(___fladd@b+3)^0,w,c
  6574   002676  3205               	rrcf	(___fladd@b+3)^0,f,c
  6575   002678  3204               	rrcf	(___fladd@b+2)^0,f,c
  6576   00267A  3203               	rrcf	(___fladd@b+1)^0,f,c
  6577   00267C  3202               	rrcf	___fladd@b^0,f,c
  6578   00267E  2A10               	incf	___fladd@bexp^0,f,c
  6579   002680                     l1308:
  6580   002680  500F               	movf	___fladd@aexp^0,w,c
  6581   002682  5C10               	subwf	___fladd@bexp^0,w,c
  6582   002684  A0D8               	btfss	status,0,c
  6583   002686  EF47  F013         	goto	u3011
  6584   00268A  EF49  F013         	goto	u3010
  6585   00268E                     u3011:
  6586   00268E  EF23  F013         	goto	l1309
  6587   002692                     u3010:
  6588   002692                     l1307:
  6589   002692  BC0E               	btfsc	___fladd@signs^0,6,c
  6590   002694  EF4E  F013         	goto	u3021
  6591   002698  EF50  F013         	goto	u3020
  6592   00269C                     u3021:
  6593   00269C  EF90  F013         	goto	l3879
  6594   0026A0                     u3020:
  6595   0026A0  5010               	movf	___fladd@bexp^0,w,c
  6596   0026A2  A4D8               	btfss	status,2,c
  6597   0026A4  EF56  F013         	goto	u3031
  6598   0026A8  EF58  F013         	goto	u3030
  6599   0026AC                     u3031:
  6600   0026AC  EF62  F013         	goto	l3861
  6601   0026B0                     u3030:
  6602   0026B0  0E00               	movlw	0
  6603   0026B2  6E02               	movwf	?___fladd^0,c
  6604   0026B4  0E00               	movlw	0
  6605   0026B6  6E03               	movwf	(?___fladd+1)^0,c
  6606   0026B8  0E00               	movlw	0
  6607   0026BA  6E04               	movwf	(?___fladd+2)^0,c
  6608   0026BC  0E00               	movlw	0
  6609   0026BE  6E05               	movwf	(?___fladd+3)^0,c
  6610   0026C0  EFB1  F014         	goto	l1316
  6611   0026C4                     l3861:
  6612   0026C4  5006               	movf	___fladd@a^0,w,c
  6613   0026C6  2602               	addwf	___fladd@b^0,f,c
  6614   0026C8  5007               	movf	(___fladd@a+1)^0,w,c
  6615   0026CA  2203               	addwfc	(___fladd@b+1)^0,f,c
  6616   0026CC  5008               	movf	(___fladd@a+2)^0,w,c
  6617   0026CE  2204               	addwfc	(___fladd@b+2)^0,f,c
  6618   0026D0  5009               	movf	(___fladd@a+3)^0,w,c
  6619   0026D2  2205               	addwfc	(___fladd@b+3)^0,f,c
  6620   0026D4  A005               	btfss	(___fladd@b+3)^0,0,c
  6621   0026D6  EF6F  F013         	goto	u3041
  6622   0026DA  EF71  F013         	goto	u3040
  6623   0026DE                     u3041:
  6624   0026DE  EF1D  F014         	goto	l3915
  6625   0026E2                     u3040:
  6626   0026E2  A011               	btfss	___fladd@grs^0,0,c
  6627   0026E4  EF76  F013         	goto	u3051
  6628   0026E8  EF78  F013         	goto	u3050
  6629   0026EC                     u3051:
  6630   0026EC  EF7E  F013         	goto	l3869
  6631   0026F0                     u3050:
  6632   0026F0  90D8               	bcf	status,0,c
  6633   0026F2  3011               	rrcf	___fladd@grs^0,w,c
  6634   0026F4  0901               	iorlw	1
  6635   0026F6  6E11               	movwf	___fladd@grs^0,c
  6636   0026F8  EF80  F013         	goto	l3871
  6637   0026FC                     l3869:
  6638   0026FC  90D8               	bcf	status,0,c
  6639   0026FE  3211               	rrcf	___fladd@grs^0,f,c
  6640   002700                     l3871:
  6641   002700  A002               	btfss	___fladd@b^0,0,c
  6642   002702  EF85  F013         	goto	u3061
  6643   002706  EF87  F013         	goto	u3060
  6644   00270A                     u3061:
  6645   00270A  EF88  F013         	goto	l3875
  6646   00270E                     u3060:
  6647   00270E  8E11               	bsf	___fladd@grs^0,7,c
  6648   002710                     l3875:
  6649   002710  3405               	rlcf	(___fladd@b+3)^0,w,c
  6650   002712  3205               	rrcf	(___fladd@b+3)^0,f,c
  6651   002714  3204               	rrcf	(___fladd@b+2)^0,f,c
  6652   002716  3203               	rrcf	(___fladd@b+1)^0,f,c
  6653   002718  3202               	rrcf	___fladd@b^0,f,c
  6654   00271A  2A10               	incf	___fladd@bexp^0,f,c
  6655   00271C  EF1D  F014         	goto	l3915
  6656   002720                     l3879:
  6657   002720  5006               	movf	___fladd@a^0,w,c
  6658   002722  5C02               	subwf	___fladd@b^0,w,c
  6659   002724  5007               	movf	(___fladd@a+1)^0,w,c
  6660   002726  5803               	subwfb	(___fladd@b+1)^0,w,c
  6661   002728  5008               	movf	(___fladd@a+2)^0,w,c
  6662   00272A  5804               	subwfb	(___fladd@b+2)^0,w,c
  6663   00272C  5005               	movf	(___fladd@b+3)^0,w,c
  6664   00272E  0A80               	xorlw	128
  6665   002730  6E0A               	movwf	??___fladd^0,c
  6666   002732  5009               	movf	(___fladd@a+3)^0,w,c
  6667   002734  0A80               	xorlw	128
  6668   002736  580A               	subwfb	??___fladd^0,w,c
  6669   002738  B0D8               	btfsc	status,0,c
  6670   00273A  EFA1  F013         	goto	u3071
  6671   00273E  EFA3  F013         	goto	u3070
  6672   002742                     u3071:
  6673   002742  EFCE  F013         	goto	l3889
  6674   002746                     u3070:
  6675   002746  5002               	movf	___fladd@b^0,w,c
  6676   002748  5C06               	subwf	___fladd@a^0,w,c
  6677   00274A  6E0A               	movwf	??___fladd^0,c
  6678   00274C  5003               	movf	(___fladd@b+1)^0,w,c
  6679   00274E  5807               	subwfb	(___fladd@a+1)^0,w,c
  6680   002750  6E0B               	movwf	(??___fladd+1)^0,c
  6681   002752  5004               	movf	(___fladd@b+2)^0,w,c
  6682   002754  5808               	subwfb	(___fladd@a+2)^0,w,c
  6683   002756  6E0C               	movwf	(??___fladd+2)^0,c
  6684   002758  5005               	movf	(___fladd@b+3)^0,w,c
  6685   00275A  5809               	subwfb	(___fladd@a+3)^0,w,c
  6686   00275C  6E0D               	movwf	(??___fladd+3)^0,c
  6687   00275E  0EFF               	movlw	255
  6688   002760  240A               	addwf	??___fladd^0,w,c
  6689   002762  6E02               	movwf	___fladd@b^0,c
  6690   002764  0EFF               	movlw	255
  6691   002766  200B               	addwfc	(??___fladd+1)^0,w,c
  6692   002768  6E03               	movwf	(___fladd@b+1)^0,c
  6693   00276A  0EFF               	movlw	255
  6694   00276C  200C               	addwfc	(??___fladd+2)^0,w,c
  6695   00276E  6E04               	movwf	(___fladd@b+2)^0,c
  6696   002770  0EFF               	movlw	255
  6697   002772  200D               	addwfc	(??___fladd+3)^0,w,c
  6698   002774  6E05               	movwf	(___fladd@b+3)^0,c
  6699   002776  0E80               	movlw	128
  6700   002778  1A0E               	xorwf	___fladd@signs^0,f,c
  6701   00277A  6C11               	negf	___fladd@grs^0,c
  6702   00277C  5011               	movf	___fladd@grs^0,w,c
  6703   00277E  A4D8               	btfss	status,2,c
  6704   002780  EFC4  F013         	goto	u3081
  6705   002784  EFC6  F013         	goto	u3080
  6706   002788                     u3081:
  6707   002788  EFD6  F013         	goto	l1324
  6708   00278C                     u3080:
  6709   00278C  0E01               	movlw	1
  6710   00278E  2602               	addwf	___fladd@b^0,f,c
  6711   002790  0E00               	movlw	0
  6712   002792  2203               	addwfc	(___fladd@b+1)^0,f,c
  6713   002794  2204               	addwfc	(___fladd@b+2)^0,f,c
  6714   002796  2205               	addwfc	(___fladd@b+3)^0,f,c
  6715   002798  EFD6  F013         	goto	l1324
  6716   00279C                     l3889:
  6717   00279C  5006               	movf	___fladd@a^0,w,c
  6718   00279E  5E02               	subwf	___fladd@b^0,f,c
  6719   0027A0  5007               	movf	(___fladd@a+1)^0,w,c
  6720   0027A2  5A03               	subwfb	(___fladd@b+1)^0,f,c
  6721   0027A4  5008               	movf	(___fladd@a+2)^0,w,c
  6722   0027A6  5A04               	subwfb	(___fladd@b+2)^0,f,c
  6723   0027A8  5009               	movf	(___fladd@a+3)^0,w,c
  6724   0027AA  5A05               	subwfb	(___fladd@b+3)^0,f,c
  6725   0027AC                     l1324:
  6726   0027AC  5002               	movf	___fladd@b^0,w,c
  6727   0027AE  1003               	iorwf	(___fladd@b+1)^0,w,c
  6728   0027B0  1004               	iorwf	(___fladd@b+2)^0,w,c
  6729   0027B2  1005               	iorwf	(___fladd@b+3)^0,w,c
  6730   0027B4  A4D8               	btfss	status,2,c
  6731   0027B6  EFDF  F013         	goto	u3091
  6732   0027BA  EFE1  F013         	goto	u3090
  6733   0027BE                     u3091:
  6734   0027BE  EF16  F014         	goto	l3913
  6735   0027C2                     u3090:
  6736   0027C2  5011               	movf	___fladd@grs^0,w,c
  6737   0027C4  A4D8               	btfss	status,2,c
  6738   0027C6  EFE7  F013         	goto	u3101
  6739   0027CA  EFE9  F013         	goto	u3100
  6740   0027CE                     u3101:
  6741   0027CE  EF16  F014         	goto	l3913
  6742   0027D2                     u3100:
  6743   0027D2  0E00               	movlw	0
  6744   0027D4  6E02               	movwf	?___fladd^0,c
  6745   0027D6  0E00               	movlw	0
  6746   0027D8  6E03               	movwf	(?___fladd+1)^0,c
  6747   0027DA  0E00               	movlw	0
  6748   0027DC  6E04               	movwf	(?___fladd+2)^0,c
  6749   0027DE  0E00               	movlw	0
  6750   0027E0  6E05               	movwf	(?___fladd+3)^0,c
  6751   0027E2  EFB1  F014         	goto	l1316
  6752   0027E6                     l3897:
  6753   0027E6  90D8               	bcf	status,0,c
  6754   0027E8  3602               	rlcf	___fladd@b^0,f,c
  6755   0027EA  3603               	rlcf	(___fladd@b+1)^0,f,c
  6756   0027EC  3604               	rlcf	(___fladd@b+2)^0,f,c
  6757   0027EE  3605               	rlcf	(___fladd@b+3)^0,f,c
  6758   0027F0  AE11               	btfss	___fladd@grs^0,7,c
  6759   0027F2  EFFD  F013         	goto	u3111
  6760   0027F6  EFFF  F013         	goto	u3110
  6761   0027FA                     u3111:
  6762   0027FA  EF00  F014         	goto	l3903
  6763   0027FE                     u3110:
  6764   0027FE  8002               	bsf	___fladd@b^0,0,c
  6765   002800                     l3903:
  6766   002800  A011               	btfss	___fladd@grs^0,0,c
  6767   002802  EF05  F014         	goto	u3121
  6768   002806  EF07  F014         	goto	u3120
  6769   00280A                     u3121:
  6770   00280A  EF0B  F014         	goto	l3907
  6771   00280E                     u3120:
  6772   00280E  80D8               	bsf	status,0,c
  6773   002810  3611               	rlcf	___fladd@grs^0,f,c
  6774   002812  EF0D  F014         	goto	l3909
  6775   002816                     l3907:
  6776   002816  90D8               	bcf	status,0,c
  6777   002818  3611               	rlcf	___fladd@grs^0,f,c
  6778   00281A                     l3909:
  6779   00281A  5010               	movf	___fladd@bexp^0,w,c
  6780   00281C  B4D8               	btfsc	status,2,c
  6781   00281E  EF13  F014         	goto	u3131
  6782   002822  EF15  F014         	goto	u3130
  6783   002826                     u3131:
  6784   002826  EF16  F014         	goto	l3913
  6785   00282A                     u3130:
  6786   00282A  0610               	decf	___fladd@bexp^0,f,c
  6787   00282C                     l3913:
  6788   00282C  AE04               	btfss	(___fladd@b+2)^0,7,c
  6789   00282E  EF1B  F014         	goto	u3141
  6790   002832  EF1D  F014         	goto	u3140
  6791   002836                     u3141:
  6792   002836  EFF3  F013         	goto	l3897
  6793   00283A                     u3140:
  6794   00283A                     l3915:
  6795   00283A  0E00               	movlw	0
  6796   00283C  6E0F               	movwf	___fladd@aexp^0,c
  6797   00283E  AE11               	btfss	___fladd@grs^0,7,c
  6798   002840  EF24  F014         	goto	u3151
  6799   002844  EF26  F014         	goto	u3150
  6800   002848                     u3151:
  6801   002848  EF3E  F014         	goto	l1333
  6802   00284C                     u3150:
  6803   00284C  C011  F00A         	movff	___fladd@grs,??___fladd
  6804   002850  0E7F               	movlw	127
  6805   002852  160A               	andwf	??___fladd^0,f,c
  6806   002854  B4D8               	btfsc	status,2,c
  6807   002856  EF2F  F014         	goto	u3161
  6808   00285A  EF31  F014         	goto	u3160
  6809   00285E                     u3161:
  6810   00285E  EF35  F014         	goto	l1334
  6811   002862                     u3160:
  6812   002862                     l3921:
  6813   002862  0E01               	movlw	1
  6814   002864  6E0F               	movwf	___fladd@aexp^0,c
  6815   002866  EF3E  F014         	goto	l1333
  6816   00286A                     l1334:
  6817   00286A  A002               	btfss	___fladd@b^0,0,c
  6818   00286C  EF3A  F014         	goto	u3171
  6819   002870  EF3C  F014         	goto	u3170
  6820   002874                     u3171:
  6821   002874  EF3E  F014         	goto	l1333
  6822   002878                     u3170:
  6823   002878  EF31  F014         	goto	l3921
  6824   00287C                     l1333:
  6825   00287C  500F               	movf	___fladd@aexp^0,w,c
  6826   00287E  B4D8               	btfsc	status,2,c
  6827   002880  EF44  F014         	goto	u3181
  6828   002884  EF46  F014         	goto	u3180
  6829   002888                     u3181:
  6830   002888  EF71  F014         	goto	l3933
  6831   00288C                     u3180:
  6832   00288C  0E01               	movlw	1
  6833   00288E  2602               	addwf	___fladd@b^0,f,c
  6834   002890  0E00               	movlw	0
  6835   002892  2203               	addwfc	(___fladd@b+1)^0,f,c
  6836   002894  2204               	addwfc	(___fladd@b+2)^0,f,c
  6837   002896  2205               	addwfc	(___fladd@b+3)^0,f,c
  6838   002898  A005               	btfss	(___fladd@b+3)^0,0,c
  6839   00289A  EF51  F014         	goto	u3191
  6840   00289E  EF53  F014         	goto	u3190
  6841   0028A2                     u3191:
  6842   0028A2  EF71  F014         	goto	l3933
  6843   0028A6                     u3190:
  6844   0028A6  C002  F00A         	movff	___fladd@b,??___fladd
  6845   0028AA  C003  F00B         	movff	___fladd@b+1,??___fladd+1
  6846   0028AE  C004  F00C         	movff	___fladd@b+2,??___fladd+2
  6847   0028B2  C005  F00D         	movff	___fladd@b+3,??___fladd+3
  6848   0028B6  340D               	rlcf	(??___fladd+3)^0,w,c
  6849   0028B8  320D               	rrcf	(??___fladd+3)^0,f,c
  6850   0028BA  320C               	rrcf	(??___fladd+2)^0,f,c
  6851   0028BC  320B               	rrcf	(??___fladd+1)^0,f,c
  6852   0028BE  320A               	rrcf	??___fladd^0,f,c
  6853   0028C0  C00A  F002         	movff	??___fladd,___fladd@b
  6854   0028C4  C00B  F003         	movff	??___fladd+1,___fladd@b+1
  6855   0028C8  C00C  F004         	movff	??___fladd+2,___fladd@b+2
  6856   0028CC  C00D  F005         	movff	??___fladd+3,___fladd@b+3
  6857   0028D0  2810               	incf	___fladd@bexp^0,w,c
  6858   0028D2  B4D8               	btfsc	status,2,c
  6859   0028D4  EF6E  F014         	goto	u3201
  6860   0028D8  EF70  F014         	goto	u3200
  6861   0028DC                     u3201:
  6862   0028DC  EF71  F014         	goto	l3933
  6863   0028E0                     u3200:
  6864   0028E0  2A10               	incf	___fladd@bexp^0,f,c
  6865   0028E2                     l3933:
  6866   0028E2  2810               	incf	___fladd@bexp^0,w,c
  6867   0028E4  B4D8               	btfsc	status,2,c
  6868   0028E6  EF77  F014         	goto	u3211
  6869   0028EA  EF79  F014         	goto	u3210
  6870   0028EE                     u3211:
  6871   0028EE  EF81  F014         	goto	l3937
  6872   0028F2                     u3210:
  6873   0028F2  5010               	movf	___fladd@bexp^0,w,c
  6874   0028F4  A4D8               	btfss	status,2,c
  6875   0028F6  EF7F  F014         	goto	u3221
  6876   0028FA  EF81  F014         	goto	u3220
  6877   0028FE                     u3221:
  6878   0028FE  EF93  F014         	goto	l3941
  6879   002902                     u3220:
  6880   002902                     l3937:
  6881   002902  0E00               	movlw	0
  6882   002904  6E02               	movwf	___fladd@b^0,c
  6883   002906  0E00               	movlw	0
  6884   002908  6E03               	movwf	(___fladd@b+1)^0,c
  6885   00290A  0E00               	movlw	0
  6886   00290C  6E04               	movwf	(___fladd@b+2)^0,c
  6887   00290E  0E00               	movlw	0
  6888   002910  6E05               	movwf	(___fladd@b+3)^0,c
  6889   002912  5010               	movf	___fladd@bexp^0,w,c
  6890   002914  A4D8               	btfss	status,2,c
  6891   002916  EF8F  F014         	goto	u3231
  6892   00291A  EF91  F014         	goto	u3230
  6893   00291E                     u3231:
  6894   00291E  EF93  F014         	goto	l3941
  6895   002922                     u3230:
  6896   002922  0E00               	movlw	0
  6897   002924  6E0E               	movwf	___fladd@signs^0,c
  6898   002926                     l3941:
  6899   002926  A010               	btfss	___fladd@bexp^0,0,c
  6900   002928  EF98  F014         	goto	u3241
  6901   00292C  EF9A  F014         	goto	u3240
  6902   002930                     u3241:
  6903   002930  EF9D  F014         	goto	l3945
  6904   002934                     u3240:
  6905   002934  8E04               	bsf	(___fladd@b+2)^0,7,c
  6906   002936  EF9E  F014         	goto	l3947
  6907   00293A                     l3945:
  6908   00293A  9E04               	bcf	(___fladd@b+2)^0,7,c
  6909   00293C                     l3947:
  6910   00293C  90D8               	bcf	status,0,c
  6911   00293E  3010               	rrcf	___fladd@bexp^0,w,c
  6912   002940  6E05               	movwf	(___fladd@b+3)^0,c
  6913   002942  AE0E               	btfss	___fladd@signs^0,7,c
  6914   002944  EFA6  F014         	goto	u3251
  6915   002948  EFA8  F014         	goto	u3250
  6916   00294C                     u3251:
  6917   00294C  EFA9  F014         	goto	l3953
  6918   002950                     u3250:
  6919   002950  8E05               	bsf	(___fladd@b+3)^0,7,c
  6920   002952                     l3953:
  6921   002952  C002  F002         	movff	___fladd@b,?___fladd
  6922   002956  C003  F003         	movff	___fladd@b+1,?___fladd+1
  6923   00295A  C004  F004         	movff	___fladd@b+2,?___fladd+2
  6924   00295E  C005  F005         	movff	___fladd@b+3,?___fladd+3
  6925   002962                     l1316:
  6926   002962  0012               	return		;funcret
  6927   002964                     __end_of___fladd:
  6928                           	callstack 0
  6929                           
  6930 ;; *************** function ___flmul *****************
  6931 ;; Defined at:
  6932 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcmul.c"
  6933 ;; Parameters:    Size  Location     Type
  6934 ;;  b               4    1[COMRAM] unsigned char 
  6935 ;;  a               4    5[COMRAM] unsigned char 
  6936 ;; Auto vars:     Size  Location     Type
  6937 ;;  prod            4   20[COMRAM] struct .
  6938 ;;  grs             4   14[COMRAM] unsigned long 
  6939 ;;  temp            2   24[COMRAM] struct .
  6940 ;;  bexp            1   19[COMRAM] unsigned char 
  6941 ;;  aexp            1   18[COMRAM] unsigned char 
  6942 ;;  sign            1   13[COMRAM] unsigned char 
  6943 ;; Return value:  Size  Location     Type
  6944 ;;                  4    1[COMRAM] unsigned char 
  6945 ;; Registers used:
  6946 ;;		wreg, status,2, status,0, prodl, prodh
  6947 ;; Tracked objects:
  6948 ;;		On entry : 0/0
  6949 ;;		On exit  : 0/0
  6950 ;;		Unchanged: 0/0
  6951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6952 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6953 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6954 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6955 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6956 ;;Total ram usage:       25 bytes
  6957 ;; Hardware stack levels used: 1
  6958 ;; Hardware stack levels required when called: 4
  6959 ;; This function calls:
  6960 ;;		Nothing
  6961 ;; This function is called by:
  6962 ;;		_main
  6963 ;;		_Calculate_digits
  6964 ;; This function uses a non-reentrant model
  6965 ;;
  6966                           
  6967                           	psect	text30
  6968   002964                     __ptext30:
  6969                           	callstack 0
  6970   002964                     ___flmul:
  6971                           	callstack 26
  6972   002964  5005               	movf	(___flmul@b+3)^0,w,c
  6973   002966  0B80               	andlw	128
  6974   002968  6E0E               	movwf	___flmul@sign^0,c
  6975   00296A  5005               	movf	(___flmul@b+3)^0,w,c
  6976   00296C  2405               	addwf	(___flmul@b+3)^0,w,c
  6977   00296E  6E14               	movwf	___flmul@bexp^0,c
  6978   002970  AE04               	btfss	(___flmul@b+2)^0,7,c
  6979   002972  EFBD  F014         	goto	u3571
  6980   002976  EFBF  F014         	goto	u3570
  6981   00297A                     u3571:
  6982   00297A  EFC0  F014         	goto	l4229
  6983   00297E                     u3570:
  6984   00297E  8014               	bsf	___flmul@bexp^0,0,c
  6985   002980                     l4229:
  6986   002980  5014               	movf	___flmul@bexp^0,w,c
  6987   002982  B4D8               	btfsc	status,2,c
  6988   002984  EFC6  F014         	goto	u3581
  6989   002988  EFC8  F014         	goto	u3580
  6990   00298C                     u3581:
  6991   00298C  EFDB  F014         	goto	l4237
  6992   002990                     u3580:
  6993   002990  2814               	incf	___flmul@bexp^0,w,c
  6994   002992  A4D8               	btfss	status,2,c
  6995   002994  EFCE  F014         	goto	u3591
  6996   002998  EFD0  F014         	goto	u3590
  6997   00299C                     u3591:
  6998   00299C  EFD8  F014         	goto	l4235
  6999   0029A0                     u3590:
  7000   0029A0  0E00               	movlw	0
  7001   0029A2  6E02               	movwf	___flmul@b^0,c
  7002   0029A4  0E00               	movlw	0
  7003   0029A6  6E03               	movwf	(___flmul@b+1)^0,c
  7004   0029A8  0E00               	movlw	0
  7005   0029AA  6E04               	movwf	(___flmul@b+2)^0,c
  7006   0029AC  0E00               	movlw	0
  7007   0029AE  6E05               	movwf	(___flmul@b+3)^0,c
  7008   0029B0                     l4235:
  7009   0029B0  8E04               	bsf	(___flmul@b+2)^0,7,c
  7010   0029B2  EFE3  F014         	goto	l4239
  7011   0029B6                     l4237:
  7012   0029B6  0E00               	movlw	0
  7013   0029B8  6E02               	movwf	___flmul@b^0,c
  7014   0029BA  0E00               	movlw	0
  7015   0029BC  6E03               	movwf	(___flmul@b+1)^0,c
  7016   0029BE  0E00               	movlw	0
  7017   0029C0  6E04               	movwf	(___flmul@b+2)^0,c
  7018   0029C2  0E00               	movlw	0
  7019   0029C4  6E05               	movwf	(___flmul@b+3)^0,c
  7020   0029C6                     l4239:
  7021   0029C6  5009               	movf	(___flmul@a+3)^0,w,c
  7022   0029C8  0B80               	andlw	128
  7023   0029CA  1A0E               	xorwf	___flmul@sign^0,f,c
  7024   0029CC  5009               	movf	(___flmul@a+3)^0,w,c
  7025   0029CE  2409               	addwf	(___flmul@a+3)^0,w,c
  7026   0029D0  6E13               	movwf	___flmul@aexp^0,c
  7027   0029D2  AE08               	btfss	(___flmul@a+2)^0,7,c
  7028   0029D4  EFEE  F014         	goto	u3601
  7029   0029D8  EFF0  F014         	goto	u3600
  7030   0029DC                     u3601:
  7031   0029DC  EFF1  F014         	goto	l4247
  7032   0029E0                     u3600:
  7033   0029E0  8013               	bsf	___flmul@aexp^0,0,c
  7034   0029E2                     l4247:
  7035   0029E2  5013               	movf	___flmul@aexp^0,w,c
  7036   0029E4  B4D8               	btfsc	status,2,c
  7037   0029E6  EFF7  F014         	goto	u3611
  7038   0029EA  EFF9  F014         	goto	u3610
  7039   0029EE                     u3611:
  7040   0029EE  EF0C  F015         	goto	l4255
  7041   0029F2                     u3610:
  7042   0029F2  2813               	incf	___flmul@aexp^0,w,c
  7043   0029F4  A4D8               	btfss	status,2,c
  7044   0029F6  EFFF  F014         	goto	u3621
  7045   0029FA  EF01  F015         	goto	u3620
  7046   0029FE                     u3621:
  7047   0029FE  EF09  F015         	goto	l4253
  7048   002A02                     u3620:
  7049   002A02  0E00               	movlw	0
  7050   002A04  6E06               	movwf	___flmul@a^0,c
  7051   002A06  0E00               	movlw	0
  7052   002A08  6E07               	movwf	(___flmul@a+1)^0,c
  7053   002A0A  0E00               	movlw	0
  7054   002A0C  6E08               	movwf	(___flmul@a+2)^0,c
  7055   002A0E  0E00               	movlw	0
  7056   002A10  6E09               	movwf	(___flmul@a+3)^0,c
  7057   002A12                     l4253:
  7058   002A12  8E08               	bsf	(___flmul@a+2)^0,7,c
  7059   002A14  EF14  F015         	goto	l1393
  7060   002A18                     l4255:
  7061   002A18  0E00               	movlw	0
  7062   002A1A  6E06               	movwf	___flmul@a^0,c
  7063   002A1C  0E00               	movlw	0
  7064   002A1E  6E07               	movwf	(___flmul@a+1)^0,c
  7065   002A20  0E00               	movlw	0
  7066   002A22  6E08               	movwf	(___flmul@a+2)^0,c
  7067   002A24  0E00               	movlw	0
  7068   002A26  6E09               	movwf	(___flmul@a+3)^0,c
  7069   002A28                     l1393:
  7070   002A28  5013               	movf	___flmul@aexp^0,w,c
  7071   002A2A  B4D8               	btfsc	status,2,c
  7072   002A2C  EF1A  F015         	goto	u3631
  7073   002A30  EF1C  F015         	goto	u3630
  7074   002A34                     u3631:
  7075   002A34  EF24  F015         	goto	l4259
  7076   002A38                     u3630:
  7077   002A38  5014               	movf	___flmul@bexp^0,w,c
  7078   002A3A  A4D8               	btfss	status,2,c
  7079   002A3C  EF22  F015         	goto	u3641
  7080   002A40  EF24  F015         	goto	u3640
  7081   002A44                     u3641:
  7082   002A44  EF2E  F015         	goto	l4263
  7083   002A48                     u3640:
  7084   002A48                     l4259:
  7085   002A48  0E00               	movlw	0
  7086   002A4A  6E02               	movwf	?___flmul^0,c
  7087   002A4C  0E00               	movlw	0
  7088   002A4E  6E03               	movwf	(?___flmul+1)^0,c
  7089   002A50  0E00               	movlw	0
  7090   002A52  6E04               	movwf	(?___flmul+2)^0,c
  7091   002A54  0E00               	movlw	0
  7092   002A56  6E05               	movwf	(?___flmul+3)^0,c
  7093   002A58  EFC6  F016         	goto	l1397
  7094   002A5C                     l4263:
  7095   002A5C  5008               	movf	(___flmul@a+2)^0,w,c
  7096   002A5E  0202               	mulwf	___flmul@b^0,c
  7097   002A60  CFF3 F019          	movff	prodl,___flmul@temp
  7098   002A64  CFF4 F01A          	movff	prodh,___flmul@temp+1
  7099   002A68  5019               	movf	___flmul@temp^0,w,c
  7100   002A6A  6E0F               	movwf	___flmul@grs^0,c
  7101   002A6C  6A10               	clrf	(___flmul@grs+1)^0,c
  7102   002A6E  6A11               	clrf	(___flmul@grs+2)^0,c
  7103   002A70  6A12               	clrf	(___flmul@grs+3)^0,c
  7104   002A72  501A               	movf	(___flmul@temp+1)^0,w,c
  7105   002A74  6E15               	movwf	___flmul@prod^0,c
  7106   002A76  6A16               	clrf	(___flmul@prod+1)^0,c
  7107   002A78  6A17               	clrf	(___flmul@prod+2)^0,c
  7108   002A7A  6A18               	clrf	(___flmul@prod+3)^0,c
  7109   002A7C  5007               	movf	(___flmul@a+1)^0,w,c
  7110   002A7E  0203               	mulwf	(___flmul@b+1)^0,c
  7111   002A80  CFF3 F019          	movff	prodl,___flmul@temp
  7112   002A84  CFF4 F01A          	movff	prodh,___flmul@temp+1
  7113   002A88  5019               	movf	___flmul@temp^0,w,c
  7114   002A8A  260F               	addwf	___flmul@grs^0,f,c
  7115   002A8C  0E00               	movlw	0
  7116   002A8E  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7117   002A90  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7118   002A92  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7119   002A94  501A               	movf	(___flmul@temp+1)^0,w,c
  7120   002A96  2615               	addwf	___flmul@prod^0,f,c
  7121   002A98  0E00               	movlw	0
  7122   002A9A  2216               	addwfc	(___flmul@prod+1)^0,f,c
  7123   002A9C  2217               	addwfc	(___flmul@prod+2)^0,f,c
  7124   002A9E  2218               	addwfc	(___flmul@prod+3)^0,f,c
  7125   002AA0  5006               	movf	___flmul@a^0,w,c
  7126   002AA2  0204               	mulwf	(___flmul@b+2)^0,c
  7127   002AA4  CFF3 F019          	movff	prodl,___flmul@temp
  7128   002AA8  CFF4 F01A          	movff	prodh,___flmul@temp+1
  7129   002AAC  5019               	movf	___flmul@temp^0,w,c
  7130   002AAE  260F               	addwf	___flmul@grs^0,f,c
  7131   002AB0  0E00               	movlw	0
  7132   002AB2  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7133   002AB4  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7134   002AB6  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7135   002AB8  501A               	movf	(___flmul@temp+1)^0,w,c
  7136   002ABA  2615               	addwf	___flmul@prod^0,f,c
  7137   002ABC  0E00               	movlw	0
  7138   002ABE  2216               	addwfc	(___flmul@prod+1)^0,f,c
  7139   002AC0  2217               	addwfc	(___flmul@prod+2)^0,f,c
  7140   002AC2  2218               	addwfc	(___flmul@prod+3)^0,f,c
  7141   002AC4  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  7142   002AC8  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  7143   002ACC  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  7144   002AD0  6A0F               	clrf	___flmul@grs^0,c
  7145   002AD2  5006               	movf	___flmul@a^0,w,c
  7146   002AD4  0203               	mulwf	(___flmul@b+1)^0,c
  7147   002AD6  CFF3 F019          	movff	prodl,___flmul@temp
  7148   002ADA  CFF4 F01A          	movff	prodh,___flmul@temp+1
  7149   002ADE  5019               	movf	___flmul@temp^0,w,c
  7150   002AE0  260F               	addwf	___flmul@grs^0,f,c
  7151   002AE2  501A               	movf	(___flmul@temp+1)^0,w,c
  7152   002AE4  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7153   002AE6  0E00               	movlw	0
  7154   002AE8  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7155   002AEA  0E00               	movlw	0
  7156   002AEC  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7157   002AEE  5007               	movf	(___flmul@a+1)^0,w,c
  7158   002AF0  0202               	mulwf	___flmul@b^0,c
  7159   002AF2  CFF3 F019          	movff	prodl,___flmul@temp
  7160   002AF6  CFF4 F01A          	movff	prodh,___flmul@temp+1
  7161   002AFA  5019               	movf	___flmul@temp^0,w,c
  7162   002AFC  260F               	addwf	___flmul@grs^0,f,c
  7163   002AFE  501A               	movf	(___flmul@temp+1)^0,w,c
  7164   002B00  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7165   002B02  0E00               	movlw	0
  7166   002B04  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7167   002B06  0E00               	movlw	0
  7168   002B08  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7169   002B0A  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  7170   002B0E  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  7171   002B12  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  7172   002B16  6A0F               	clrf	___flmul@grs^0,c
  7173   002B18  5006               	movf	___flmul@a^0,w,c
  7174   002B1A  0202               	mulwf	___flmul@b^0,c
  7175   002B1C  CFF3 F019          	movff	prodl,___flmul@temp
  7176   002B20  CFF4 F01A          	movff	prodh,___flmul@temp+1
  7177   002B24  5019               	movf	___flmul@temp^0,w,c
  7178   002B26  260F               	addwf	___flmul@grs^0,f,c
  7179   002B28  501A               	movf	(___flmul@temp+1)^0,w,c
  7180   002B2A  2210               	addwfc	(___flmul@grs+1)^0,f,c
  7181   002B2C  0E00               	movlw	0
  7182   002B2E  2211               	addwfc	(___flmul@grs+2)^0,f,c
  7183   002B30  0E00               	movlw	0
  7184   002B32  2212               	addwfc	(___flmul@grs+3)^0,f,c
  7185   002B34  5008               	movf	(___flmul@a+2)^0,w,c
  7186   002B36  0203               	mulwf	(___flmul@b+1)^0,c
  7187   002B38  CFF3 F019          	movff	prodl,___flmul@temp
  7188   002B3C  CFF4 F01A          	movff	prodh,___flmul@temp+1
  7189   002B40  5019               	movf	___flmul@temp^0,w,c
  7190   002B42  2615               	addwf	___flmul@prod^0,f,c
  7191   002B44  501A               	movf	(___flmul@temp+1)^0,w,c
  7192   002B46  2216               	addwfc	(___flmul@prod+1)^0,f,c
  7193   002B48  0E00               	movlw	0
  7194   002B4A  2217               	addwfc	(___flmul@prod+2)^0,f,c
  7195   002B4C  0E00               	movlw	0
  7196   002B4E  2218               	addwfc	(___flmul@prod+3)^0,f,c
  7197   002B50  5007               	movf	(___flmul@a+1)^0,w,c
  7198   002B52  0204               	mulwf	(___flmul@b+2)^0,c
  7199   002B54  CFF3 F019          	movff	prodl,___flmul@temp
  7200   002B58  CFF4 F01A          	movff	prodh,___flmul@temp+1
  7201   002B5C  5019               	movf	___flmul@temp^0,w,c
  7202   002B5E  2615               	addwf	___flmul@prod^0,f,c
  7203   002B60  501A               	movf	(___flmul@temp+1)^0,w,c
  7204   002B62  2216               	addwfc	(___flmul@prod+1)^0,f,c
  7205   002B64  0E00               	movlw	0
  7206   002B66  2217               	addwfc	(___flmul@prod+2)^0,f,c
  7207   002B68  0E00               	movlw	0
  7208   002B6A  2218               	addwfc	(___flmul@prod+3)^0,f,c
  7209   002B6C  5008               	movf	(___flmul@a+2)^0,w,c
  7210   002B6E  0204               	mulwf	(___flmul@b+2)^0,c
  7211   002B70  CFF3 F019          	movff	prodl,___flmul@temp
  7212   002B74  CFF4 F01A          	movff	prodh,___flmul@temp+1
  7213   002B78  5019               	movf	___flmul@temp^0,w,c
  7214   002B7A  6E0A               	movwf	??___flmul^0,c
  7215   002B7C  501A               	movf	(___flmul@temp+1)^0,w,c
  7216   002B7E  6E0B               	movwf	(??___flmul+1)^0,c
  7217   002B80  6A0C               	clrf	(??___flmul+2)^0,c
  7218   002B82  6A0D               	clrf	(??___flmul+3)^0,c
  7219   002B84  C00C  F00D         	movff	??___flmul+2,??___flmul+3
  7220   002B88  C00B  F00C         	movff	??___flmul+1,??___flmul+2
  7221   002B8C  C00A  F00B         	movff	??___flmul,??___flmul+1
  7222   002B90  6A0A               	clrf	??___flmul^0,c
  7223   002B92  500A               	movf	??___flmul^0,w,c
  7224   002B94  2615               	addwf	___flmul@prod^0,f,c
  7225   002B96  500B               	movf	(??___flmul+1)^0,w,c
  7226   002B98  2216               	addwfc	(___flmul@prod+1)^0,f,c
  7227   002B9A  500C               	movf	(??___flmul+2)^0,w,c
  7228   002B9C  2217               	addwfc	(___flmul@prod+2)^0,f,c
  7229   002B9E  500D               	movf	(??___flmul+3)^0,w,c
  7230   002BA0  2218               	addwfc	(___flmul@prod+3)^0,f,c
  7231   002BA2  C00F  F00A         	movff	___flmul@grs,??___flmul
  7232   002BA6  C010  F00B         	movff	___flmul@grs+1,??___flmul+1
  7233   002BAA  C011  F00C         	movff	___flmul@grs+2,??___flmul+2
  7234   002BAE  C012  F00D         	movff	___flmul@grs+3,??___flmul+3
  7235   002BB2  0E19               	movlw	25
  7236   002BB4  EFE1  F015         	goto	u3650
  7237   002BB8                     u3655:
  7238   002BB8  90D8               	bcf	status,0,c
  7239   002BBA  320D               	rrcf	(??___flmul+3)^0,f,c
  7240   002BBC  320C               	rrcf	(??___flmul+2)^0,f,c
  7241   002BBE  320B               	rrcf	(??___flmul+1)^0,f,c
  7242   002BC0  320A               	rrcf	??___flmul^0,f,c
  7243   002BC2                     u3650:
  7244   002BC2  2EE8               	decfsz	wreg,f,c
  7245   002BC4  EFDC  F015         	goto	u3655
  7246   002BC8  500A               	movf	??___flmul^0,w,c
  7247   002BCA  2615               	addwf	___flmul@prod^0,f,c
  7248   002BCC  500B               	movf	(??___flmul+1)^0,w,c
  7249   002BCE  2216               	addwfc	(___flmul@prod+1)^0,f,c
  7250   002BD0  500C               	movf	(??___flmul+2)^0,w,c
  7251   002BD2  2217               	addwfc	(___flmul@prod+2)^0,f,c
  7252   002BD4  500D               	movf	(??___flmul+3)^0,w,c
  7253   002BD6  2218               	addwfc	(___flmul@prod+3)^0,f,c
  7254   002BD8  C011  F012         	movff	___flmul@grs+2,___flmul@grs+3
  7255   002BDC  C010  F011         	movff	___flmul@grs+1,___flmul@grs+2
  7256   002BE0  C00F  F010         	movff	___flmul@grs,___flmul@grs+1
  7257   002BE4  6A0F               	clrf	___flmul@grs^0,c
  7258   002BE6  5013               	movf	___flmul@aexp^0,w,c
  7259   002BE8  C014  F00A         	movff	___flmul@bexp,??___flmul
  7260   002BEC  6A0B               	clrf	(??___flmul+1)^0,c
  7261   002BEE  260A               	addwf	??___flmul^0,f,c
  7262   002BF0  0E00               	movlw	0
  7263   002BF2  220B               	addwfc	(??___flmul+1)^0,f,c
  7264   002BF4  0E82               	movlw	130
  7265   002BF6  240A               	addwf	??___flmul^0,w,c
  7266   002BF8  6E19               	movwf	___flmul@temp^0,c
  7267   002BFA  0EFF               	movlw	255
  7268   002BFC  200B               	addwfc	(??___flmul+1)^0,w,c
  7269   002BFE  6E1A               	movwf	(___flmul@temp+1)^0,c
  7270   002C00  EF17  F016         	goto	l4311
  7271   002C04                     l4305:
  7272   002C04  90D8               	bcf	status,0,c
  7273   002C06  3615               	rlcf	___flmul@prod^0,f,c
  7274   002C08  3616               	rlcf	(___flmul@prod+1)^0,f,c
  7275   002C0A  3617               	rlcf	(___flmul@prod+2)^0,f,c
  7276   002C0C  3618               	rlcf	(___flmul@prod+3)^0,f,c
  7277   002C0E  AE12               	btfss	(___flmul@grs+3)^0,7,c
  7278   002C10  EF0C  F016         	goto	u3661
  7279   002C14  EF0E  F016         	goto	u3660
  7280   002C18                     u3661:
  7281   002C18  EF0F  F016         	goto	l1400
  7282   002C1C                     u3660:
  7283   002C1C  8015               	bsf	___flmul@prod^0,0,c
  7284   002C1E                     l1400:
  7285   002C1E  90D8               	bcf	status,0,c
  7286   002C20  360F               	rlcf	___flmul@grs^0,f,c
  7287   002C22  3610               	rlcf	(___flmul@grs+1)^0,f,c
  7288   002C24  3611               	rlcf	(___flmul@grs+2)^0,f,c
  7289   002C26  3612               	rlcf	(___flmul@grs+3)^0,f,c
  7290   002C28  0619               	decf	___flmul@temp^0,f,c
  7291   002C2A  A0D8               	btfss	status,0,c
  7292   002C2C  061A               	decf	(___flmul@temp+1)^0,f,c
  7293   002C2E                     l4311:
  7294   002C2E  AE17               	btfss	(___flmul@prod+2)^0,7,c
  7295   002C30  EF1C  F016         	goto	u3671
  7296   002C34  EF1E  F016         	goto	u3670
  7297   002C38                     u3671:
  7298   002C38  EF02  F016         	goto	l4305
  7299   002C3C                     u3670:
  7300   002C3C  0E00               	movlw	0
  7301   002C3E  6E13               	movwf	___flmul@aexp^0,c
  7302   002C40  AE12               	btfss	(___flmul@grs+3)^0,7,c
  7303   002C42  EF25  F016         	goto	u3681
  7304   002C46  EF27  F016         	goto	u3680
  7305   002C4A                     u3681:
  7306   002C4A  EF4B  F016         	goto	l1402
  7307   002C4E                     u3680:
  7308   002C4E  0EFF               	movlw	255
  7309   002C50  140F               	andwf	___flmul@grs^0,w,c
  7310   002C52  6E0A               	movwf	??___flmul^0,c
  7311   002C54  0EFF               	movlw	255
  7312   002C56  1410               	andwf	(___flmul@grs+1)^0,w,c
  7313   002C58  6E0B               	movwf	(??___flmul+1)^0,c
  7314   002C5A  0EFF               	movlw	255
  7315   002C5C  1411               	andwf	(___flmul@grs+2)^0,w,c
  7316   002C5E  6E0C               	movwf	(??___flmul+2)^0,c
  7317   002C60  0E7F               	movlw	127
  7318   002C62  1412               	andwf	(___flmul@grs+3)^0,w,c
  7319   002C64  6E0D               	movwf	(??___flmul+3)^0,c
  7320   002C66  500A               	movf	??___flmul^0,w,c
  7321   002C68  100B               	iorwf	(??___flmul+1)^0,w,c
  7322   002C6A  100C               	iorwf	(??___flmul+2)^0,w,c
  7323   002C6C  100D               	iorwf	(??___flmul+3)^0,w,c
  7324   002C6E  B4D8               	btfsc	status,2,c
  7325   002C70  EF3C  F016         	goto	u3691
  7326   002C74  EF3E  F016         	goto	u3690
  7327   002C78                     u3691:
  7328   002C78  EF42  F016         	goto	l1403
  7329   002C7C                     u3690:
  7330   002C7C                     l4319:
  7331   002C7C  0E01               	movlw	1
  7332   002C7E  6E13               	movwf	___flmul@aexp^0,c
  7333   002C80  EF4B  F016         	goto	l1402
  7334   002C84                     l1403:
  7335   002C84  A015               	btfss	___flmul@prod^0,0,c
  7336   002C86  EF47  F016         	goto	u3701
  7337   002C8A  EF49  F016         	goto	u3700
  7338   002C8E                     u3701:
  7339   002C8E  EF4B  F016         	goto	l1402
  7340   002C92                     u3700:
  7341   002C92  EF3E  F016         	goto	l4319
  7342   002C96                     l1402:
  7343   002C96  5013               	movf	___flmul@aexp^0,w,c
  7344   002C98  B4D8               	btfsc	status,2,c
  7345   002C9A  EF51  F016         	goto	u3711
  7346   002C9E  EF53  F016         	goto	u3710
  7347   002CA2                     u3711:
  7348   002CA2  EF77  F016         	goto	l4331
  7349   002CA6                     u3710:
  7350   002CA6  0E01               	movlw	1
  7351   002CA8  2615               	addwf	___flmul@prod^0,f,c
  7352   002CAA  0E00               	movlw	0
  7353   002CAC  2216               	addwfc	(___flmul@prod+1)^0,f,c
  7354   002CAE  2217               	addwfc	(___flmul@prod+2)^0,f,c
  7355   002CB0  2218               	addwfc	(___flmul@prod+3)^0,f,c
  7356   002CB2  A018               	btfss	(___flmul@prod+3)^0,0,c
  7357   002CB4  EF5E  F016         	goto	u3721
  7358   002CB8  EF60  F016         	goto	u3720
  7359   002CBC                     u3721:
  7360   002CBC  EF77  F016         	goto	l4331
  7361   002CC0                     u3720:
  7362   002CC0  C015  F00A         	movff	___flmul@prod,??___flmul
  7363   002CC4  C016  F00B         	movff	___flmul@prod+1,??___flmul+1
  7364   002CC8  C017  F00C         	movff	___flmul@prod+2,??___flmul+2
  7365   002CCC  C018  F00D         	movff	___flmul@prod+3,??___flmul+3
  7366   002CD0  340D               	rlcf	(??___flmul+3)^0,w,c
  7367   002CD2  320D               	rrcf	(??___flmul+3)^0,f,c
  7368   002CD4  320C               	rrcf	(??___flmul+2)^0,f,c
  7369   002CD6  320B               	rrcf	(??___flmul+1)^0,f,c
  7370   002CD8  320A               	rrcf	??___flmul^0,f,c
  7371   002CDA  C00A  F015         	movff	??___flmul,___flmul@prod
  7372   002CDE  C00B  F016         	movff	??___flmul+1,___flmul@prod+1
  7373   002CE2  C00C  F017         	movff	??___flmul+2,___flmul@prod+2
  7374   002CE6  C00D  F018         	movff	??___flmul+3,___flmul@prod+3
  7375   002CEA  4A19               	infsnz	___flmul@temp^0,f,c
  7376   002CEC  2A1A               	incf	(___flmul@temp+1)^0,f,c
  7377   002CEE                     l4331:
  7378   002CEE  BE1A               	btfsc	(___flmul@temp+1)^0,7,c
  7379   002CF0  EF82  F016         	goto	u3731
  7380   002CF4  501A               	movf	(___flmul@temp+1)^0,w,c
  7381   002CF6  E108               	bnz	u3730
  7382   002CF8  2819               	incf	___flmul@temp^0,w,c
  7383   002CFA  A0D8               	btfss	status,0,c
  7384   002CFC  EF82  F016         	goto	u3731
  7385   002D00  EF84  F016         	goto	u3730
  7386   002D04                     u3731:
  7387   002D04  EF8E  F016         	goto	l4335
  7388   002D08                     u3730:
  7389   002D08  0E00               	movlw	0
  7390   002D0A  6E15               	movwf	___flmul@prod^0,c
  7391   002D0C  0E00               	movlw	0
  7392   002D0E  6E16               	movwf	(___flmul@prod+1)^0,c
  7393   002D10  0E80               	movlw	128
  7394   002D12  6E17               	movwf	(___flmul@prod+2)^0,c
  7395   002D14  0E7F               	movlw	127
  7396   002D16  6E18               	movwf	(___flmul@prod+3)^0,c
  7397   002D18  EFBC  F016         	goto	l4347
  7398   002D1C                     l4335:
  7399   002D1C  BE1A               	btfsc	(___flmul@temp+1)^0,7,c
  7400   002D1E  EF9B  F016         	goto	u3740
  7401   002D22  501A               	movf	(___flmul@temp+1)^0,w,c
  7402   002D24  E106               	bnz	u3741
  7403   002D26  0419               	decf	___flmul@temp^0,w,c
  7404   002D28  B0D8               	btfsc	status,0,c
  7405   002D2A  EF99  F016         	goto	u3741
  7406   002D2E  EF9B  F016         	goto	u3740
  7407   002D32                     u3741:
  7408   002D32  EFA7  F016         	goto	l1410
  7409   002D36                     u3740:
  7410   002D36  0E00               	movlw	0
  7411   002D38  6E15               	movwf	___flmul@prod^0,c
  7412   002D3A  0E00               	movlw	0
  7413   002D3C  6E16               	movwf	(___flmul@prod+1)^0,c
  7414   002D3E  0E00               	movlw	0
  7415   002D40  6E17               	movwf	(___flmul@prod+2)^0,c
  7416   002D42  0E00               	movlw	0
  7417   002D44  6E18               	movwf	(___flmul@prod+3)^0,c
  7418   002D46  0E00               	movlw	0
  7419   002D48  6E0E               	movwf	___flmul@sign^0,c
  7420   002D4A  EFBC  F016         	goto	l4347
  7421   002D4E                     l1410:
  7422   002D4E  C019  F014         	movff	___flmul@temp,___flmul@bexp
  7423   002D52  0EFF               	movlw	255
  7424   002D54  1615               	andwf	___flmul@prod^0,f,c
  7425   002D56  0EFF               	movlw	255
  7426   002D58  1616               	andwf	(___flmul@prod+1)^0,f,c
  7427   002D5A  0E7F               	movlw	127
  7428   002D5C  1617               	andwf	(___flmul@prod+2)^0,f,c
  7429   002D5E  0E00               	movlw	0
  7430   002D60  1618               	andwf	(___flmul@prod+3)^0,f,c
  7431   002D62  A014               	btfss	___flmul@bexp^0,0,c
  7432   002D64  EFB6  F016         	goto	u3751
  7433   002D68  EFB8  F016         	goto	u3750
  7434   002D6C                     u3751:
  7435   002D6C  EFB9  F016         	goto	l4345
  7436   002D70                     u3750:
  7437   002D70  8E17               	bsf	(___flmul@prod+2)^0,7,c
  7438   002D72                     l4345:
  7439   002D72  90D8               	bcf	status,0,c
  7440   002D74  3014               	rrcf	___flmul@bexp^0,w,c
  7441   002D76  6E18               	movwf	(___flmul@prod+3)^0,c
  7442   002D78                     l4347:
  7443   002D78  500E               	movf	___flmul@sign^0,w,c
  7444   002D7A  1218               	iorwf	(___flmul@prod+3)^0,f,c
  7445   002D7C  C015  F002         	movff	___flmul@prod,?___flmul
  7446   002D80  C016  F003         	movff	___flmul@prod+1,?___flmul+1
  7447   002D84  C017  F004         	movff	___flmul@prod+2,?___flmul+2
  7448   002D88  C018  F005         	movff	___flmul@prod+3,?___flmul+3
  7449   002D8C                     l1397:
  7450   002D8C  0012               	return		;funcret
  7451   002D8E                     __end_of___flmul:
  7452                           	callstack 0
  7453                           
  7454 ;; *************** function ___fldiv *****************
  7455 ;; Defined at:
  7456 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.41\pic\sources\c99\common\sprcdiv.c"
  7457 ;; Parameters:    Size  Location     Type
  7458 ;;  b               4   34[COMRAM] unsigned char 
  7459 ;;  a               4   38[COMRAM] unsigned char 
  7460 ;; Auto vars:     Size  Location     Type
  7461 ;;  grs             4   53[COMRAM] unsigned long 
  7462 ;;  rem             4   46[COMRAM] unsigned long 
  7463 ;;  new_exp         2   51[COMRAM] short 
  7464 ;;  aexp            1   58[COMRAM] unsigned char 
  7465 ;;  bexp            1   57[COMRAM] unsigned char 
  7466 ;;  sign            1   50[COMRAM] unsigned char 
  7467 ;; Return value:  Size  Location     Type
  7468 ;;                  4   34[COMRAM] unsigned char 
  7469 ;; Registers used:
  7470 ;;		wreg, status,2, status,0
  7471 ;; Tracked objects:
  7472 ;;		On entry : 0/0
  7473 ;;		On exit  : 0/0
  7474 ;;		Unchanged: 0/0
  7475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7476 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7477 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7478 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7479 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7480 ;;Total ram usage:       25 bytes
  7481 ;; Hardware stack levels used: 1
  7482 ;; Hardware stack levels required when called: 4
  7483 ;; This function calls:
  7484 ;;		Nothing
  7485 ;; This function is called by:
  7486 ;;		_main
  7487 ;;		_Calculate_digits
  7488 ;; This function uses a non-reentrant model
  7489 ;;
  7490                           
  7491                           	psect	text31
  7492   002D8E                     __ptext31:
  7493                           	callstack 0
  7494   002D8E                     ___fldiv:
  7495                           	callstack 26
  7496   002D8E  5026               	movf	(___fldiv@b+3)^0,w,c
  7497   002D90  0B80               	andlw	128
  7498   002D92  6E33               	movwf	___fldiv@sign^0,c
  7499   002D94  5026               	movf	(___fldiv@b+3)^0,w,c
  7500   002D96  2426               	addwf	(___fldiv@b+3)^0,w,c
  7501   002D98  6E3A               	movwf	___fldiv@bexp^0,c
  7502   002D9A  AE25               	btfss	(___fldiv@b+2)^0,7,c
  7503   002D9C  EFD2  F016         	goto	u3341
  7504   002DA0  EFD4  F016         	goto	u3340
  7505   002DA4                     u3341:
  7506   002DA4  EFD5  F016         	goto	l4091
  7507   002DA8                     u3340:
  7508   002DA8  803A               	bsf	___fldiv@bexp^0,0,c
  7509   002DAA                     l4091:
  7510   002DAA  503A               	movf	___fldiv@bexp^0,w,c
  7511   002DAC  B4D8               	btfsc	status,2,c
  7512   002DAE  EFDB  F016         	goto	u3351
  7513   002DB2  EFDD  F016         	goto	u3350
  7514   002DB6                     u3351:
  7515   002DB6  EFF2  F016         	goto	l4101
  7516   002DBA                     u3350:
  7517   002DBA  283A               	incf	___fldiv@bexp^0,w,c
  7518   002DBC  A4D8               	btfss	status,2,c
  7519   002DBE  EFE3  F016         	goto	u3361
  7520   002DC2  EFE5  F016         	goto	u3360
  7521   002DC6                     u3361:
  7522   002DC6  EFED  F016         	goto	l4097
  7523   002DCA                     u3360:
  7524   002DCA  0E00               	movlw	0
  7525   002DCC  6E23               	movwf	___fldiv@b^0,c
  7526   002DCE  0E00               	movlw	0
  7527   002DD0  6E24               	movwf	(___fldiv@b+1)^0,c
  7528   002DD2  0E00               	movlw	0
  7529   002DD4  6E25               	movwf	(___fldiv@b+2)^0,c
  7530   002DD6  0E00               	movlw	0
  7531   002DD8  6E26               	movwf	(___fldiv@b+3)^0,c
  7532   002DDA                     l4097:
  7533   002DDA  8E25               	bsf	(___fldiv@b+2)^0,7,c
  7534   002DDC  0E00               	movlw	0
  7535   002DDE  6E26               	movwf	(___fldiv@b+3)^0,c
  7536   002DE0  EFFA  F016         	goto	l4103
  7537   002DE4                     l4101:
  7538   002DE4  0E00               	movlw	0
  7539   002DE6  6E23               	movwf	___fldiv@b^0,c
  7540   002DE8  0E00               	movlw	0
  7541   002DEA  6E24               	movwf	(___fldiv@b+1)^0,c
  7542   002DEC  0E00               	movlw	0
  7543   002DEE  6E25               	movwf	(___fldiv@b+2)^0,c
  7544   002DF0  0E00               	movlw	0
  7545   002DF2  6E26               	movwf	(___fldiv@b+3)^0,c
  7546   002DF4                     l4103:
  7547   002DF4  502A               	movf	(___fldiv@a+3)^0,w,c
  7548   002DF6  0B80               	andlw	128
  7549   002DF8  1A33               	xorwf	___fldiv@sign^0,f,c
  7550   002DFA  502A               	movf	(___fldiv@a+3)^0,w,c
  7551   002DFC  242A               	addwf	(___fldiv@a+3)^0,w,c
  7552   002DFE  6E3B               	movwf	___fldiv@aexp^0,c
  7553   002E00  AE29               	btfss	(___fldiv@a+2)^0,7,c
  7554   002E02  EF05  F017         	goto	u3371
  7555   002E06  EF07  F017         	goto	u3370
  7556   002E0A                     u3371:
  7557   002E0A  EF08  F017         	goto	l4111
  7558   002E0E                     u3370:
  7559   002E0E  803B               	bsf	___fldiv@aexp^0,0,c
  7560   002E10                     l4111:
  7561   002E10  503B               	movf	___fldiv@aexp^0,w,c
  7562   002E12  B4D8               	btfsc	status,2,c
  7563   002E14  EF0E  F017         	goto	u3381
  7564   002E18  EF10  F017         	goto	u3380
  7565   002E1C                     u3381:
  7566   002E1C  EF25  F017         	goto	l4121
  7567   002E20                     u3380:
  7568   002E20  283B               	incf	___fldiv@aexp^0,w,c
  7569   002E22  A4D8               	btfss	status,2,c
  7570   002E24  EF16  F017         	goto	u3391
  7571   002E28  EF18  F017         	goto	u3390
  7572   002E2C                     u3391:
  7573   002E2C  EF20  F017         	goto	l4117
  7574   002E30                     u3390:
  7575   002E30  0E00               	movlw	0
  7576   002E32  6E27               	movwf	___fldiv@a^0,c
  7577   002E34  0E00               	movlw	0
  7578   002E36  6E28               	movwf	(___fldiv@a+1)^0,c
  7579   002E38  0E00               	movlw	0
  7580   002E3A  6E29               	movwf	(___fldiv@a+2)^0,c
  7581   002E3C  0E00               	movlw	0
  7582   002E3E  6E2A               	movwf	(___fldiv@a+3)^0,c
  7583   002E40                     l4117:
  7584   002E40  8E29               	bsf	(___fldiv@a+2)^0,7,c
  7585   002E42  0E00               	movlw	0
  7586   002E44  6E2A               	movwf	(___fldiv@a+3)^0,c
  7587   002E46  EF2D  F017         	goto	l4123
  7588   002E4A                     l4121:
  7589   002E4A  0E00               	movlw	0
  7590   002E4C  6E27               	movwf	___fldiv@a^0,c
  7591   002E4E  0E00               	movlw	0
  7592   002E50  6E28               	movwf	(___fldiv@a+1)^0,c
  7593   002E52  0E00               	movlw	0
  7594   002E54  6E29               	movwf	(___fldiv@a+2)^0,c
  7595   002E56  0E00               	movlw	0
  7596   002E58  6E2A               	movwf	(___fldiv@a+3)^0,c
  7597   002E5A                     l4123:
  7598   002E5A  5027               	movf	___fldiv@a^0,w,c
  7599   002E5C  1028               	iorwf	(___fldiv@a+1)^0,w,c
  7600   002E5E  1029               	iorwf	(___fldiv@a+2)^0,w,c
  7601   002E60  102A               	iorwf	(___fldiv@a+3)^0,w,c
  7602   002E62  A4D8               	btfss	status,2,c
  7603   002E64  EF36  F017         	goto	u3401
  7604   002E68  EF38  F017         	goto	u3400
  7605   002E6C                     u3401:
  7606   002E6C  EF50  F017         	goto	l4135
  7607   002E70                     u3400:
  7608   002E70  0E00               	movlw	0
  7609   002E72  6E23               	movwf	___fldiv@b^0,c
  7610   002E74  0E00               	movlw	0
  7611   002E76  6E24               	movwf	(___fldiv@b+1)^0,c
  7612   002E78  0E00               	movlw	0
  7613   002E7A  6E25               	movwf	(___fldiv@b+2)^0,c
  7614   002E7C  0E00               	movlw	0
  7615   002E7E  6E26               	movwf	(___fldiv@b+3)^0,c
  7616   002E80  0E80               	movlw	128
  7617   002E82  1225               	iorwf	(___fldiv@b+2)^0,f,c
  7618   002E84  0E7F               	movlw	127
  7619   002E86  1226               	iorwf	(___fldiv@b+3)^0,f,c
  7620   002E88                     l4129:
  7621   002E88  5033               	movf	___fldiv@sign^0,w,c
  7622   002E8A  1226               	iorwf	(___fldiv@b+3)^0,f,c
  7623   002E8C  C023  F023         	movff	___fldiv@b,?___fldiv
  7624   002E90  C024  F024         	movff	___fldiv@b+1,?___fldiv+1
  7625   002E94  C025  F025         	movff	___fldiv@b+2,?___fldiv+2
  7626   002E98  C026  F026         	movff	___fldiv@b+3,?___fldiv+3
  7627   002E9C  EF93  F018         	goto	l1361
  7628   002EA0                     l4135:
  7629   002EA0  503A               	movf	___fldiv@bexp^0,w,c
  7630   002EA2  A4D8               	btfss	status,2,c
  7631   002EA4  EF56  F017         	goto	u3411
  7632   002EA8  EF58  F017         	goto	u3410
  7633   002EAC                     u3411:
  7634   002EAC  EF62  F017         	goto	l4143
  7635   002EB0                     u3410:
  7636   002EB0  0E00               	movlw	0
  7637   002EB2  6E23               	movwf	?___fldiv^0,c
  7638   002EB4  0E00               	movlw	0
  7639   002EB6  6E24               	movwf	(?___fldiv+1)^0,c
  7640   002EB8  0E00               	movlw	0
  7641   002EBA  6E25               	movwf	(?___fldiv+2)^0,c
  7642   002EBC  0E00               	movlw	0
  7643   002EBE  6E26               	movwf	(?___fldiv+3)^0,c
  7644   002EC0  EF93  F018         	goto	l1361
  7645   002EC4                     l4143:
  7646   002EC4  503B               	movf	___fldiv@aexp^0,w,c
  7647   002EC6  C03A  F02B         	movff	___fldiv@bexp,??___fldiv
  7648   002ECA  6A2C               	clrf	(??___fldiv+1)^0,c
  7649   002ECC  5E2B               	subwf	??___fldiv^0,f,c
  7650   002ECE  0E00               	movlw	0
  7651   002ED0  5A2C               	subwfb	(??___fldiv+1)^0,f,c
  7652   002ED2  0E7F               	movlw	127
  7653   002ED4  242B               	addwf	??___fldiv^0,w,c
  7654   002ED6  6E34               	movwf	___fldiv@new_exp^0,c
  7655   002ED8  0E00               	movlw	0
  7656   002EDA  202C               	addwfc	(??___fldiv+1)^0,w,c
  7657   002EDC  6E35               	movwf	(___fldiv@new_exp+1)^0,c
  7658   002EDE  C023  F02F         	movff	___fldiv@b,___fldiv@rem
  7659   002EE2  C024  F030         	movff	___fldiv@b+1,___fldiv@rem+1
  7660   002EE6  C025  F031         	movff	___fldiv@b+2,___fldiv@rem+2
  7661   002EEA  C026  F032         	movff	___fldiv@b+3,___fldiv@rem+3
  7662   002EEE  0E00               	movlw	0
  7663   002EF0  6E23               	movwf	___fldiv@b^0,c
  7664   002EF2  0E00               	movlw	0
  7665   002EF4  6E24               	movwf	(___fldiv@b+1)^0,c
  7666   002EF6  0E00               	movlw	0
  7667   002EF8  6E25               	movwf	(___fldiv@b+2)^0,c
  7668   002EFA  0E00               	movlw	0
  7669   002EFC  6E26               	movwf	(___fldiv@b+3)^0,c
  7670   002EFE  0E00               	movlw	0
  7671   002F00  6E36               	movwf	___fldiv@grs^0,c
  7672   002F02  0E00               	movlw	0
  7673   002F04  6E37               	movwf	(___fldiv@grs+1)^0,c
  7674   002F06  0E00               	movlw	0
  7675   002F08  6E38               	movwf	(___fldiv@grs+2)^0,c
  7676   002F0A  0E00               	movlw	0
  7677   002F0C  6E39               	movwf	(___fldiv@grs+3)^0,c
  7678   002F0E  0E00               	movlw	0
  7679   002F10  6E3B               	movwf	___fldiv@aexp^0,c
  7680   002F12  EFC3  F017         	goto	l1363
  7681   002F16                     l4153:
  7682   002F16  503B               	movf	___fldiv@aexp^0,w,c
  7683   002F18  B4D8               	btfsc	status,2,c
  7684   002F1A  EF91  F017         	goto	u3421
  7685   002F1E  EF93  F017         	goto	u3420
  7686   002F22                     u3421:
  7687   002F22  EFAA  F017         	goto	l4161
  7688   002F26                     u3420:
  7689   002F26  90D8               	bcf	status,0,c
  7690   002F28  362F               	rlcf	___fldiv@rem^0,f,c
  7691   002F2A  3630               	rlcf	(___fldiv@rem+1)^0,f,c
  7692   002F2C  3631               	rlcf	(___fldiv@rem+2)^0,f,c
  7693   002F2E  3632               	rlcf	(___fldiv@rem+3)^0,f,c
  7694   002F30  90D8               	bcf	status,0,c
  7695   002F32  3623               	rlcf	___fldiv@b^0,f,c
  7696   002F34  3624               	rlcf	(___fldiv@b+1)^0,f,c
  7697   002F36  3625               	rlcf	(___fldiv@b+2)^0,f,c
  7698   002F38  3626               	rlcf	(___fldiv@b+3)^0,f,c
  7699   002F3A  AE39               	btfss	(___fldiv@grs+3)^0,7,c
  7700   002F3C  EFA2  F017         	goto	u3431
  7701   002F40  EFA4  F017         	goto	u3430
  7702   002F44                     u3431:
  7703   002F44  EFA5  F017         	goto	l1366
  7704   002F48                     u3430:
  7705   002F48  8023               	bsf	___fldiv@b^0,0,c
  7706   002F4A                     l1366:
  7707   002F4A  90D8               	bcf	status,0,c
  7708   002F4C  3636               	rlcf	___fldiv@grs^0,f,c
  7709   002F4E  3637               	rlcf	(___fldiv@grs+1)^0,f,c
  7710   002F50  3638               	rlcf	(___fldiv@grs+2)^0,f,c
  7711   002F52  3639               	rlcf	(___fldiv@grs+3)^0,f,c
  7712   002F54                     l4161:
  7713   002F54  5027               	movf	___fldiv@a^0,w,c
  7714   002F56  5C2F               	subwf	___fldiv@rem^0,w,c
  7715   002F58  5028               	movf	(___fldiv@a+1)^0,w,c
  7716   002F5A  5830               	subwfb	(___fldiv@rem+1)^0,w,c
  7717   002F5C  5029               	movf	(___fldiv@a+2)^0,w,c
  7718   002F5E  5831               	subwfb	(___fldiv@rem+2)^0,w,c
  7719   002F60  502A               	movf	(___fldiv@a+3)^0,w,c
  7720   002F62  5832               	subwfb	(___fldiv@rem+3)^0,w,c
  7721   002F64  A0D8               	btfss	status,0,c
  7722   002F66  EFB7  F017         	goto	u3441
  7723   002F6A  EFB9  F017         	goto	u3440
  7724   002F6E                     u3441:
  7725   002F6E  EFC2  F017         	goto	l4167
  7726   002F72                     u3440:
  7727   002F72  8C39               	bsf	(___fldiv@grs+3)^0,6,c
  7728   002F74  5027               	movf	___fldiv@a^0,w,c
  7729   002F76  5E2F               	subwf	___fldiv@rem^0,f,c
  7730   002F78  5028               	movf	(___fldiv@a+1)^0,w,c
  7731   002F7A  5A30               	subwfb	(___fldiv@rem+1)^0,f,c
  7732   002F7C  5029               	movf	(___fldiv@a+2)^0,w,c
  7733   002F7E  5A31               	subwfb	(___fldiv@rem+2)^0,f,c
  7734   002F80  502A               	movf	(___fldiv@a+3)^0,w,c
  7735   002F82  5A32               	subwfb	(___fldiv@rem+3)^0,f,c
  7736   002F84                     l4167:
  7737   002F84  2A3B               	incf	___fldiv@aexp^0,f,c
  7738   002F86                     l1363:
  7739   002F86  0E19               	movlw	25
  7740   002F88  643B               	cpfsgt	___fldiv@aexp^0,c
  7741   002F8A  EFC9  F017         	goto	u3451
  7742   002F8E  EFCB  F017         	goto	u3450
  7743   002F92                     u3451:
  7744   002F92  EF8B  F017         	goto	l4153
  7745   002F96                     u3450:
  7746   002F96  502F               	movf	___fldiv@rem^0,w,c
  7747   002F98  1030               	iorwf	(___fldiv@rem+1)^0,w,c
  7748   002F9A  1031               	iorwf	(___fldiv@rem+2)^0,w,c
  7749   002F9C  1032               	iorwf	(___fldiv@rem+3)^0,w,c
  7750   002F9E  B4D8               	btfsc	status,2,c
  7751   002FA0  EFD4  F017         	goto	u3461
  7752   002FA4  EFD6  F017         	goto	u3460
  7753   002FA8                     u3461:
  7754   002FA8  EFEE  F017         	goto	l4179
  7755   002FAC                     u3460:
  7756   002FAC  8036               	bsf	___fldiv@grs^0,0,c
  7757   002FAE  EFEE  F017         	goto	l4179
  7758   002FB2                     l4173:
  7759   002FB2  90D8               	bcf	status,0,c
  7760   002FB4  3623               	rlcf	___fldiv@b^0,f,c
  7761   002FB6  3624               	rlcf	(___fldiv@b+1)^0,f,c
  7762   002FB8  3625               	rlcf	(___fldiv@b+2)^0,f,c
  7763   002FBA  3626               	rlcf	(___fldiv@b+3)^0,f,c
  7764   002FBC  AE39               	btfss	(___fldiv@grs+3)^0,7,c
  7765   002FBE  EFE3  F017         	goto	u3471
  7766   002FC2  EFE5  F017         	goto	u3470
  7767   002FC6                     u3471:
  7768   002FC6  EFE6  F017         	goto	l1372
  7769   002FCA                     u3470:
  7770   002FCA  8023               	bsf	___fldiv@b^0,0,c
  7771   002FCC                     l1372:
  7772   002FCC  90D8               	bcf	status,0,c
  7773   002FCE  3636               	rlcf	___fldiv@grs^0,f,c
  7774   002FD0  3637               	rlcf	(___fldiv@grs+1)^0,f,c
  7775   002FD2  3638               	rlcf	(___fldiv@grs+2)^0,f,c
  7776   002FD4  3639               	rlcf	(___fldiv@grs+3)^0,f,c
  7777   002FD6  0634               	decf	___fldiv@new_exp^0,f,c
  7778   002FD8  A0D8               	btfss	status,0,c
  7779   002FDA  0635               	decf	(___fldiv@new_exp+1)^0,f,c
  7780   002FDC                     l4179:
  7781   002FDC  AE25               	btfss	(___fldiv@b+2)^0,7,c
  7782   002FDE  EFF3  F017         	goto	u3481
  7783   002FE2  EFF5  F017         	goto	u3480
  7784   002FE6                     u3481:
  7785   002FE6  EFD9  F017         	goto	l4173
  7786   002FEA                     u3480:
  7787   002FEA  0E00               	movlw	0
  7788   002FEC  6E3B               	movwf	___fldiv@aexp^0,c
  7789   002FEE  AE39               	btfss	(___fldiv@grs+3)^0,7,c
  7790   002FF0  EFFC  F017         	goto	u3491
  7791   002FF4  EFFE  F017         	goto	u3490
  7792   002FF8                     u3491:
  7793   002FF8  EF22  F018         	goto	l1374
  7794   002FFC                     u3490:
  7795   002FFC  0EFF               	movlw	255
  7796   002FFE  1436               	andwf	___fldiv@grs^0,w,c
  7797   003000  6E2B               	movwf	??___fldiv^0,c
  7798   003002  0EFF               	movlw	255
  7799   003004  1437               	andwf	(___fldiv@grs+1)^0,w,c
  7800   003006  6E2C               	movwf	(??___fldiv+1)^0,c
  7801   003008  0EFF               	movlw	255
  7802   00300A  1438               	andwf	(___fldiv@grs+2)^0,w,c
  7803   00300C  6E2D               	movwf	(??___fldiv+2)^0,c
  7804   00300E  0E7F               	movlw	127
  7805   003010  1439               	andwf	(___fldiv@grs+3)^0,w,c
  7806   003012  6E2E               	movwf	(??___fldiv+3)^0,c
  7807   003014  502B               	movf	??___fldiv^0,w,c
  7808   003016  102C               	iorwf	(??___fldiv+1)^0,w,c
  7809   003018  102D               	iorwf	(??___fldiv+2)^0,w,c
  7810   00301A  102E               	iorwf	(??___fldiv+3)^0,w,c
  7811   00301C  B4D8               	btfsc	status,2,c
  7812   00301E  EF13  F018         	goto	u3501
  7813   003022  EF15  F018         	goto	u3500
  7814   003026                     u3501:
  7815   003026  EF19  F018         	goto	l1375
  7816   00302A                     u3500:
  7817   00302A                     l4187:
  7818   00302A  0E01               	movlw	1
  7819   00302C  6E3B               	movwf	___fldiv@aexp^0,c
  7820   00302E  EF22  F018         	goto	l1374
  7821   003032                     l1375:
  7822   003032  A023               	btfss	___fldiv@b^0,0,c
  7823   003034  EF1E  F018         	goto	u3511
  7824   003038  EF20  F018         	goto	u3510
  7825   00303C                     u3511:
  7826   00303C  EF22  F018         	goto	l1374
  7827   003040                     u3510:
  7828   003040  EF15  F018         	goto	l4187
  7829   003044                     l1374:
  7830   003044  503B               	movf	___fldiv@aexp^0,w,c
  7831   003046  B4D8               	btfsc	status,2,c
  7832   003048  EF28  F018         	goto	u3521
  7833   00304C  EF2A  F018         	goto	u3520
  7834   003050                     u3521:
  7835   003050  EF4E  F018         	goto	l4199
  7836   003054                     u3520:
  7837   003054  0E01               	movlw	1
  7838   003056  2623               	addwf	___fldiv@b^0,f,c
  7839   003058  0E00               	movlw	0
  7840   00305A  2224               	addwfc	(___fldiv@b+1)^0,f,c
  7841   00305C  2225               	addwfc	(___fldiv@b+2)^0,f,c
  7842   00305E  2226               	addwfc	(___fldiv@b+3)^0,f,c
  7843   003060  A026               	btfss	(___fldiv@b+3)^0,0,c
  7844   003062  EF35  F018         	goto	u3531
  7845   003066  EF37  F018         	goto	u3530
  7846   00306A                     u3531:
  7847   00306A  EF4E  F018         	goto	l4199
  7848   00306E                     u3530:
  7849   00306E  C023  F02B         	movff	___fldiv@b,??___fldiv
  7850   003072  C024  F02C         	movff	___fldiv@b+1,??___fldiv+1
  7851   003076  C025  F02D         	movff	___fldiv@b+2,??___fldiv+2
  7852   00307A  C026  F02E         	movff	___fldiv@b+3,??___fldiv+3
  7853   00307E  342E               	rlcf	(??___fldiv+3)^0,w,c
  7854   003080  322E               	rrcf	(??___fldiv+3)^0,f,c
  7855   003082  322D               	rrcf	(??___fldiv+2)^0,f,c
  7856   003084  322C               	rrcf	(??___fldiv+1)^0,f,c
  7857   003086  322B               	rrcf	??___fldiv^0,f,c
  7858   003088  C02B  F023         	movff	??___fldiv,___fldiv@b
  7859   00308C  C02C  F024         	movff	??___fldiv+1,___fldiv@b+1
  7860   003090  C02D  F025         	movff	??___fldiv+2,___fldiv@b+2
  7861   003094  C02E  F026         	movff	??___fldiv+3,___fldiv@b+3
  7862   003098  4A34               	infsnz	___fldiv@new_exp^0,f,c
  7863   00309A  2A35               	incf	(___fldiv@new_exp+1)^0,f,c
  7864   00309C                     l4199:
  7865   00309C  BE35               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7866   00309E  EF59  F018         	goto	u3541
  7867   0030A2  5035               	movf	(___fldiv@new_exp+1)^0,w,c
  7868   0030A4  E108               	bnz	u3540
  7869   0030A6  2834               	incf	___fldiv@new_exp^0,w,c
  7870   0030A8  A0D8               	btfss	status,0,c
  7871   0030AA  EF59  F018         	goto	u3541
  7872   0030AE  EF5B  F018         	goto	u3540
  7873   0030B2                     u3541:
  7874   0030B2  EF66  F018         	goto	l4203
  7875   0030B6                     u3540:
  7876   0030B6  0E00               	movlw	0
  7877   0030B8  6E35               	movwf	(___fldiv@new_exp+1)^0,c
  7878   0030BA  6834               	setf	___fldiv@new_exp^0,c
  7879   0030BC  0E00               	movlw	0
  7880   0030BE  6E23               	movwf	___fldiv@b^0,c
  7881   0030C0  0E00               	movlw	0
  7882   0030C2  6E24               	movwf	(___fldiv@b+1)^0,c
  7883   0030C4  0E00               	movlw	0
  7884   0030C6  6E25               	movwf	(___fldiv@b+2)^0,c
  7885   0030C8  0E00               	movlw	0
  7886   0030CA  6E26               	movwf	(___fldiv@b+3)^0,c
  7887   0030CC                     l4203:
  7888   0030CC  BE35               	btfsc	(___fldiv@new_exp+1)^0,7,c
  7889   0030CE  EF73  F018         	goto	u3550
  7890   0030D2  5035               	movf	(___fldiv@new_exp+1)^0,w,c
  7891   0030D4  E106               	bnz	u3551
  7892   0030D6  0434               	decf	___fldiv@new_exp^0,w,c
  7893   0030D8  B0D8               	btfsc	status,0,c
  7894   0030DA  EF71  F018         	goto	u3551
  7895   0030DE  EF73  F018         	goto	u3550
  7896   0030E2                     u3551:
  7897   0030E2  EF81  F018         	goto	l4207
  7898   0030E6                     u3550:
  7899   0030E6  0E00               	movlw	0
  7900   0030E8  6E35               	movwf	(___fldiv@new_exp+1)^0,c
  7901   0030EA  0E00               	movlw	0
  7902   0030EC  6E34               	movwf	___fldiv@new_exp^0,c
  7903   0030EE  0E00               	movlw	0
  7904   0030F0  6E23               	movwf	___fldiv@b^0,c
  7905   0030F2  0E00               	movlw	0
  7906   0030F4  6E24               	movwf	(___fldiv@b+1)^0,c
  7907   0030F6  0E00               	movlw	0
  7908   0030F8  6E25               	movwf	(___fldiv@b+2)^0,c
  7909   0030FA  0E00               	movlw	0
  7910   0030FC  6E26               	movwf	(___fldiv@b+3)^0,c
  7911   0030FE  0E00               	movlw	0
  7912   003100  6E33               	movwf	___fldiv@sign^0,c
  7913   003102                     l4207:
  7914   003102  C034  F03A         	movff	___fldiv@new_exp,___fldiv@bexp
  7915   003106  A03A               	btfss	___fldiv@bexp^0,0,c
  7916   003108  EF88  F018         	goto	u3561
  7917   00310C  EF8A  F018         	goto	u3560
  7918   003110                     u3561:
  7919   003110  EF8D  F018         	goto	l4213
  7920   003114                     u3560:
  7921   003114  8E25               	bsf	(___fldiv@b+2)^0,7,c
  7922   003116  EF8E  F018         	goto	l4215
  7923   00311A                     l4213:
  7924   00311A  9E25               	bcf	(___fldiv@b+2)^0,7,c
  7925   00311C                     l4215:
  7926   00311C  90D8               	bcf	status,0,c
  7927   00311E  303A               	rrcf	___fldiv@bexp^0,w,c
  7928   003120  6E26               	movwf	(___fldiv@b+3)^0,c
  7929   003122  EF44  F017         	goto	l4129
  7930   003126                     l1361:
  7931   003126  0012               	return		;funcret
  7932   003128                     __end_of___fldiv:
  7933                           	callstack 0
  7934                           
  7935 ;; *************** function _AC_Volt_Up_to_5_selection *****************
  7936 ;; Defined at:
  7937 ;;		line 302 in file "main.c"
  7938 ;; Parameters:    Size  Location     Type
  7939 ;;		None
  7940 ;; Auto vars:     Size  Location     Type
  7941 ;;		None
  7942 ;; Return value:  Size  Location     Type
  7943 ;;                  1    wreg      void 
  7944 ;; Registers used:
  7945 ;;		None
  7946 ;; Tracked objects:
  7947 ;;		On entry : 0/0
  7948 ;;		On exit  : 0/0
  7949 ;;		Unchanged: 0/0
  7950 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7951 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7952 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7953 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7954 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7955 ;;Total ram usage:        0 bytes
  7956 ;; Hardware stack levels used: 1
  7957 ;; Hardware stack levels required when called: 4
  7958 ;; This function calls:
  7959 ;;		Nothing
  7960 ;; This function is called by:
  7961 ;;		_main
  7962 ;; This function uses a non-reentrant model
  7963 ;;
  7964                           
  7965                           	psect	text32
  7966   0044E8                     __ptext32:
  7967                           	callstack 0
  7968   0044E8                     _AC_Volt_Up_to_5_selection:
  7969                           	callstack 26
  7970   0044E8                     
  7971                           ;main.c: 304: LATAbits.LATA4=1;
  7972   0044E8  8889               	bsf	137,4,c	;volatile
  7973                           
  7974                           ;main.c: 305: LATAbits.LATA3=0;
  7975   0044EA  9689               	bcf	137,3,c	;volatile
  7976                           
  7977                           ;main.c: 306: LATAbits.LATA2=1;
  7978   0044EC  8489               	bsf	137,2,c	;volatile
  7979                           
  7980                           ;main.c: 307: LATAbits.LATA1=0;
  7981   0044EE  9289               	bcf	137,1,c	;volatile
  7982                           
  7983                           ;main.c: 308: LATAbits.LATA5=1;
  7984   0044F0  8A89               	bsf	137,5,c	;volatile
  7985                           
  7986                           ;main.c: 309: LATAbits.LATA6=0;
  7987   0044F2  9C89               	bcf	137,6,c	;volatile
  7988   0044F4  0012               	return		;funcret
  7989   0044F6                     __end_of_AC_Volt_Up_to_5_selection:
  7990                           	callstack 0
  7991                           
  7992 ;; *************** function _AC_Volt_Up_to_50_selection *****************
  7993 ;; Defined at:
  7994 ;;		line 311 in file "main.c"
  7995 ;; Parameters:    Size  Location     Type
  7996 ;;		None
  7997 ;; Auto vars:     Size  Location     Type
  7998 ;;		None
  7999 ;; Return value:  Size  Location     Type
  8000 ;;                  1    wreg      void 
  8001 ;; Registers used:
  8002 ;;		None
  8003 ;; Tracked objects:
  8004 ;;		On entry : 0/0
  8005 ;;		On exit  : 0/0
  8006 ;;		Unchanged: 0/0
  8007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8008 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8011 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8012 ;;Total ram usage:        0 bytes
  8013 ;; Hardware stack levels used: 1
  8014 ;; Hardware stack levels required when called: 4
  8015 ;; This function calls:
  8016 ;;		Nothing
  8017 ;; This function is called by:
  8018 ;;		_main
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text33
  8023   0044F6                     __ptext33:
  8024                           	callstack 0
  8025   0044F6                     _AC_Volt_Up_to_50_selection:
  8026                           	callstack 26
  8027   0044F6                     
  8028                           ;main.c: 313: LATAbits.LATA4=1;
  8029   0044F6  8889               	bsf	137,4,c	;volatile
  8030                           
  8031                           ;main.c: 314: LATAbits.LATA3=0;
  8032   0044F8  9689               	bcf	137,3,c	;volatile
  8033                           
  8034                           ;main.c: 315: LATAbits.LATA2=0;
  8035   0044FA  9489               	bcf	137,2,c	;volatile
  8036                           
  8037                           ;main.c: 316: LATAbits.LATA1=1;
  8038   0044FC  8289               	bsf	137,1,c	;volatile
  8039                           
  8040                           ;main.c: 317: LATAbits.LATA5=1;
  8041   0044FE  8A89               	bsf	137,5,c	;volatile
  8042                           
  8043                           ;main.c: 318: LATAbits.LATA6=0;
  8044   004500  9C89               	bcf	137,6,c	;volatile
  8045   004502  0012               	return		;funcret
  8046   004504                     __end_of_AC_Volt_Up_to_50_selection:
  8047                           	callstack 0
  8048                           
  8049 ;; *************** function _AC_Volt_Up_to_200_selection *****************
  8050 ;; Defined at:
  8051 ;;		line 320 in file "main.c"
  8052 ;; Parameters:    Size  Location     Type
  8053 ;;		None
  8054 ;; Auto vars:     Size  Location     Type
  8055 ;;		None
  8056 ;; Return value:  Size  Location     Type
  8057 ;;                  1    wreg      void 
  8058 ;; Registers used:
  8059 ;;		None
  8060 ;; Tracked objects:
  8061 ;;		On entry : 0/0
  8062 ;;		On exit  : 0/0
  8063 ;;		Unchanged: 0/0
  8064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8066 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8068 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8069 ;;Total ram usage:        0 bytes
  8070 ;; Hardware stack levels used: 1
  8071 ;; Hardware stack levels required when called: 4
  8072 ;; This function calls:
  8073 ;;		Nothing
  8074 ;; This function is called by:
  8075 ;;		_main
  8076 ;; This function uses a non-reentrant model
  8077 ;;
  8078                           
  8079                           	psect	text34
  8080   004504                     __ptext34:
  8081                           	callstack 0
  8082   004504                     _AC_Volt_Up_to_200_selection:
  8083                           	callstack 26
  8084   004504                     
  8085                           ;main.c: 322: LATAbits.LATA4=1;
  8086   004504  8889               	bsf	137,4,c	;volatile
  8087                           
  8088                           ;main.c: 323: LATAbits.LATA3=0;
  8089   004506  9689               	bcf	137,3,c	;volatile
  8090                           
  8091                           ;main.c: 324: LATAbits.LATA2=0;
  8092   004508  9489               	bcf	137,2,c	;volatile
  8093                           
  8094                           ;main.c: 325: LATAbits.LATA1=0;
  8095   00450A  9289               	bcf	137,1,c	;volatile
  8096                           
  8097                           ;main.c: 326: LATAbits.LATA5=1;
  8098   00450C  8A89               	bsf	137,5,c	;volatile
  8099                           
  8100                           ;main.c: 327: LATAbits.LATA6=0;
  8101   00450E  9C89               	bcf	137,6,c	;volatile
  8102   004510  0012               	return		;funcret
  8103   004512                     __end_of_AC_Volt_Up_to_200_selection:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _AC_Current_selection *****************
  8107 ;; Defined at:
  8108 ;;		line 337 in file "main.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;		None
  8111 ;; Auto vars:     Size  Location     Type
  8112 ;;		None
  8113 ;; Return value:  Size  Location     Type
  8114 ;;                  1    wreg      void 
  8115 ;; Registers used:
  8116 ;;		None
  8117 ;; Tracked objects:
  8118 ;;		On entry : 0/0
  8119 ;;		On exit  : 0/0
  8120 ;;		Unchanged: 0/0
  8121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8126 ;;Total ram usage:        0 bytes
  8127 ;; Hardware stack levels used: 1
  8128 ;; Hardware stack levels required when called: 4
  8129 ;; This function calls:
  8130 ;;		Nothing
  8131 ;; This function is called by:
  8132 ;;		_main
  8133 ;; This function uses a non-reentrant model
  8134 ;;
  8135                           
  8136                           	psect	text35
  8137   004536                     __ptext35:
  8138                           	callstack 0
  8139   004536                     _AC_Current_selection:
  8140                           	callstack 26
  8141   004536                     
  8142                           ;main.c: 339: LATAbits.LATA4=1;
  8143   004536  8889               	bsf	137,4,c	;volatile
  8144                           
  8145                           ;main.c: 340: LATAbits.LATA3=0;
  8146   004538  9689               	bcf	137,3,c	;volatile
  8147                           
  8148                           ;main.c: 341: LATAbits.LATA5=1;
  8149   00453A  8A89               	bsf	137,5,c	;volatile
  8150                           
  8151                           ;main.c: 342: LATAbits.LATA6=1;
  8152   00453C  8C89               	bsf	137,6,c	;volatile
  8153                           
  8154                           ;main.c: 343: LATAbits.LATA5=1;
  8155   00453E  8A89               	bsf	137,5,c	;volatile
  8156   004540  0012               	return		;funcret
  8157   004542                     __end_of_AC_Current_selection:
  8158                           	callstack 0
  8159                           
  8160 ;; *************** function _interrupt_low *****************
  8161 ;; Defined at:
  8162 ;;		line 79 in file "MCAL_layer/interrupt/interrupt_manager.c"
  8163 ;; Parameters:    Size  Location     Type
  8164 ;;		None
  8165 ;; Auto vars:     Size  Location     Type
  8166 ;;		None
  8167 ;; Return value:  Size  Location     Type
  8168 ;;                  1    wreg      void 
  8169 ;; Registers used:
  8170 ;;		cstack
  8171 ;; Tracked objects:
  8172 ;;		On entry : 0/0
  8173 ;;		On exit  : 0/0
  8174 ;;		Unchanged: 0/0
  8175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8178 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8179 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8180 ;;Total ram usage:        1 bytes
  8181 ;; Hardware stack levels used: 1
  8182 ;; Hardware stack levels required when called: 3
  8183 ;; This function calls:
  8184 ;;		_INT1_ISR
  8185 ;;		_INT2_ISR
  8186 ;; This function is called by:
  8187 ;;		Interrupt level 1
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	intcodelo
  8192   000018                     __pintcodelo:
  8193                           	callstack 0
  8194   000018                     _interrupt_low:
  8195                           	callstack 21
  8196                           
  8197                           ;incstack = 0
  8198   000018  807E               	bsf	int$flags,0,c	;set compiler interrupt flag (level 1)
  8199   00001A  CFE0 F001          	movff	bsr,??_interrupt_low
  8200   00001E                     
  8201                           ;MCAL_layer/interrupt/interrupt_manager.c: 81:     if((1==INTCON3bits.INT2E)&&(1==INTCON
      +                          3bits.INT2F))
  8202   00001E  A8F0               	btfss	240,4,c	;volatile
  8203   000020  EF14  F000         	goto	i1u491_21
  8204   000024  EF16  F000         	goto	i1u491_20
  8205   000028                     i1u491_21:
  8206   000028  EF1F  F000         	goto	i1l650
  8207   00002C                     i1u491_20:
  8208   00002C  A2F0               	btfss	240,1,c	;volatile
  8209   00002E  EF1B  F000         	goto	i1u492_21
  8210   000032  EF1D  F000         	goto	i1u492_20
  8211   000036                     i1u492_21:
  8212   000036  EF1F  F000         	goto	i1l650
  8213   00003A                     i1u492_20:
  8214   00003A                     
  8215                           ;MCAL_layer/interrupt/interrupt_manager.c: 82:         {INT2_ISR();}
  8216   00003A  ECB0  F022         	call	_INT2_ISR	;wreg free
  8217   00003E                     i1l650:
  8218                           
  8219                           ;MCAL_layer/interrupt/interrupt_manager.c: 84:     if((1==INTCON3bits.INT1E)&&(1==INTCON
      +                          3bits.INT1F))
  8220   00003E  A6F0               	btfss	240,3,c	;volatile
  8221   000040  EF24  F000         	goto	i1u493_21
  8222   000044  EF26  F000         	goto	i1u493_20
  8223   000048                     i1u493_21:
  8224   000048  EF2F  F000         	goto	i1l653
  8225   00004C                     i1u493_20:
  8226   00004C  A0F0               	btfss	240,0,c	;volatile
  8227   00004E  EF2B  F000         	goto	i1u494_21
  8228   000052  EF2D  F000         	goto	i1u494_20
  8229   000056                     i1u494_21:
  8230   000056  EF2F  F000         	goto	i1l653
  8231   00005A                     i1u494_20:
  8232   00005A                     
  8233                           ;MCAL_layer/interrupt/interrupt_manager.c: 85:         {;MCAL_layer/interrupt/interrupt_
      +                          manager.c: 86:         INT1_ISR();}
  8234   00005A  ECB2  F022         	call	_INT1_ISR	;wreg free
  8235   00005E                     i1l653:
  8236   00005E  C001  FFE0         	movff	??_interrupt_low,bsr
  8237   000062  907E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  8238   000064  0010               	retfie	
  8239   000066                     __end_of_interrupt_low:
  8240                           	callstack 0
  8241                           
  8242 ;; *************** function _INT2_ISR *****************
  8243 ;; Defined at:
  8244 ;;		line 384 in file "MCAL_layer/interrupt/external_interrupt.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;		None
  8247 ;; Auto vars:     Size  Location     Type
  8248 ;;  ret             1    0        unsigned char 
  8249 ;; Return value:  Size  Location     Type
  8250 ;;                  1    wreg      void 
  8251 ;; Registers used:
  8252 ;;		None
  8253 ;; Tracked objects:
  8254 ;;		On entry : 0/0
  8255 ;;		On exit  : 0/0
  8256 ;;		Unchanged: 0/0
  8257 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8258 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8259 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8260 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8261 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8262 ;;Total ram usage:        0 bytes
  8263 ;; Hardware stack levels used: 1
  8264 ;; Hardware stack levels required when called: 2
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_interrupt_low
  8269 ;; This function uses a non-reentrant model
  8270 ;;
  8271                           
  8272                           	psect	text37
  8273   004560                     __ptext37:
  8274                           	callstack 0
  8275   004560                     _INT2_ISR:
  8276                           	callstack 21
  8277   004560  92F0               	bcf	240,1,c	;volatile
  8278   004562  0012               	return		;funcret
  8279   004564                     __end_of_INT2_ISR:
  8280                           	callstack 0
  8281                           
  8282 ;; *************** function _INT1_ISR *****************
  8283 ;; Defined at:
  8284 ;;		line 374 in file "MCAL_layer/interrupt/external_interrupt.c"
  8285 ;; Parameters:    Size  Location     Type
  8286 ;;		None
  8287 ;; Auto vars:     Size  Location     Type
  8288 ;;  ret             1    0        unsigned char 
  8289 ;; Return value:  Size  Location     Type
  8290 ;;                  1    wreg      void 
  8291 ;; Registers used:
  8292 ;;		None
  8293 ;; Tracked objects:
  8294 ;;		On entry : 0/0
  8295 ;;		On exit  : 0/0
  8296 ;;		Unchanged: 0/0
  8297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8299 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8301 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8302 ;;Total ram usage:        0 bytes
  8303 ;; Hardware stack levels used: 1
  8304 ;; Hardware stack levels required when called: 2
  8305 ;; This function calls:
  8306 ;;		Nothing
  8307 ;; This function is called by:
  8308 ;;		_interrupt_low
  8309 ;; This function uses a non-reentrant model
  8310 ;;
  8311                           
  8312                           	psect	text38
  8313   004564                     __ptext38:
  8314                           	callstack 0
  8315   004564                     _INT1_ISR:
  8316                           	callstack 21
  8317   004564  90F0               	bcf	240,0,c	;volatile
  8318   004566  0012               	return		;funcret
  8319   004568                     __end_of_INT1_ISR:
  8320                           	callstack 0
  8321                           
  8322 ;; *************** function _interrupt_high *****************
  8323 ;; Defined at:
  8324 ;;		line 11 in file "MCAL_layer/interrupt/interrupt_manager.c"
  8325 ;; Parameters:    Size  Location     Type
  8326 ;;		None
  8327 ;; Auto vars:     Size  Location     Type
  8328 ;;		None
  8329 ;; Return value:  Size  Location     Type
  8330 ;;                  1    wreg      void 
  8331 ;; Registers used:
  8332 ;;		wreg, status,2, status,0, cstack
  8333 ;; Tracked objects:
  8334 ;;		On entry : 0/0
  8335 ;;		On exit  : 0/0
  8336 ;;		Unchanged: 0/0
  8337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8342 ;;Total ram usage:        0 bytes
  8343 ;; Hardware stack levels used: 1
  8344 ;; Hardware stack levels required when called: 1
  8345 ;; This function calls:
  8346 ;;		_INT0_ISR
  8347 ;;		_RB4_ISR
  8348 ;;		_RB4_ISR2
  8349 ;;		_RB5_ISR
  8350 ;;		_RB5_ISR2
  8351 ;;		_RB6_ISR
  8352 ;;		_RB6_ISR2
  8353 ;;		_RB7_ISR
  8354 ;;		_RB7_ISR2
  8355 ;;		_adc_isr
  8356 ;; This function is called by:
  8357 ;;		Interrupt level 2
  8358 ;; This function uses a non-reentrant model
  8359 ;;
  8360                           
  8361                           	psect	intcode
  8362   000008                     __pintcode:
  8363                           	callstack 0
  8364   000008                     _interrupt_high:
  8365                           	callstack 21
  8366                           
  8367                           ;incstack = 0
  8368   000008  827E               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  8369   00000A  ED94  F018         	call	int_func,f	;refresh shadow registers
  8370                           
  8371                           	psect	intcode_body
  8372   003128                     __pintcode_body:
  8373                           	callstack 21
  8374   003128                     int_func:
  8375                           	callstack 21
  8376   003128  0006               	pop		; remove dummy address from shadow register refresh
  8377   00312A                     
  8378                           ;MCAL_layer/interrupt/interrupt_manager.c: 14:     if((1==INTCONbits.INT0IE)&&(1==INTCON
      +                          bits.INT0IF))
  8379   00312A  A8F2               	btfss	242,4,c	;volatile
  8380   00312C  EF9A  F018         	goto	i2u455_41
  8381   003130  EF9C  F018         	goto	i2u455_40
  8382   003134                     i2u455_41:
  8383   003134  EFA5  F018         	goto	i2l627
  8384   003138                     i2u455_40:
  8385   003138  A2F2               	btfss	242,1,c	;volatile
  8386   00313A  EFA1  F018         	goto	i2u456_41
  8387   00313E  EFA3  F018         	goto	i2u456_40
  8388   003142                     i2u456_41:
  8389   003142  EFA5  F018         	goto	i2l627
  8390   003146                     i2u456_40:
  8391   003146                     
  8392                           ;MCAL_layer/interrupt/interrupt_manager.c: 15:         {INT0_ISR();}
  8393   003146  ECC6  F022         	call	_INT0_ISR	;wreg free
  8394   00314A                     i2l627:
  8395                           
  8396                           ;MCAL_layer/interrupt/interrupt_manager.c: 18:     if((PORTBbits.KBI0==1)&&(1==INTCONbit
      +                          s.RBIE)
  8397   00314A  A881               	btfss	129,4,c	;volatile
  8398   00314C  EFAA  F018         	goto	i2u457_41
  8399   003150  EFAC  F018         	goto	i2u457_40
  8400   003154                     i2u457_41:
  8401   003154  EFC6  F018         	goto	i2l629
  8402   003158                     i2u457_40:
  8403   003158  A6F2               	btfss	242,3,c	;volatile
  8404   00315A  EFB1  F018         	goto	i2u458_41
  8405   00315E  EFB3  F018         	goto	i2u458_40
  8406   003162                     i2u458_41:
  8407   003162  EFC6  F018         	goto	i2l629
  8408   003166                     i2u458_40:
  8409   003166  A0F2               	btfss	242,0,c	;volatile
  8410   003168  EFB8  F018         	goto	i2u459_41
  8411   00316C  EFBA  F018         	goto	i2u459_40
  8412   003170                     i2u459_41:
  8413   003170  EFC6  F018         	goto	i2l629
  8414   003174                     i2u459_40:
  8415   003174  047D               	decf	_flag_4^0,w,c	;volatile
  8416   003176  A4D8               	btfss	status,2,c
  8417   003178  EFC0  F018         	goto	i2u460_41
  8418   00317C  EFC2  F018         	goto	i2u460_40
  8419   003180                     i2u460_41:
  8420   003180  EFC6  F018         	goto	i2l629
  8421   003184                     i2u460_40:
  8422   003184                     
  8423                           ;MCAL_layer/interrupt/interrupt_manager.c: 20:         {RB4_ISR();
  8424   003184  ECC4  F022         	call	_RB4_ISR	;wreg free
  8425   003188                     
  8426                           ;MCAL_layer/interrupt/interrupt_manager.c: 21:          flag_4=0;
  8427   003188  0E00               	movlw	0
  8428   00318A  6E7D               	movwf	_flag_4^0,c	;volatile
  8429   00318C                     i2l629:
  8430                           
  8431                           ;MCAL_layer/interrupt/interrupt_manager.c: 24:    if((PORTBbits.KBI0==0)&&(1==INTCONbits
      +                          .RBIE)
  8432   00318C  B881               	btfsc	129,4,c	;volatile
  8433   00318E  EFCB  F018         	goto	i2u461_41
  8434   003192  EFCD  F018         	goto	i2u461_40
  8435   003196                     i2u461_41:
  8436   003196  EFE7  F018         	goto	i2l5145
  8437   00319A                     i2u461_40:
  8438   00319A  A6F2               	btfss	242,3,c	;volatile
  8439   00319C  EFD2  F018         	goto	i2u462_41
  8440   0031A0  EFD4  F018         	goto	i2u462_40
  8441   0031A4                     i2u462_41:
  8442   0031A4  EFE7  F018         	goto	i2l5145
  8443   0031A8                     i2u462_40:
  8444   0031A8  A0F2               	btfss	242,0,c	;volatile
  8445   0031AA  EFD9  F018         	goto	i2u463_41
  8446   0031AE  EFDB  F018         	goto	i2u463_40
  8447   0031B2                     i2u463_41:
  8448   0031B2  EFE7  F018         	goto	i2l5145
  8449   0031B6                     i2u463_40:
  8450   0031B6  507D               	movf	_flag_4^0,w,c	;volatile
  8451   0031B8  A4D8               	btfss	status,2,c
  8452   0031BA  EFE1  F018         	goto	i2u464_41
  8453   0031BE  EFE3  F018         	goto	i2u464_40
  8454   0031C2                     i2u464_41:
  8455   0031C2  EFE7  F018         	goto	i2l5145
  8456   0031C6                     i2u464_40:
  8457   0031C6                     
  8458                           ;MCAL_layer/interrupt/interrupt_manager.c: 26:         {RB4_ISR2();
  8459   0031C6  ECC2  F022         	call	_RB4_ISR2	;wreg free
  8460   0031CA                     
  8461                           ;MCAL_layer/interrupt/interrupt_manager.c: 27:         flag_4=1;
  8462   0031CA  0E01               	movlw	1
  8463   0031CC  6E7D               	movwf	_flag_4^0,c	;volatile
  8464   0031CE                     i2l5145:
  8465                           
  8466                           ;MCAL_layer/interrupt/interrupt_manager.c: 30:      if((PORTBbits.KBI1==1)&&(1==INTCONbi
      +                          ts.RBIE)
  8467   0031CE  AA81               	btfss	129,5,c	;volatile
  8468   0031D0  EFEC  F018         	goto	i2u465_41
  8469   0031D4  EFEE  F018         	goto	i2u465_40
  8470   0031D8                     i2u465_41:
  8471   0031D8  EF08  F019         	goto	i2l632
  8472   0031DC                     i2u465_40:
  8473   0031DC  A6F2               	btfss	242,3,c	;volatile
  8474   0031DE  EFF3  F018         	goto	i2u466_41
  8475   0031E2  EFF5  F018         	goto	i2u466_40
  8476   0031E6                     i2u466_41:
  8477   0031E6  EF08  F019         	goto	i2l632
  8478   0031EA                     i2u466_40:
  8479   0031EA  A0F2               	btfss	242,0,c	;volatile
  8480   0031EC  EFFA  F018         	goto	i2u467_41
  8481   0031F0  EFFC  F018         	goto	i2u467_40
  8482   0031F4                     i2u467_41:
  8483   0031F4  EF08  F019         	goto	i2l632
  8484   0031F8                     i2u467_40:
  8485   0031F8  047C               	decf	_flag_5^0,w,c	;volatile
  8486   0031FA  A4D8               	btfss	status,2,c
  8487   0031FC  EF02  F019         	goto	i2u468_41
  8488   003200  EF04  F019         	goto	i2u468_40
  8489   003204                     i2u468_41:
  8490   003204  EF08  F019         	goto	i2l632
  8491   003208                     i2u468_40:
  8492   003208                     
  8493                           ;MCAL_layer/interrupt/interrupt_manager.c: 32:         {RB5_ISR();
  8494   003208  ECC0  F022         	call	_RB5_ISR	;wreg free
  8495   00320C                     
  8496                           ;MCAL_layer/interrupt/interrupt_manager.c: 33:          flag_5=0;
  8497   00320C  0E00               	movlw	0
  8498   00320E  6E7C               	movwf	_flag_5^0,c	;volatile
  8499   003210                     i2l632:
  8500                           
  8501                           ;MCAL_layer/interrupt/interrupt_manager.c: 36:    if((PORTBbits.KBI1==0)&&(1==INTCONbits
      +                          .RBIE)
  8502   003210  BA81               	btfsc	129,5,c	;volatile
  8503   003212  EF0D  F019         	goto	i2u469_41
  8504   003216  EF0F  F019         	goto	i2u469_40
  8505   00321A                     i2u469_41:
  8506   00321A  EF29  F019         	goto	i2l634
  8507   00321E                     i2u469_40:
  8508   00321E  A6F2               	btfss	242,3,c	;volatile
  8509   003220  EF14  F019         	goto	i2u470_41
  8510   003224  EF16  F019         	goto	i2u470_40
  8511   003228                     i2u470_41:
  8512   003228  EF29  F019         	goto	i2l634
  8513   00322C                     i2u470_40:
  8514   00322C  A0F2               	btfss	242,0,c	;volatile
  8515   00322E  EF1B  F019         	goto	i2u471_41
  8516   003232  EF1D  F019         	goto	i2u471_40
  8517   003236                     i2u471_41:
  8518   003236  EF29  F019         	goto	i2l634
  8519   00323A                     i2u471_40:
  8520   00323A  507C               	movf	_flag_5^0,w,c	;volatile
  8521   00323C  A4D8               	btfss	status,2,c
  8522   00323E  EF23  F019         	goto	i2u472_41
  8523   003242  EF25  F019         	goto	i2u472_40
  8524   003246                     i2u472_41:
  8525   003246  EF29  F019         	goto	i2l634
  8526   00324A                     i2u472_40:
  8527   00324A                     
  8528                           ;MCAL_layer/interrupt/interrupt_manager.c: 38:         {RB5_ISR2();
  8529   00324A  ECBE  F022         	call	_RB5_ISR2	;wreg free
  8530   00324E                     
  8531                           ;MCAL_layer/interrupt/interrupt_manager.c: 39:         flag_5=1;
  8532   00324E  0E01               	movlw	1
  8533   003250  6E7C               	movwf	_flag_5^0,c	;volatile
  8534   003252                     i2l634:
  8535                           
  8536                           ;MCAL_layer/interrupt/interrupt_manager.c: 43:       if((PORTBbits.KBI2==1)&&(1==INTCONb
      +                          its.RBIE)
  8537   003252  AC81               	btfss	129,6,c	;volatile
  8538   003254  EF2E  F019         	goto	i2u473_41
  8539   003258  EF30  F019         	goto	i2u473_40
  8540   00325C                     i2u473_41:
  8541   00325C  EF4A  F019         	goto	i2l636
  8542   003260                     i2u473_40:
  8543   003260  A6F2               	btfss	242,3,c	;volatile
  8544   003262  EF35  F019         	goto	i2u474_41
  8545   003266  EF37  F019         	goto	i2u474_40
  8546   00326A                     i2u474_41:
  8547   00326A  EF4A  F019         	goto	i2l636
  8548   00326E                     i2u474_40:
  8549   00326E  A0F2               	btfss	242,0,c	;volatile
  8550   003270  EF3C  F019         	goto	i2u475_41
  8551   003274  EF3E  F019         	goto	i2u475_40
  8552   003278                     i2u475_41:
  8553   003278  EF4A  F019         	goto	i2l636
  8554   00327C                     i2u475_40:
  8555   00327C  047B               	decf	_flag_6^0,w,c	;volatile
  8556   00327E  A4D8               	btfss	status,2,c
  8557   003280  EF44  F019         	goto	i2u476_41
  8558   003284  EF46  F019         	goto	i2u476_40
  8559   003288                     i2u476_41:
  8560   003288  EF4A  F019         	goto	i2l636
  8561   00328C                     i2u476_40:
  8562   00328C                     
  8563                           ;MCAL_layer/interrupt/interrupt_manager.c: 45:         {RB6_ISR();
  8564   00328C  ECBC  F022         	call	_RB6_ISR	;wreg free
  8565   003290                     
  8566                           ;MCAL_layer/interrupt/interrupt_manager.c: 46:          flag_6=0;
  8567   003290  0E00               	movlw	0
  8568   003292  6E7B               	movwf	_flag_6^0,c	;volatile
  8569   003294                     i2l636:
  8570                           
  8571                           ;MCAL_layer/interrupt/interrupt_manager.c: 49:    if((PORTBbits.KBI2==0)&&(1==INTCONbits
      +                          .RBIE)
  8572   003294  BC81               	btfsc	129,6,c	;volatile
  8573   003296  EF4F  F019         	goto	i2u477_41
  8574   00329A  EF51  F019         	goto	i2u477_40
  8575   00329E                     i2u477_41:
  8576   00329E  EF6B  F019         	goto	i2l5187
  8577   0032A2                     i2u477_40:
  8578   0032A2  A6F2               	btfss	242,3,c	;volatile
  8579   0032A4  EF56  F019         	goto	i2u478_41
  8580   0032A8  EF58  F019         	goto	i2u478_40
  8581   0032AC                     i2u478_41:
  8582   0032AC  EF6B  F019         	goto	i2l5187
  8583   0032B0                     i2u478_40:
  8584   0032B0  A0F2               	btfss	242,0,c	;volatile
  8585   0032B2  EF5D  F019         	goto	i2u479_41
  8586   0032B6  EF5F  F019         	goto	i2u479_40
  8587   0032BA                     i2u479_41:
  8588   0032BA  EF6B  F019         	goto	i2l5187
  8589   0032BE                     i2u479_40:
  8590   0032BE  507B               	movf	_flag_6^0,w,c	;volatile
  8591   0032C0  A4D8               	btfss	status,2,c
  8592   0032C2  EF65  F019         	goto	i2u480_41
  8593   0032C6  EF67  F019         	goto	i2u480_40
  8594   0032CA                     i2u480_41:
  8595   0032CA  EF6B  F019         	goto	i2l5187
  8596   0032CE                     i2u480_40:
  8597   0032CE                     
  8598                           ;MCAL_layer/interrupt/interrupt_manager.c: 51:         {RB6_ISR2();
  8599   0032CE  ECBA  F022         	call	_RB6_ISR2	;wreg free
  8600   0032D2                     
  8601                           ;MCAL_layer/interrupt/interrupt_manager.c: 52:         flag_6=1;
  8602   0032D2  0E01               	movlw	1
  8603   0032D4  6E7B               	movwf	_flag_6^0,c	;volatile
  8604   0032D6                     i2l5187:
  8605                           
  8606                           ;MCAL_layer/interrupt/interrupt_manager.c: 55:      if((PORTBbits.KBI3==1)&&(1==INTCONbi
      +                          ts.RBIE)
  8607   0032D6  AE81               	btfss	129,7,c	;volatile
  8608   0032D8  EF70  F019         	goto	i2u481_41
  8609   0032DC  EF72  F019         	goto	i2u481_40
  8610   0032E0                     i2u481_41:
  8611   0032E0  EF8C  F019         	goto	i2l639
  8612   0032E4                     i2u481_40:
  8613   0032E4  A6F2               	btfss	242,3,c	;volatile
  8614   0032E6  EF77  F019         	goto	i2u482_41
  8615   0032EA  EF79  F019         	goto	i2u482_40
  8616   0032EE                     i2u482_41:
  8617   0032EE  EF8C  F019         	goto	i2l639
  8618   0032F2                     i2u482_40:
  8619   0032F2  A0F2               	btfss	242,0,c	;volatile
  8620   0032F4  EF7E  F019         	goto	i2u483_41
  8621   0032F8  EF80  F019         	goto	i2u483_40
  8622   0032FC                     i2u483_41:
  8623   0032FC  EF8C  F019         	goto	i2l639
  8624   003300                     i2u483_40:
  8625   003300  047A               	decf	_flag_7^0,w,c	;volatile
  8626   003302  A4D8               	btfss	status,2,c
  8627   003304  EF86  F019         	goto	i2u484_41
  8628   003308  EF88  F019         	goto	i2u484_40
  8629   00330C                     i2u484_41:
  8630   00330C  EF8C  F019         	goto	i2l639
  8631   003310                     i2u484_40:
  8632   003310                     
  8633                           ;MCAL_layer/interrupt/interrupt_manager.c: 57:         {RB7_ISR();
  8634   003310  ECB8  F022         	call	_RB7_ISR	;wreg free
  8635   003314                     
  8636                           ;MCAL_layer/interrupt/interrupt_manager.c: 58:          flag_7=0;
  8637   003314  0E00               	movlw	0
  8638   003316  6E7A               	movwf	_flag_7^0,c	;volatile
  8639   003318                     i2l639:
  8640                           
  8641                           ;MCAL_layer/interrupt/interrupt_manager.c: 61:    if((PORTBbits.KBI3==0)&&(1==INTCONbits
      +                          .RBIE)
  8642   003318  BE81               	btfsc	129,7,c	;volatile
  8643   00331A  EF91  F019         	goto	i2u485_41
  8644   00331E  EF93  F019         	goto	i2u485_40
  8645   003322                     i2u485_41:
  8646   003322  EFAD  F019         	goto	i2l641
  8647   003326                     i2u485_40:
  8648   003326  A6F2               	btfss	242,3,c	;volatile
  8649   003328  EF98  F019         	goto	i2u486_41
  8650   00332C  EF9A  F019         	goto	i2u486_40
  8651   003330                     i2u486_41:
  8652   003330  EFAD  F019         	goto	i2l641
  8653   003334                     i2u486_40:
  8654   003334  A0F2               	btfss	242,0,c	;volatile
  8655   003336  EF9F  F019         	goto	i2u487_41
  8656   00333A  EFA1  F019         	goto	i2u487_40
  8657   00333E                     i2u487_41:
  8658   00333E  EFAD  F019         	goto	i2l641
  8659   003342                     i2u487_40:
  8660   003342  507A               	movf	_flag_7^0,w,c	;volatile
  8661   003344  A4D8               	btfss	status,2,c
  8662   003346  EFA7  F019         	goto	i2u488_41
  8663   00334A  EFA9  F019         	goto	i2u488_40
  8664   00334E                     i2u488_41:
  8665   00334E  EFAD  F019         	goto	i2l641
  8666   003352                     i2u488_40:
  8667   003352                     
  8668                           ;MCAL_layer/interrupt/interrupt_manager.c: 63:         {RB7_ISR2();
  8669   003352  ECB6  F022         	call	_RB7_ISR2	;wreg free
  8670   003356                     
  8671                           ;MCAL_layer/interrupt/interrupt_manager.c: 64:         flag_7=1;
  8672   003356  0E01               	movlw	1
  8673   003358  6E7A               	movwf	_flag_7^0,c	;volatile
  8674   00335A                     i2l641:
  8675                           
  8676                           ;MCAL_layer/interrupt/interrupt_manager.c: 68:     if((1==PIE1bits.ADIE)&&(1==PIR1bits.A
      +                          DIF))
  8677   00335A  AC9D               	btfss	157,6,c	;volatile
  8678   00335C  EFB2  F019         	goto	i2u489_41
  8679   003360  EFB4  F019         	goto	i2u489_40
  8680   003364                     i2u489_41:
  8681   003364  EFBD  F019         	goto	i2l644
  8682   003368                     i2u489_40:
  8683   003368  AC9E               	btfss	158,6,c	;volatile
  8684   00336A  EFB9  F019         	goto	i2u490_41
  8685   00336E  EFBB  F019         	goto	i2u490_40
  8686   003372                     i2u490_41:
  8687   003372  EFBD  F019         	goto	i2l644
  8688   003376                     i2u490_40:
  8689   003376                     
  8690                           ;MCAL_layer/interrupt/interrupt_manager.c: 69:         {adc_isr();}
  8691   003376  ECB4  F022         	call	_adc_isr	;wreg free
  8692   00337A                     i2l644:
  8693   00337A  927E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  8694   00337C  0011               	retfie		f
  8695   00337E                     __end_of_interrupt_high:
  8696                           	callstack 0
  8697                           
  8698 ;; *************** function _adc_isr *****************
  8699 ;; Defined at:
  8700 ;;		line 213 in file "MCAL_layer/adc/adc.c"
  8701 ;; Parameters:    Size  Location     Type
  8702 ;;		None
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;		None
  8705 ;; Return value:  Size  Location     Type
  8706 ;;                  1    wreg      void 
  8707 ;; Registers used:
  8708 ;;		None
  8709 ;; Tracked objects:
  8710 ;;		On entry : 0/0
  8711 ;;		On exit  : 0/0
  8712 ;;		Unchanged: 0/0
  8713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8716 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8717 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8718 ;;Total ram usage:        0 bytes
  8719 ;; Hardware stack levels used: 1
  8720 ;; This function calls:
  8721 ;;		Nothing
  8722 ;; This function is called by:
  8723 ;;		_interrupt_high
  8724 ;; This function uses a non-reentrant model
  8725 ;;
  8726                           
  8727                           	psect	text40
  8728   004568                     __ptext40:
  8729                           	callstack 0
  8730   004568                     _adc_isr:
  8731                           	callstack 21
  8732   004568                     
  8733                           ;MCAL_layer/adc/adc.c: 215:     (PIR1bits.ADIF=0);
  8734   004568  9C9E               	bcf	158,6,c	;volatile
  8735   00456A  0012               	return		;funcret
  8736   00456C                     __end_of_adc_isr:
  8737                           	callstack 0
  8738                           
  8739 ;; *************** function _RB7_ISR2 *****************
  8740 ;; Defined at:
  8741 ;;		line 484 in file "MCAL_layer/interrupt/external_interrupt.c"
  8742 ;; Parameters:    Size  Location     Type
  8743 ;;		None
  8744 ;; Auto vars:     Size  Location     Type
  8745 ;;		None
  8746 ;; Return value:  Size  Location     Type
  8747 ;;                  1    wreg      void 
  8748 ;; Registers used:
  8749 ;;		None
  8750 ;; Tracked objects:
  8751 ;;		On entry : 0/0
  8752 ;;		On exit  : 0/0
  8753 ;;		Unchanged: 0/0
  8754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8759 ;;Total ram usage:        0 bytes
  8760 ;; Hardware stack levels used: 1
  8761 ;; This function calls:
  8762 ;;		Nothing
  8763 ;; This function is called by:
  8764 ;;		_interrupt_high
  8765 ;; This function uses a non-reentrant model
  8766 ;;
  8767                           
  8768                           	psect	text41
  8769   00456C                     __ptext41:
  8770                           	callstack 0
  8771   00456C                     _RB7_ISR2:
  8772                           	callstack 21
  8773   00456C                     
  8774                           ;MCAL_layer/interrupt/external_interrupt.c: 486:     (INTCONbits.RBIF=0);
  8775   00456C  90F2               	bcf	242,0,c	;volatile
  8776   00456E  0012               	return		;funcret
  8777   004570                     __end_of_RB7_ISR2:
  8778                           	callstack 0
  8779                           
  8780 ;; *************** function _RB7_ISR *****************
  8781 ;; Defined at:
  8782 ;;		line 472 in file "MCAL_layer/interrupt/external_interrupt.c"
  8783 ;; Parameters:    Size  Location     Type
  8784 ;;		None
  8785 ;; Auto vars:     Size  Location     Type
  8786 ;;		None
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		None
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8797 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8799 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8800 ;;Total ram usage:        0 bytes
  8801 ;; Hardware stack levels used: 1
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		_interrupt_high
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           	psect	text42
  8810   004570                     __ptext42:
  8811                           	callstack 0
  8812   004570                     _RB7_ISR:
  8813                           	callstack 21
  8814   004570                     
  8815                           ;MCAL_layer/interrupt/external_interrupt.c: 474:     (INTCONbits.RBIF=0);
  8816   004570  90F2               	bcf	242,0,c	;volatile
  8817   004572  0012               	return		;funcret
  8818   004574                     __end_of_RB7_ISR:
  8819                           	callstack 0
  8820                           
  8821 ;; *************** function _RB6_ISR2 *****************
  8822 ;; Defined at:
  8823 ;;		line 458 in file "MCAL_layer/interrupt/external_interrupt.c"
  8824 ;; Parameters:    Size  Location     Type
  8825 ;;		None
  8826 ;; Auto vars:     Size  Location     Type
  8827 ;;		None
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      void 
  8830 ;; Registers used:
  8831 ;;		None
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8841 ;;Total ram usage:        0 bytes
  8842 ;; Hardware stack levels used: 1
  8843 ;; This function calls:
  8844 ;;		Nothing
  8845 ;; This function is called by:
  8846 ;;		_interrupt_high
  8847 ;; This function uses a non-reentrant model
  8848 ;;
  8849                           
  8850                           	psect	text43
  8851   004574                     __ptext43:
  8852                           	callstack 0
  8853   004574                     _RB6_ISR2:
  8854                           	callstack 21
  8855   004574                     
  8856                           ;MCAL_layer/interrupt/external_interrupt.c: 460:     (INTCONbits.RBIF=0);
  8857   004574  90F2               	bcf	242,0,c	;volatile
  8858   004576  0012               	return		;funcret
  8859   004578                     __end_of_RB6_ISR2:
  8860                           	callstack 0
  8861                           
  8862 ;; *************** function _RB6_ISR *****************
  8863 ;; Defined at:
  8864 ;;		line 446 in file "MCAL_layer/interrupt/external_interrupt.c"
  8865 ;; Parameters:    Size  Location     Type
  8866 ;;		None
  8867 ;; Auto vars:     Size  Location     Type
  8868 ;;		None
  8869 ;; Return value:  Size  Location     Type
  8870 ;;                  1    wreg      void 
  8871 ;; Registers used:
  8872 ;;		None
  8873 ;; Tracked objects:
  8874 ;;		On entry : 0/0
  8875 ;;		On exit  : 0/0
  8876 ;;		Unchanged: 0/0
  8877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8881 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8882 ;;Total ram usage:        0 bytes
  8883 ;; Hardware stack levels used: 1
  8884 ;; This function calls:
  8885 ;;		Nothing
  8886 ;; This function is called by:
  8887 ;;		_interrupt_high
  8888 ;; This function uses a non-reentrant model
  8889 ;;
  8890                           
  8891                           	psect	text44
  8892   004578                     __ptext44:
  8893                           	callstack 0
  8894   004578                     _RB6_ISR:
  8895                           	callstack 21
  8896   004578                     
  8897                           ;MCAL_layer/interrupt/external_interrupt.c: 448:     (INTCONbits.RBIF=0);
  8898   004578  90F2               	bcf	242,0,c	;volatile
  8899   00457A  0012               	return		;funcret
  8900   00457C                     __end_of_RB6_ISR:
  8901                           	callstack 0
  8902                           
  8903 ;; *************** function _RB5_ISR2 *****************
  8904 ;; Defined at:
  8905 ;;		line 432 in file "MCAL_layer/interrupt/external_interrupt.c"
  8906 ;; Parameters:    Size  Location     Type
  8907 ;;		None
  8908 ;; Auto vars:     Size  Location     Type
  8909 ;;		None
  8910 ;; Return value:  Size  Location     Type
  8911 ;;                  1    wreg      void 
  8912 ;; Registers used:
  8913 ;;		None
  8914 ;; Tracked objects:
  8915 ;;		On entry : 0/0
  8916 ;;		On exit  : 0/0
  8917 ;;		Unchanged: 0/0
  8918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8919 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8920 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8921 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8922 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8923 ;;Total ram usage:        0 bytes
  8924 ;; Hardware stack levels used: 1
  8925 ;; This function calls:
  8926 ;;		Nothing
  8927 ;; This function is called by:
  8928 ;;		_interrupt_high
  8929 ;; This function uses a non-reentrant model
  8930 ;;
  8931                           
  8932                           	psect	text45
  8933   00457C                     __ptext45:
  8934                           	callstack 0
  8935   00457C                     _RB5_ISR2:
  8936                           	callstack 21
  8937   00457C                     
  8938                           ;MCAL_layer/interrupt/external_interrupt.c: 434:     (INTCONbits.RBIF=0);
  8939   00457C  90F2               	bcf	242,0,c	;volatile
  8940   00457E  0012               	return		;funcret
  8941   004580                     __end_of_RB5_ISR2:
  8942                           	callstack 0
  8943                           
  8944 ;; *************** function _RB5_ISR *****************
  8945 ;; Defined at:
  8946 ;;		line 420 in file "MCAL_layer/interrupt/external_interrupt.c"
  8947 ;; Parameters:    Size  Location     Type
  8948 ;;		None
  8949 ;; Auto vars:     Size  Location     Type
  8950 ;;		None
  8951 ;; Return value:  Size  Location     Type
  8952 ;;                  1    wreg      void 
  8953 ;; Registers used:
  8954 ;;		None
  8955 ;; Tracked objects:
  8956 ;;		On entry : 0/0
  8957 ;;		On exit  : 0/0
  8958 ;;		Unchanged: 0/0
  8959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8960 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8963 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8964 ;;Total ram usage:        0 bytes
  8965 ;; Hardware stack levels used: 1
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_interrupt_high
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text46
  8974   004580                     __ptext46:
  8975                           	callstack 0
  8976   004580                     _RB5_ISR:
  8977                           	callstack 21
  8978   004580                     
  8979                           ;MCAL_layer/interrupt/external_interrupt.c: 422:     (INTCONbits.RBIF=0);
  8980   004580  90F2               	bcf	242,0,c	;volatile
  8981   004582  0012               	return		;funcret
  8982   004584                     __end_of_RB5_ISR:
  8983                           	callstack 0
  8984                           
  8985 ;; *************** function _RB4_ISR2 *****************
  8986 ;; Defined at:
  8987 ;;		line 406 in file "MCAL_layer/interrupt/external_interrupt.c"
  8988 ;; Parameters:    Size  Location     Type
  8989 ;;		None
  8990 ;; Auto vars:     Size  Location     Type
  8991 ;;		None
  8992 ;; Return value:  Size  Location     Type
  8993 ;;                  1    wreg      void 
  8994 ;; Registers used:
  8995 ;;		None
  8996 ;; Tracked objects:
  8997 ;;		On entry : 0/0
  8998 ;;		On exit  : 0/0
  8999 ;;		Unchanged: 0/0
  9000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9005 ;;Total ram usage:        0 bytes
  9006 ;; Hardware stack levels used: 1
  9007 ;; This function calls:
  9008 ;;		Nothing
  9009 ;; This function is called by:
  9010 ;;		_interrupt_high
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           	psect	text47
  9015   004584                     __ptext47:
  9016                           	callstack 0
  9017   004584                     _RB4_ISR2:
  9018                           	callstack 21
  9019   004584                     
  9020                           ;MCAL_layer/interrupt/external_interrupt.c: 408:     (INTCONbits.RBIF=0);
  9021   004584  90F2               	bcf	242,0,c	;volatile
  9022   004586  0012               	return		;funcret
  9023   004588                     __end_of_RB4_ISR2:
  9024                           	callstack 0
  9025                           
  9026 ;; *************** function _RB4_ISR *****************
  9027 ;; Defined at:
  9028 ;;		line 394 in file "MCAL_layer/interrupt/external_interrupt.c"
  9029 ;; Parameters:    Size  Location     Type
  9030 ;;		None
  9031 ;; Auto vars:     Size  Location     Type
  9032 ;;		None
  9033 ;; Return value:  Size  Location     Type
  9034 ;;                  1    wreg      void 
  9035 ;; Registers used:
  9036 ;;		None
  9037 ;; Tracked objects:
  9038 ;;		On entry : 0/0
  9039 ;;		On exit  : 0/0
  9040 ;;		Unchanged: 0/0
  9041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9042 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9043 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9044 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9045 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9046 ;;Total ram usage:        0 bytes
  9047 ;; Hardware stack levels used: 1
  9048 ;; This function calls:
  9049 ;;		Nothing
  9050 ;; This function is called by:
  9051 ;;		_interrupt_high
  9052 ;; This function uses a non-reentrant model
  9053 ;;
  9054                           
  9055                           	psect	text48
  9056   004588                     __ptext48:
  9057                           	callstack 0
  9058   004588                     _RB4_ISR:
  9059                           	callstack 21
  9060   004588                     
  9061                           ;MCAL_layer/interrupt/external_interrupt.c: 396:     (INTCONbits.RBIF=0);
  9062   004588  90F2               	bcf	242,0,c	;volatile
  9063   00458A  0012               	return		;funcret
  9064   00458C                     __end_of_RB4_ISR:
  9065                           	callstack 0
  9066                           
  9067 ;; *************** function _INT0_ISR *****************
  9068 ;; Defined at:
  9069 ;;		line 364 in file "MCAL_layer/interrupt/external_interrupt.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;		None
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  ret             1    0        unsigned char 
  9074 ;; Return value:  Size  Location     Type
  9075 ;;                  1    wreg      void 
  9076 ;; Registers used:
  9077 ;;		None
  9078 ;; Tracked objects:
  9079 ;;		On entry : 0/0
  9080 ;;		On exit  : 0/0
  9081 ;;		Unchanged: 0/0
  9082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9087 ;;Total ram usage:        0 bytes
  9088 ;; Hardware stack levels used: 1
  9089 ;; This function calls:
  9090 ;;		Nothing
  9091 ;; This function is called by:
  9092 ;;		_interrupt_high
  9093 ;; This function uses a non-reentrant model
  9094 ;;
  9095                           
  9096                           	psect	text49
  9097   00458C                     __ptext49:
  9098                           	callstack 0
  9099   00458C                     _INT0_ISR:
  9100                           	callstack 21
  9101   00458C  92F2               	bcf	242,1,c	;volatile
  9102   00458E  0012               	return		;funcret
  9103   004590                     __end_of_INT0_ISR:
  9104                           	callstack 0
  9105                           
  9106                           	psect	rparam
  9107   000000                     
  9108                           	psect	temp
  9109   00007E                     btemp:
  9110                           	callstack 0
  9111   00007E                     	ds	1
  9112   000000                     int$flags	set	btemp
  9113   000000                     wtemp8	set	btemp+1
  9114   000000                     ttemp5	set	btemp+1
  9115   000000                     ttemp6	set	btemp+4
  9116   000000                     ttemp7	set	btemp+8
  9117                           
  9118                           	psect	config
  9119                           
  9120                           ; Padding undefined space
  9121   300000                     	org	3145728
  9122   300000  FF                 	db	255
  9123                           
  9124                           ;Config register CONFIG1H @ 0x300001
  9125                           ;	Oscillator Selection bits
  9126                           ;	OSC = INTIO67, Internal oscillator block, port function on RA6 and RA7
  9127                           ;	Fail-Safe Clock Monitor Enable bit
  9128                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
  9129                           ;	Internal/External Oscillator Switchover bit
  9130                           ;	IESO = OFF, Oscillator Switchover mode disabled
  9131   300001                     	org	3145729
  9132   300001  08                 	db	8
  9133                           
  9134                           ;Config register CONFIG2L @ 0x300002
  9135                           ;	Power-up Timer Enable bit
  9136                           ;	PWRT = OFF, PWRT disabled
  9137                           ;	Brown-out Reset Enable bits
  9138                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
  9139                           ;	Brown Out Reset Voltage bits
  9140                           ;	BORV = 1, 
  9141   300002                     	org	3145730
  9142   300002  09                 	db	9
  9143                           
  9144                           ;Config register CONFIG2H @ 0x300003
  9145                           ;	Watchdog Timer Enable bit
  9146                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  9147                           ;	Watchdog Timer Postscale Select bits
  9148                           ;	WDTPS = 32768, 1:32768
  9149   300003                     	org	3145731
  9150   300003  1E                 	db	30
  9151                           
  9152                           ; Padding undefined space
  9153   300004                     	org	3145732
  9154   300004  FF                 	db	255
  9155                           
  9156                           ;Config register CONFIG3H @ 0x300005
  9157                           ;	CCP2 MUX bit
  9158                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
  9159                           ;	PORTB A/D Enable bit
  9160                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
  9161                           ;	Low-Power Timer1 Oscillator Enable bit
  9162                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
  9163                           ;	MCLR Pin Enable bit
  9164                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
  9165   300005                     	org	3145733
  9166   300005  81                 	db	129
  9167                           
  9168                           ;Config register CONFIG4L @ 0x300006
  9169                           ;	Stack Full/Underflow Reset Enable bit
  9170                           ;	STVREN = ON, Stack full/underflow will cause Reset
  9171                           ;	Single-Supply ICSP Enable bit
  9172                           ;	LVP = OFF, Single-Supply ICSP disabled
  9173                           ;	Extended Instruction Set Enable bit
  9174                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
  9175                           ;	Background Debugger Enable bit
  9176                           ;	DEBUG = 0x1, unprogrammed default
  9177   300006                     	org	3145734
  9178   300006  81                 	db	129
  9179                           
  9180                           ; Padding undefined space
  9181   300007                     	org	3145735
  9182   300007  FF                 	db	255
  9183                           
  9184                           ;Config register CONFIG5L @ 0x300008
  9185                           ;	Code Protection bit
  9186                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
  9187                           ;	Code Protection bit
  9188                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
  9189                           ;	Code Protection bit
  9190                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
  9191                           ;	Code Protection bit
  9192                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
  9193   300008                     	org	3145736
  9194   300008  0F                 	db	15
  9195                           
  9196                           ;Config register CONFIG5H @ 0x300009
  9197                           ;	Boot Block Code Protection bit
  9198                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
  9199                           ;	Data EEPROM Code Protection bit
  9200                           ;	CPD = OFF, Data EEPROM not code-protected
  9201   300009                     	org	3145737
  9202   300009  C0                 	db	192
  9203                           
  9204                           ;Config register CONFIG6L @ 0x30000A
  9205                           ;	Write Protection bit
  9206                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
  9207                           ;	Write Protection bit
  9208                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
  9209                           ;	Write Protection bit
  9210                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
  9211                           ;	Write Protection bit
  9212                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
  9213   30000A                     	org	3145738
  9214   30000A  0F                 	db	15
  9215                           
  9216                           ;Config register CONFIG6H @ 0x30000B
  9217                           ;	Configuration Register Write Protection bit
  9218                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
  9219                           ;	Boot Block Write Protection bit
  9220                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
  9221                           ;	Data EEPROM Write Protection bit
  9222                           ;	WRTD = OFF, Data EEPROM not write-protected
  9223   30000B                     	org	3145739
  9224   30000B  E0                 	db	224
  9225                           
  9226                           ;Config register CONFIG7L @ 0x30000C
  9227                           ;	Table Read Protection bit
  9228                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
  9229                           ;	Table Read Protection bit
  9230                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
  9231                           ;	Table Read Protection bit
  9232                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
  9233                           ;	Table Read Protection bit
  9234                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
  9235   30000C                     	org	3145740
  9236   30000C  0F                 	db	15
  9237                           
  9238                           ;Config register CONFIG7H @ 0x30000D
  9239                           ;	Boot Block Table Read Protection bit
  9240                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
  9241   30000D                     	org	3145741
  9242   30000D  40                 	db	64
  9243                           tosu	equ	0xFFF
  9244                           tosh	equ	0xFFE
  9245                           tosl	equ	0xFFD
  9246                           stkptr	equ	0xFFC
  9247                           pclatu	equ	0xFFB
  9248                           pclath	equ	0xFFA
  9249                           pcl	equ	0xFF9
  9250                           tblptru	equ	0xFF8
  9251                           tblptrh	equ	0xFF7
  9252                           tblptrl	equ	0xFF6
  9253                           tablat	equ	0xFF5
  9254                           prodh	equ	0xFF4
  9255                           prodl	equ	0xFF3
  9256                           indf0	equ	0xFEF
  9257                           postinc0	equ	0xFEE
  9258                           postdec0	equ	0xFED
  9259                           preinc0	equ	0xFEC
  9260                           plusw0	equ	0xFEB
  9261                           fsr0h	equ	0xFEA
  9262                           fsr0l	equ	0xFE9
  9263                           wreg	equ	0xFE8
  9264                           indf1	equ	0xFE7
  9265                           postinc1	equ	0xFE6
  9266                           postdec1	equ	0xFE5
  9267                           preinc1	equ	0xFE4
  9268                           plusw1	equ	0xFE3
  9269                           fsr1h	equ	0xFE2
  9270                           fsr1l	equ	0xFE1
  9271                           bsr	equ	0xFE0
  9272                           indf2	equ	0xFDF
  9273                           postinc2	equ	0xFDE
  9274                           postdec2	equ	0xFDD
  9275                           preinc2	equ	0xFDC
  9276                           plusw2	equ	0xFDB
  9277                           fsr2h	equ	0xFDA
  9278                           fsr2l	equ	0xFD9
  9279                           status	equ	0xFD8

Data Sizes:
    Strings     3
    Constant    0
    Data        48
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126    117     125
    BANK0           128      0      72
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    vfprintf$2	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf$1	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_3(CODE[3]), STR_2(CODE[3]), STR_1(CODE[3]), 

    vfprintf$0	PTR struct _IO_FILE size(2) Largest target is 12
		 -> sprintf@f(COMRAM[12]), 

    S2491$source	PTR const unsigned char  size(2) Largest target is 0

    f...source	PTR const unsigned char  size(2) Largest target is 0

    S2491$buffer	PTR unsigned char  size(2) Largest target is 0

    f...buffer	PTR unsigned char  size(2) Largest target is 0

    Calculate_digits@x_2	PTR unsigned int  size(2) Largest target is 2
		 -> main@x_2(COMRAM[2]), 

    Calculate_digits@x_1	PTR unsigned int  size(2) Largest target is 2
		 -> main@x_1(COMRAM[2]), 

    Calculate_digits@x0	PTR unsigned int  size(2) Largest target is 2
		 -> main@x0(COMRAM[2]), 

    Calculate_digits@x1	PTR unsigned int  size(2) Largest target is 2
		 -> main@x1(COMRAM[2]), 

    Calculate_digits@x2	PTR unsigned int  size(2) Largest target is 2
		 -> main@x2(COMRAM[2]), 

    Display_Resistance@My_lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(BANK0[6]), 

    Display_Current@My_lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(BANK0[6]), 

    Display_volt@My_lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(BANK0[6]), 

    ADC_Pin.ADC_INTER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    rb7_call_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    rb7_call_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    rb6_call_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    rb6_call_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    rb5_call_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    rb5_call_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    rb4_call_low	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    rb4_call_high	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S1078$EXT_LOW	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_RBX_INIT@my_int.EXT_LOW	PTR FTN()void  size(2) Largest target is 0

    S1078$EXT_HIGH	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_RBX_INIT@my_int.EXT_HIGH	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_CLEAR_FLAG@my_int.EXT	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTX_PRIORITY_INIT@my_int.EXT	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTX_EDGE_INIT@my_int.EXT	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTX_PIN_INIT@my_int.EXT	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTX_DISABLE@my_int.EXT	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTX_ENABLE@my_int.EXT	PTR FTN()void  size(2) Largest target is 0

    int2_call	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    int1_call	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S913$EXT	PTR FTN()void  size(2) Largest target is 0

    INTERRUPT_INTX_call_back@my_int.EXT	PTR FTN()void  size(2) Largest target is 0

    int0_call	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    gio_pin_init@my_config	PTR struct . size(2) Largest target is 6
		 -> lcd.lcd_pins(BANK0[4]), lcd(BANK0[6]), 

    gio_pin_write_logic@my_config	PTR struct . size(2) Largest target is 6
		 -> lcd.lcd_pins(BANK0[4]), lcd(BANK0[6]), 

    gio_pin_write_direction@my_config	PTR struct . size(2) Largest target is 6
		 -> lcd.lcd_pins(BANK0[4]), lcd(BANK0[6]), 

    PORT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTE(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), 
		 -> PORTA(BITBIGSFRll[1]), 

    LAT_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATE(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATB(BITBIGSFRlh[1]), 
		 -> LATA(BITBIGSFRll[1]), 

    TRIS_REG	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISD(ABS[1]), TRISC(ABS[1]), TRISB(ABS[1]), TRISE(ABS[1]), 
		 -> TRISA(BITBIGSFRll[1]), 

    adc_get_result@my_adc.ADC_INTER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_get_result@myres	PTR unsigned short  size(2) Largest target is 2
		 -> ADC_Val(COMRAM[2]), 

    adc_get_result@my_adc	PTR struct . size(2) Largest target is 8
		 -> ADC_Pin(BANK0[8]), 

    adc_start_conv@my_adc	PTR struct . size(2) Largest target is 8
		 -> ADC_Pin(BANK0[8]), 

    adc_call	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    S325$ADC_INTER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_init@my_adc.ADC_INTER	PTR FTN()void  size(2) Largest target is 1
		 -> NULL(), 

    adc_init@my_adc	PTR struct . size(2) Largest target is 8
		 -> ADC_Pin(BANK0[8]), 

    sp__memset	PTR void  size(2) Largest target is 0

    lcd_4bit_sned_character_at_pos@my_lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_4bit_sned_command@my_lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_4bit_sned_character@my_lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_4bit_initilization@my_lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(BANK0[6]), 

    lcd_4bit_sned_enable@my_lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(BANK0[6]), 

    set_cursor_4@my_lcd	PTR struct . size(2) Largest target is 6
		 -> lcd(BANK0[6]), 


Critical Paths under _main in COMRAM

    _main->_Calculate_digits
    _lcd_4bit_initilization->_lcd_4bit_sned_command
    _gio_pin_init->_gio_pin_write_direction
    _gio_pin_init->_gio_pin_write_logic
    _adc_init->_adc_input_pin
    _Display_volt->_lcd_4bit_sned_character_at_pos
    _Display_Resistance->_lcd_4bit_sned_character_at_pos
    _Display_Current->_lcd_4bit_sned_character_at_pos
    _lcd_4bit_sned_character_at_pos->_set_cursor_4
    _set_cursor_4->_lcd_4bit_sned_command
    _lcd_4bit_sned_command->_lcd_4bit_sned_enable
    _lcd_4bit_sned_character->_lcd_4bit_sned_enable
    _lcd_4bit_sned_enable->_gio_pin_write_logic
    _Calculate_digits->___fltol
    ___xxtofl->___wmul
    ___fltol->___fldiv
    ___flsub->___flmul
    ___fldiv->___flsub

Critical Paths under _interrupt_low in COMRAM

    None.

Critical Paths under _interrupt_high in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _interrupt_low in BANK0

    None.

Critical Paths under _interrupt_high in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _interrupt_low in BANK1

    None.

Critical Paths under _interrupt_high in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _interrupt_low in BANK2

    None.

Critical Paths under _interrupt_high in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _interrupt_low in BANK3

    None.

Critical Paths under _interrupt_high in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _interrupt_low in BANK4

    None.

Critical Paths under _interrupt_high in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _interrupt_low in BANK5

    None.

Critical Paths under _interrupt_high in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _interrupt_low in BANK6

    None.

Critical Paths under _interrupt_high in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _interrupt_low in BANK7

    None.

Critical Paths under _interrupt_high in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _interrupt_low in BANK8

    None.

Critical Paths under _interrupt_high in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _interrupt_low in BANK9

    None.

Critical Paths under _interrupt_high in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _interrupt_low in BANK10

    None.

Critical Paths under _interrupt_high in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _interrupt_low in BANK11

    None.

Critical Paths under _interrupt_high in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _interrupt_low in BANK12

    None.

Critical Paths under _interrupt_high in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _interrupt_low in BANK13

    None.

Critical Paths under _interrupt_high in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _interrupt_low in BANK14

    None.

Critical Paths under _interrupt_high in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _interrupt_low in BANK15

    None.

Critical Paths under _interrupt_high in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                22    22      0  151109
                                             95 COMRAM    22    22      0
               _AC_Current_selection
        _AC_Volt_Up_to_200_selection
         _AC_Volt_Up_to_50_selection
          _AC_Volt_Up_to_5_selection
                   _Calculate_digits
               _DC_Current_selection
        _DC_Volt_Up_to_200_selection
         _DC_Volt_Up_to_50_selection
          _DC_Volt_Up_to_5_selection
                    _Display_Current
                 _Display_Resistance
                       _Display_volt
     _Resistance_Up_to_10k_selection
      _Resistance_Up_to_1M_selection
                            ___fldiv
                            ___flmul
                            ___flsub
                             ___wmul
                           ___xxtofl
                     _adc_get_result
                           _adc_init
                     _adc_start_conv
                        _config_pins
             _lcd_4bit_initilization
 ---------------------------------------------------------------------------------
 (1) _lcd_4bit_initilization                               7     5      2   14097
                                             26 COMRAM     7     5      2
                       _gio_pin_init
              _lcd_4bit_sned_command
 ---------------------------------------------------------------------------------
 (2) _gio_pin_init                                         4     2      2    4470
                                             11 COMRAM     4     2      2
            _gio_pin_write_direction
                _gio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gio_pin_write_direction                             10     7      3     701
                                              1 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _config_pins                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_start_conv                                       3     1      2     943
                                              1 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             4     2      2     307
                                              4 COMRAM     3     1      2
                      _adc_input_pin
 ---------------------------------------------------------------------------------
 (2) _adc_input_pin                                        3     3      0      22
                                              1 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_get_result                                       8     4      4    1791
                                              1 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Resistance_Up_to_1M_selection                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Resistance_Up_to_10k_selection                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Display_volt                                        12     0     12   30187
                                             39 COMRAM    12     0     12
     _lcd_4bit_sned_character_at_pos
 ---------------------------------------------------------------------------------
 (1) _Display_Resistance                                  12     0     12   28363
                                             39 COMRAM    12     0     12
     _lcd_4bit_sned_character_at_pos
 ---------------------------------------------------------------------------------
 (1) _Display_Current                                     12     0     12   28363
                                             39 COMRAM    12     0     12
     _lcd_4bit_sned_character_at_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_sned_character_at_pos                       6     1      5   27121
                                             33 COMRAM     6     1      5
            _lcd_4bit_sned_character
                       _set_cursor_4
 ---------------------------------------------------------------------------------
 (3) _set_cursor_4                                         7     3      4    9882
                                             26 COMRAM     7     3      4
              _lcd_4bit_sned_command
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_sned_command                               12     9      3    9177
                                             14 COMRAM    12     9      3
                _gio_pin_write_logic
               _lcd_4bit_sned_enable
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_sned_character                             12     9      3    7657
                                             14 COMRAM    12     9      3
                _gio_pin_write_logic
               _lcd_4bit_sned_enable
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_sned_enable                                 3     1      2    3530
                                             11 COMRAM     3     1      2
                _gio_pin_write_logic
 ---------------------------------------------------------------------------------
 (4) _gio_pin_write_logic                                 10     7      3    3133
                                              1 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (1) _DC_Volt_Up_to_5_selection                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DC_Volt_Up_to_50_selection                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DC_Volt_Up_to_200_selection                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _DC_Current_selection                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Calculate_digits                                    26    12     14   24868
                                             69 COMRAM    26    12     14
                            ___fldiv
                            ___flmul
                            ___flsub
                            ___fltol
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4    1842
                                              7 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4    3799
                                              1 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             10     6      4     609
                                             59 COMRAM    10     6      4
                            ___fldiv (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flsub                                              8     0      8    4257
                                             26 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8    2262
                                              1 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             25    17      8    5392
                                              1 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             25    17      8    3831
                                             34 COMRAM    25    17      8
                            ___flmul (ARG)
                            ___flsub (ARG)
                             ___wmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _AC_Volt_Up_to_5_selection                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AC_Volt_Up_to_50_selection                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AC_Volt_Up_to_200_selection                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AC_Current_selection                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _interrupt_low                                        1     1      0       2
                                              0 COMRAM     1     1      0
                           _INT1_ISR
                           _INT2_ISR
 ---------------------------------------------------------------------------------
 (8) _INT2_ISR                                             1     1      0       1
 ---------------------------------------------------------------------------------
 (8) _INT1_ISR                                             1     1      0       1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _interrupt_high                                       0     0      0       1
                           _INT0_ISR
                            _RB4_ISR
                           _RB4_ISR2
                            _RB5_ISR
                           _RB5_ISR2
                            _RB6_ISR
                           _RB6_ISR2
                            _RB7_ISR
                           _RB7_ISR2
                            _adc_isr
 ---------------------------------------------------------------------------------
 (10) _adc_isr                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _RB7_ISR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _RB7_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _RB6_ISR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _RB6_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _RB5_ISR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _RB5_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _RB4_ISR2                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _RB4_ISR                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _INT0_ISR                                            1     1      0       1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AC_Current_selection
   _AC_Volt_Up_to_200_selection
   _AC_Volt_Up_to_50_selection
   _AC_Volt_Up_to_5_selection
   _Calculate_digits
     ___fldiv
       ___flmul (ARG)
       ___flsub (ARG)
         ___fladd
         ___flmul (ARG)
         ___wmul (ARG)
         ___xxtofl (ARG)
           ___wmul (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___flmul
     ___flsub
     ___fltol
       ___fldiv (ARG)
       ___flmul (ARG)
       ___flsub (ARG)
       ___wmul (ARG)
       ___xxtofl (ARG)
     ___wmul
     ___xxtofl
   _DC_Current_selection
   _DC_Volt_Up_to_200_selection
   _DC_Volt_Up_to_50_selection
   _DC_Volt_Up_to_5_selection
   _Display_Current
     _lcd_4bit_sned_character_at_pos
       _lcd_4bit_sned_character
         _gio_pin_write_logic
         _lcd_4bit_sned_enable
           _gio_pin_write_logic
       _set_cursor_4
         _lcd_4bit_sned_command
           _gio_pin_write_logic
           _lcd_4bit_sned_enable
   _Display_Resistance
     _lcd_4bit_sned_character_at_pos
   _Display_volt
     _lcd_4bit_sned_character_at_pos
   _Resistance_Up_to_10k_selection
   _Resistance_Up_to_1M_selection
   ___fldiv
   ___flmul
   ___flsub
   ___wmul
   ___xxtofl
   _adc_get_result
   _adc_init
     _adc_input_pin
   _adc_start_conv
   _config_pins
   _lcd_4bit_initilization
     _gio_pin_init
       _gio_pin_write_direction
       _gio_pin_write_logic
     _lcd_4bit_sned_command

 _interrupt_low (ROOT)
   _INT1_ISR
   _INT2_ISR

 _interrupt_high (ROOT)
   _INT0_ISR
   _RB4_ISR
   _RB4_ISR2
   _RB5_ISR
   _RB5_ISR2
   _RB6_ISR
   _RB6_ISR2
   _RB7_ISR
   _RB7_ISR2
   _adc_isr

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      44        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      33        0.0%
BANK14             100      0       0      34        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0      48       5       56.2%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     75      7D       1       99.2%
BITBIGSFRhhlh       20      0       0      40        0.0%
BITBIGSFRhhhhhl     1F      0       0      38        0.0%
BITBIGSFRhhhhhh      D      0       0      37        0.0%
BITBIGSFRhhhhlh      B      0       0      39        0.0%
BITBIGSFRhhll        6      0       0      41        0.0%
BITBIGSFRlh          4      0       0      42        0.0%
BITBIGSFRll          4      0       0      43        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      C5      12        0.0%
DATA                 0      0      C5       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.41 build 20230208172133 
Symbol Table                                                                                   Mon Apr 08 02:38:44 2024

                         ??_Display_volt 0034                             ___fldiv@aexp 003B  
                           ___fldiv@bexp 003A                             ___fldiv@sign 0033  
             gio_pin_write_direction@ret 000B                    __end_of_interrupt_low 0066  
                                     l41 391A                                       l34 43CC  
                                     l50 3B3E                                       l26 41E0  
       gio_pin_write_direction@my_config 0002                                       l59 3A2C  
                                     bsr 0FE0                      ___wmul@multiplicand 0004  
                        set_cursor_4@ret 0021                          set_cursor_4@row 001D  
         ?_Resistance_Up_to_1M_selection 0001                   __end_of_interrupt_high 337E  
                                    l220 3C4C                                      l118 4412  
                                    l214 3BE8                                      l230 44E6  
                                    l216 3C20                                      l209 411E  
                                    l218 3C46                                      l219 3C4A  
                                    l228 44E4                                      l319 368E  
                                    l248 4282                                      l338 37EC  
                                    l359 431C                                      l740 3F4A  
                                    l734 3E4E                                      l743 24A2  
                                    l752 4528                                      l761 4502  
                                    l737 4046                                      l770 4540  
                                    l746 44CC                                      l755 4534  
                                    l764 4510                                      l749 451C  
                                    l773 455A                                      l758 44F4  
                                    l767 454A                                      l776 4552  
                                    l779 44AA                      _gio_pin_write_logic 3690  
                                    _lcd 00A6                                      prod 0FF3  
                          ?_gio_pin_init 000C                                      wreg 0FE8  
              _AC_Volt_Up_to_5_selection 44E8                             ___flmul@aexp 0013  
                           ___flmul@bexp 0014                             ___flmul@sign 000E  
                           ___flmul@temp 0019                             ___flmul@prod 0015  
                     Display_volt@My_lcd 0028                          __end_of_RB4_ISR 458C  
                        __end_of_RB5_ISR 4584                          __end_of_RB6_ISR 457C  
                        __end_of_RB7_ISR 4574                             ___fltol@exp1 0045  
                                   l1400 2C1E                                     l1410 2D4E  
                                   l1402 2C96                                     l1403 2C84  
                                   l1307 2692                                     l1324 27AC  
                                   l1316 2962                                     l1308 2680  
                                   l1076 3D52                                     l1333 287C  
                                   l1309 2646                                     l1334 286A  
                                   l1361 3126                                     l1441 346C  
                                   l1434 33D4                                     l1363 2F86  
                                   l1372 2FCC                                     l4101 2DE4  
                                   l1349 4458                                     l1437 3530  
                                   l1374 3044                                     l1366 2F4A  
                                   l1375 3032                                     l4111 2E10  
                                   l4103 2DF4                                     l4031 43CE  
                                   l1448 34C8                                     l4201 30B6  
                                   l4113 2E20                                     l4121 2E4A  
                                   l4105 2DFA                                     l1393 2A28  
                                   l4033 43CE                                     l4211 3114  
                                   l4203 30CC                                     l4131 2E8C  
                                   l4123 2E5A                                     l4115 2E30  
                                   l4107 2E00                                     l4035 43E0  
                                   l4051 4060                                     l4043 404A  
                                   l4213 311A                                     l4205 30E6  
                                   l4125 2E70                                     l4117 2E40  
                                   l4109 2E0E                                     l4301 2BD8  
                                   l1397 2D8C                                     l4037 43E8  
                                   l4061 407E                                     l4053 4066  
                                   l4045 404E                                     l4215 311C  
                                   l4207 3102                                     l4151 2F0E  
                                   l4143 2EC4                                     l4127 2E80  
                                   l4135 2EA0                                     l4119 2E42  
                                   l4311 2C2E                                     l4303 2BE6  
                                   l4231 2990                                     l4223 2964  
                                   l4039 4410                                     l4063 4084  
                                   l4055 406C                                     l4047 4054  
                                   l4209 3106                                     l4161 2F54  
                                   l4153 2F16                                     l4145 2EDE  
                                   l4137 2EB0                                     l4129 2E88  
                                   l4313 2C3C                                     l4305 2C04  
                                   l4241 29CC                                     l4233 29A0  
                                   l4225 2970                                     l4081 44A2  
                                   l3521 36E6                                     l3513 3690  
                                   l3601 3A2A                                     l4065 408A  
                                   l4057 4072                                     l4049 405A  
                                   l4073 409C                                     l4171 2FAC  
                                   l4163 2F72                                     l4155 2F26  
                                   l4147 2EEE                                     l4139 2EB0  
                                   l4091 2DAA                                     l4323 2CA6  
                                   l4331 2CEE                                     l4315 2C40  
                                   l4307 2C0E                                     l4251 2A02  
                                   l4243 29D2                                     l4235 29B0  
                                   l4227 297E                                     l4411 33FA  
                                   l4403 3380                                     l3523 36EE  
                                   l3515 3694                                     l4067 4090  
                                   l4059 4078                                     l4181 2FEA  
                                   l4173 2FB2                                     l4165 2F74  
                                   l4157 2F3A                                     l4149 2EFE  
                                   l4093 2DBA                                     l4085 2D8E  
                                   l4341 2D62                                     l4333 2D08  
                                   l4325 2CB2                                     l4317 2C4E  
                                   l4309 2C1C                                     l4253 2A12  
                                   l4245 29E0                                     l4237 29B6  
                                   l4229 2980                                     l4421 3454  
                                   l4405 3390                                     l3525 3746  
                                   l3517 36A6                                     l4069 4096  
                                   l5301 15B2                                     l4191 3054  
                                   l4183 2FEE                                     l4175 2FBC  
                                   l4167 2F84                                     l4159 2F48  
                                   l4095 2DCA                                     l4087 2D9A  
                                   l4343 2D70                                     l4335 2D1C  
                                   l4327 2CC0                                     l4319 2C7C  
                                   l4271 2A94                                     l4263 2A5C  
                                   l4255 2A18                                     l4247 29E2  
                                   l4239 29C6                                     l4079 4486  
                                   l4431 34B8                                     l4423 3456  
                                   l4415 340E                                     l4407 339E  
                                   l3527 3754                                     l3535 37C0  
                                   l3519 36C4                                     l3551 4396  
                                   l3631 4144                                     l3623 4120  
                                   l4511 3B56                                     l5311 1618  
                                   l5303 15E6                                     l5231 1030  
                                   l5223 1006                                     l4193 3060  
                                   l4185 2FFC                                     l4177 2FCA  
                                   l4169 2F96                                     l4097 2DDA  
                                   l4089 2DA8                                     l4345 2D72  
                                   l4337 2D36                                     l4329 2CEA  
                                   l4281 2ADE                                     l4273 2AAC  
                                   l4265 2A68                                     l4257 2A38  
                                   l4249 29F2                                     l3801 25A4  
                                   l4353 4414                                     l4361 3C64  
                                   l4441 3510                                     l4433 34D6  
                                   l4425 3462                                     l4417 3416  
                                   l4409 33E4                                     l3529 37B2  
                                   l3537 37EA                                     l3553 43AA  
                                   l3545 437C                                     l3633 415C  
                                   l3625 4124                                     l4521 3BC2  
                                   l4513 3B68                                     l4505 3B40  
                                   l5401 1DF2                                     l5321 174A  
                                   l5313 1672                                     l5305 15F4  
                                   l5241 10E2                                     l5233 1034  
                                   l5225 1012                                     l4195 306E  
                                   l4187 302A                                     l4179 2FDC  
                                   l4099 2DDC                                     l4339 2D52  
                                   l4347 2D78                                     l4291 2B34  
                                   l4283 2AEE                                     l4275 2AB8  
                                   l4267 2A72                                     l4259 2A48  
                                   l3811 25B8                                     l3803 25A8  
                                   l4355 4424                                     l4371 3CB4  
                                   l4443 351E                                     l4435 34D8  
                                   l4427 349E                                     l4419 3422  
                                   l3555 43B2                                     l3547 437C  
                                   l3571 3946                                     l3563 391C  
                                   l3635 4174                                     l3643 41A4  
                                   l3627 4136                                     l4531 3BFE  
                                   l4523 3BC4                                     l4515 3B88  
                                   l4507 3B40                                     l3731 3588  
                                   l3723 3532                                     l4451 37EE  
                                   l5411 1E7E                                     l5403 1E00  
                                   l5331 17B0                                     l5315 16A6  
                                   l5307 15F8                                     l5323 177E  
                                   l5251 1198                                     l5243 1116  
                                   l5235 1040                                     l5227 101E  
                                   l4701 44F6                                     l4197 3098  
                                   l4349 2D7C                                     l4293 2B50  
                                   l4285 2AFA                                     l4277 2AC4  
                                   l4269 2A88                                     l3901 27FE  
                                   l3821 25CC                                     l3813 25BC  
                                   l3805 25AC                                     l4381 3CDE  
                                   l4373 3CB8                                     l4365 3C78  
                                   l4445 3520                                     l4437 34DC  
                                   l4429 34AA                                     l3557 43C6  
                                   l3549 438E                                     l3661 3A58  
                                   l3653 3A2E                                     l3581 3990  
                                   l3565 391C                                     l3645 41DE  
                                   l3629 413E                                     l4533 3C1A  
                                   l4525 3BE0                                     l4517 3BA2  
                                   l4509 3B52                                     l3733 3590  
                                   l3725 3536                                     l4453 3800  
                                   l5413 1EFA                                     l5405 1E04  
                                   l5341 18E2                                     l5333 180A  
                                   l5325 178C                                     l5317 16DA  
                                   l5309 1604                                     l5261 127A  
                                   l5253 11A4                                     l5245 1152  
                                   l5237 1054                                     l5229 1022  
                                   l4703 4504                                     l4199 309C  
                                   l4295 2B5C                                     l4287 2B0A  
                                   l4279 2AD2                                     l3911 282A  
                                   l3903 2800                                     l3831 25E0  
                                   l3823 25D0                                     l3815 25C0  
                                   l3807 25B0                                     l4391 3D06  
                                   l4383 3CE8                                     l4375 3CC6  
                                   l4367 3CA2                                     l4359 3C4E  
                                   l4439 3500                                     l3559 43CA  
                                   l3671 3AA2                                     l3655 3A2E  
                                   l3591 39C0                                     l3583 39AC  
                                   l3567 392E                                     l3639 418C  
                                   l4711 4554                                     l4535 3C22  
                                   l4527 3BEC                                     l4519 3BC0  
                                   l3735 35EE                                     l3727 3548  
                                   l4471 3876                                     l4463 382C  
                                   l4455 3804                                     l5415 1F2E  
                                   l5407 1E10                                     l5351 1948  
                                   l5335 183E                                     l5327 1790  
                                   l5343 1916                                     l5319 170E  
                                   l5271 1308                                     l5263 12B6  
                                   l5255 11B8                                     l5239 10AE  
                                   l5247 1186                                     l4297 2B78  
                                   l4289 2B24                                     l3921 2862  
                                   l3905 280E                                     l3913 282C  
                                   l3841 263E                                     l3825 25D4  
                                   l3817 25C4                                     l3809 25B4  
                                   l3833 25E4                                     l3761 24C0  
                                   l4393 3D12                                     l4385 3CF2  
                                   l4369 3CA4                                     l4705 4542  
                                   l5441 37D4                                     l3681 3AD2  
                                   l3673 3ABE                                     l3657 3A40  
                                   l3593 39FA                                     l3585 39B8  
                                   l3577 394E                                     l3569 3936  
                                   l4713 3E50                                     l4537 3C3E  
                                   l4529 3BFC                                     l4561 44E0  
                                   l3737 35FC                                     l3745 3662  
                                   l3729 3566                                     l4481 38CA  
                                   l4473 3886                                     l4465 3848  
                                   l4457 3824                                     l4449 37EE  
                                   l5417 1F6A                                     l5409 1E24  
                                   l5361 1A7A                                     l5353 19A2  
                                   l5345 1924                                     l5337 1872  
                                   l5329 179C                                     l5281 141A  
                                   l5273 131C                                     l5257 1212  
                                   l5249 1194                                     l5265 12EA  
                                   l4299 2BA2                                     l3931 28E0  
                                   l3907 2816                                     l3915 283A  
                                   l3851 2674                                     l3843 2654  
                                   l3835 25E8                                     l3827 25D8  
                                   l3819 25C8                                     l3763 24D0  
                                   l3771 24FA                                     l3755 24A4  
                                   l4395 3D22                                     l3683 3B0C  
                                   l3675 3ACA                                     l3667 3A60  
                                   l3691 3B3C                                     l3659 3A48  
                                   l3595 39FE                                     l3579 398C  
                                   l4707 3F4C                                     l4715 454C  
                                   l4571 41F4                                     l4539 3C4C  
                                   l4563 44E6                                     l5435 3676  
                                   l3739 3654                                     l3747 368C  
                                   l4483 38DA                                     l4475 38A4  
                                   l4467 384C                                     l5371 1AE0  
                                   l5355 19D6                                     l5347 1928  
                                   l5363 1AAE                                     l5339 18A6  
                                   l5291 1480                                     l5275 1376  
                                   l5267 12F8                                     l5283 144E  
                                   l5259 1246                                     l4709 4536  
                                   l3941 2926                                     l3925 288C  
                                   l3933 28E2                                     l3917 283E  
                                   l3909 281A                                     l3861 26C4  
                                   l3853 267E                                     l3845 2660  
                                   l3837 2612                                     l3829 25DC  
                                   l3781 252A                                     l3773 250A  
                                   l3765 24E0                                     l3757 24B0  
                                   l4397 3D32                                     l3685 3B10  
                                   l3669 3A9E                                     l3597 3A1A  
                                   l4581 4282                                     l4573 4206  
                                   l5437 40B0                                     l4557 44CE  
                                   l4485 38EA                                     l4477 38AA  
                                   l4469 3868                                     l5381 1C12  
                                   l5373 1B3A                                     l5365 1ABC  
                                   l5357 1A0A                                     l5349 1934  
                                   l5293 14DA                                     l5285 145C  
                                   l5277 13AA                                     l5269 12FC  
                                   l3951 2950                                     l3943 2934  
                                   l3935 28F2                                     l3927 2898  
                                   l3919 284C                                     l3871 2700  
                                   l3863 26D4                                     l3855 26A0  
                                   l3847 2664                                     l3839 262E  
                                   l3791 256A                                     l3783 2538  
                                   l3775 2510                                     l3767 24F0  
                                   l3759 24BE                                     l4399 3D42  
                                   l4671 1FA6                                     l3687 3B2C  
                                   l3599 3A26                                     l5439 41B8  
                                   l4575 420A                                     l4567 41E2  
                                   l4559 44CE                                     l4487 38FA  
                                   l4479 38BA                                     l5391 1C78  
                                   l5375 1B6E                                     l5367 1AC0  
                                   l5383 1C46                                     l5359 1A3E  
                                   l5295 150E                                     l5287 1460  
                                   l5279 13DE                                     l3953 2952  
                                   l3945 293A                                     l3937 2902  
                                   l3929 28A6                                     l3881 2746  
                                   l3873 270E                                     l3865 26E2  
                                   l3857 26B0                                     l3849 2672  
                                   l3793 256C                                     l3785 253A  
                                   l3777 2522                                     l3769 24F2  
                                   l4681 21E6                                     l4673 1FEE  
                                   l3689 3B38                                     l4577 4226  
                                   l4569 41E2                                     l3961 4296  
                                   l4489 390A                                     l5393 1CD2  
                                   l5385 1C54                                     l5377 1BA2  
                                   l5369 1ACC                                     l5297 1542  
                                   l5289 146C                                     l3947 293C  
                                   l3939 2922                                     l3891 27C2  
                                   l3883 277A                                     l3875 2710  
                                   l3867 26F0                                     l3787 254A  
                                   l3795 2574                                     l3779 2524  
                                   l4691 242C                                     l4683 2248  
                                   l4675 2088                                     l4579 424E  
                                   l4667 44AC                                     l3963 42B4  
                                   l5395 1D4E                                     l5387 1C58  
                                   l5379 1BD6                                     l5299 1576  
                                   l3949 2942                                     l3893 27D2  
                                   l3885 277C                                     l3877 271A  
                                   l3869 26FC                                     l3797 2584  
                                   l3789 255A                                     l4685 22E2  
                                   l4677 20EA                                     l4669 4512  
                                   l4693 3D54                                     l3965 42D6  
                                   l3957 4284                                     l5397 1D82  
                                   l5389 1C64                                     l3887 278C  
                                   l3879 2720                                     l3799 2596  
                                   l4687 2368                                     l4679 2160  
                                   l4695 451E                                     l3967 42DE  
                                   l3959 4284                                     l5399 1DBE  
                                   l3897 27E6                                     l3889 279C  
                                   l4689 23CA                                     l4697 452A  
                                   l3969 431A                                     l4699 44E8  
                                   l3899 27F0                                     STR_1 1001  
                                   u3000 2672                                     u3001 266E  
                                   u3010 2692                                     u3011 268E  
                                   u3100 27D2                                     u3020 26A0  
                                   u3101 27CE                                     u3021 269C  
                                   _LATA 0F89                                     u3110 27FE  
                                   u3030 26B0                                     _LATB 0F8A  
                                   u3111 27FA                                     u3031 26AC  
                                   _LATC 0F8B                                     u3200 28E0  
                                   u3120 280E                                     u3040 26E2  
                                   _LATD 0F8C                                     u3201 28DC  
                                   u3121 280A                                     u3041 26DE  
                                   _LATE 0F8D                                     u3210 28F2  
                                   u3130 282A                                     u3050 26F0  
                                   u4010 44E0                                     u3211 28EE  
                                   u3131 2826                                     u3051 26EC  
                                   u4011 44DC                                     u3220 2902  
                                   u3140 283A                                     u3060 270E  
                                   u4020 41F4                                     u3221 28FE  
                                   u3141 2836                                     u3061 270A  
                                   u4021 41F0                                     u3230 2922  
                                   u3150 284C                                     u3070 2746  
                                   u4030 4206                                     u3231 291E  
                                   u3151 2848                                     u3071 2742  
                                   u4031 4202                                     u3400 2E70  
                                   u3240 2934                                     u3160 2862  
                                   u3080 278C                                     u4040 4226  
                                   u5000 178C                                     _INT0 7C08  
                                   u3401 2E6C                                     u3241 2930  
                                   u3161 285E                                     u3081 2788  
                                   u4041 4222                                     u5001 1788  
                                   _INT1 7C09                                     u3410 2EB0  
                                   u3250 2950                                     u3170 2878  
                                   u3090 27C2                                     u2610 36A6  
                                   u3330 43E0                                     u5010 1924  
                                   _INT2 7C0A                                     u3411 2EAC  
                                   u3251 294C                                     u3171 2874  
                                   u3091 27BE                                     u2611 36A2  
                                   u3331 43DC                                     u5011 1920  
                                   u3500 302A                                     u3420 2F26  
                                   u3340 2DA8                                     u3180 288C  
                                   u2620 36C4                                     u3260 4296  
                                   u5020 1ABC                                     u3501 3026  
                                   u3421 2F22                                     u3341 2DA4  
                                   u3181 2888                                     u2621 36C0  
                                   u3261 4292                                     u5021 1AB8  
                                   u3510 3040                                     u3430 2F48  
                                   u3350 2DBA                                     u3190 28A6  
                                   u2630 36E6                                     u2710 3A1A  
                                   u3270 42B4                                     u5030 1C54  
                                   u3511 303C                                     u3431 2F44  
                                   u3351 2DB6                                     u3191 28A2  
                                   u2631 36E2                                     u2711 3A16  
                                   u4055 4266                                     u3271 42B0  
                                   u5031 1C50                                     u3520 3054  
                                   u3440 2F72                                     u3360 2DCA  
                                   u3600 29E0                                     u2704 39EA  
                                   u3280 42D6                                     u5040 1E00  
                                   u3521 3050                                     u3441 2F6E  
                                   u3361 2DC6                                     u3601 29DC  
                                   u2705 39E6                                     u3281 42D2  
                                   u5041 1DFC                                     u3530 306E  
                                   u3450 2F96                                     u3370 2E0E  
                                   u3610 29F2                                     u2730 4136  
                                   u3531 306A                                     u3451 2F92  
                                   u3371 2E0A                                     u3611 29EE  
                                   u2731 4132                                     u3540 30B6  
                                   u3460 2FAC                                     u3380 2E20  
                                   u3700 2C92                                     u3620 2A02  
                                   u2900 2522                                     u2644 370A  
                                   u2660 438E                                     u2740 3A40  
                                   u2820 3548                                     u3541 30B2  
                                   u3461 2FA8                                     u3381 2E1C  
                                   u3701 2C8E                                     u3621 29FE  
                                   u2901 251E                                     u2645 3706  
                                   u2661 438A                                     u2741 3A3C  
                                   u2821 3544                                     u3550 30E6  
                                   u3470 2FCA                                     u3390 2E30  
                                   u3710 2CA6                                     u3630 2A38  
                                   u2910 2538                                     u2654 3770  
                                   u2670 392E                                     u2830 3566  
                                   u3551 30E2                                     u3471 2FC6  
                                   u3391 2E2C                                     u3711 2CA2  
                                   u3631 2A34                                     u2911 2534  
                                   u2655 376C                                     u2671 392A  
                                   u2831 3562                                     u3560 3114  
                                   u3480 2FEA                                     u3720 2CC0  
                                   u3640 2A48                                     u2920 254A  
                                   u3800 3D02                                     u2760 3ABE  
                                   u2840 3588                                     u3561 3110  
                                   u3481 2FE6                                     u3721 2CBC  
                                   u3641 2A44                                     u2921 2546  
                                   u3801 3CFE                                     u2761 3ABA  
                                   u2841 3584                                     u5057 386E  
                                   u3490 2FFC                                     u3730 2D08  
                                   u3650 2BC2                                     u3570 297E  
                                   u2930 255A                                     u3810 3D22  
                                   u2754 3A8E                                     u2690 39AC  
                                   u3491 2FF8                                     u3731 2D04  
                                   u3571 297A                                     u2931 2556  
                                   u3811 3D1E                                     u2755 3A8A  
                                   u2691 39A8                                     u5067 388C  
                                   u3740 2D36                                     u3660 2C1C  
                                   u3580 2990                                     u2940 2596  
                                   u3820 3D32                                     u3900 34D6  
                                   u2780 3B2C                                     u2684 397C  
                                   u3741 2D32                                     u3661 2C18  
                                   u3581 298C                                     u2941 2592  
                                   u3821 3D2E                                     u3901 34D2  
                                   u2781 3B28                                     u2685 3978  
                                   u5077 38A6                                     u3750 2D70  
                                   u3670 2C3C                                     u3590 29A0  
                                   u2950 25A4                                     u2870 24BE  
                                   u3910 3510                                     u3830 3390  
                                   u2774 3AFC                                     u2854 35AC  
                                   u3751 2D6C                                     u3671 2C38  
                                   u3655 2BB8                                     u3591 299C  
                                   u2951 25A0                                     u2871 24BA  
                                   u3911 350C                                     u3831 338C  
                                   u5087 43AC                                     u2775 3AF8  
                                   u2855 35A8                                     u3680 2C4E  
                                   u2960 2612                                     u2880 24D0  
                                   u3760 3C64                                     u3920 351E  
                                   u3840 339E                                     u2864 3618  
                                   u3681 2C4A                                     u2961 260E  
                                   u2881 24CC                                     u3761 3C60  
                                   u3921 351A                                     u3841 339A  
                                   u2865 3614                                     u3690 2C7C  
                                   u2970 262A                                     u2890 24E0  
                                   u3770 3C98                                     u3850 33FA  
                                   u3930 3800                                     u3691 2C78  
                                   u2971 2624                                     u2891 24DC  
                                   u3851 33F6                                     u3931 37FC  
                                   u2980 262C                                     u3780 3CC6  
                                   u3860 3450                                     u3940 3868  
                                   u3781 3CC2                                     u3861 344C  
                                   u3941 3864                                     u2990 2654  
                                   u3790 3CDA                                     u3870 349A  
                                   u2991 2650                                     u3791 3CD6  
                                   u3775 3C8E                                     u3871 3496  
                                   u3880 34B8                                     u3960 3B52  
                                   u3881 34B4                                     u3961 3B4E  
                        gio_pin_init@ret 000F                                     u3890 34C8  
                                   u3970 3BE0                                     u3891 34C4  
                                   u3971 3BDC                                     u3980 3C1A  
                                   u3981 3C16                                     u3990 3C3E  
                                   u4950 1030                                     u3991 3C3A  
                                   u4951 102C                                     u4960 1194  
                                   u4961 1190                                     u4970 12F8  
                                   u4971 12F4                                     u4980 145C  
                                   u4981 1458                                     u4990 15F4  
                                   u4991 15F0                                     _main 1006  
                                   fsr2h 0FDA                                     indf2 0FDF  
                                   fsr1l 0FE1                                     fsr2l 0FD9  
                                   btemp 007E                _DC_Volt_Up_to_5_selection 4512  
                   ?_gio_pin_write_logic 0002                                     prodh 0FF4  
                                   prodl 0FF3                                     start 0066  
                        ___fldiv@new_exp 0034                             ___param_bank 0000  
                   _lcd_4bit_sned_enable 437C                         __end_of_RB4_ISR2 4588  
                       __end_of_RB5_ISR2 4580                         __end_of_INT0_ISR 4590  
                       __end_of_RB6_ISR2 4578                         __end_of_INT1_ISR 4568  
                       __end_of_INT2_ISR 4564                         __end_of_RB7_ISR2 4570  
               ?_lcd_4bit_sned_character 000F                            ___fltol@sign1 0044  
                        __end_of___fladd 2964                                    ?_main 0001  
                        __end_of___fldiv 3128                          ?_interrupt_high 0001  
                        __end_of___flmul 2D8E                          __end_of___flsub 445A  
                        __end_of___fltol 3D54                          __end_of_adc_isr 456C  
                                  i1l543 4566                                    i1l650 003E  
                                  i1l547 4562                                    i1l653 005E  
                                  i2l271 456A                                    i2l551 458A  
                                  i2l632 3210                                    i2l641 335A  
                                  i2l634 3252                                    i2l539 458E  
                                  i2l555 4586                                    i2l563 457E  
                                  i2l571 4576                                    i2l627 314A  
                                  i2l644 337A                                    i2l636 3294  
                                  i2l629 318C                                    i2l559 4582  
                                  i2l567 457A                                    i2l575 4572  
                                  i2l639 3318                                    i2l579 456E  
                         ??_gio_pin_init 000E                                    _PORTA 0F80  
                                  _PORTB 0F81                                    _PORTC 0F82  
                                  _PORTD 0F83                                    _PORTE 0F84  
                                  _TRISA 0F92                                    _TRISB 0F93  
                                  _TRISC 0F94                                    _TRISD 0F95  
                                  _TRISE 0F96                  lcd_4bit_initilization@i 001F  
                                  main@x 0072                                    tablat 0FF5  
                                  ttemp5 007F                                    ttemp6 0082  
                                  ttemp7 0086             lcd_4bit_sned_command@command 0011  
                                  status 0FD8                    ??_gio_pin_write_logic 0005  
                                  wtemp8 007F                       set_cursor_4@column 001E  
                     set_cursor_4@my_lcd 001B                          __initialization 431E  
       ??_Resistance_Up_to_10k_selection 0002          ?_Resistance_Up_to_10k_selection 0001  
                  ?_lcd_4bit_sned_enable 000C                             __end_of_main 1FA6  
                ?_lcd_4bit_initilization 001B       __end_of_AC_Volt_Up_to_50_selection 4504  
             _AC_Volt_Up_to_50_selection 44F6                    _lcd_4bit_sned_command 391C  
                      Display_Current@x0 002E                        Display_Current@x1 002C  
                      Display_Current@x2 002A                                   ??_main 0060  
                          __activetblptr 0003                                ??_RB4_ISR 0001  
                              ??_RB5_ISR 0001                                ??_RB6_ISR 0001  
                              ??_RB7_ISR 0001                                   _ADRESH 0FC4  
                                 _ADRESL 0FC3                     __end_of_Display_volt 3E50  
                       __end_of_adc_init 3C4E                                   i1l5221 005A  
                                 i1l5213 001E                                   i1l5215 002C  
                                 i1l5217 003A                                   i1l5219 004C  
                                 i1l4631 4560                                   i1l4627 4564  
                                 i2l5201 3334                                   i2l5121 3138  
                                 i2l5211 3376                                   i2l5203 3342  
                                 i2l5131 3184                                   i2l5123 3146  
                                 i2l2557 4568                                   i2l5205 3352  
                                 i2l5141 31C6                                   i2l5133 3188  
                                 i2l5125 3158                                   i2l5207 3356  
                                 i2l5151 31F8                                   i2l5143 31CA  
                                 i2l5135 319A                                   i2l5127 3166  
                                 i2l5119 312A                                   i2l5209 3368  
                                 i2l5161 323A                                   i2l5153 3208  
                                 i2l5137 31A8                                   i2l5145 31CE  
                                 i2l5129 3174                                   i2l5171 327C  
                                 i2l5163 324A                                   i2l5155 320C  
                                 i2l5147 31DC                                   i2l5139 31B6  
                                 i2l5181 32BE                                   i2l5173 328C  
                                 i2l5165 324E                                   i2l5157 321E  
                                 i2l5149 31EA                                   i2l4623 458C  
                                 i2l5191 32F2                                   i2l5183 32CE  
                                 i2l5175 3290                                   i2l5167 3260  
                                 i2l5159 322C                                   i2l5193 3300  
                                 i2l5185 32D2                                   i2l5177 32A2  
                                 i2l5169 326E                                   i2l4635 4588  
                                 i2l4643 4580                                   i2l4651 4578  
                                 i2l5195 3310                                   i2l5179 32B0  
                                 i2l5187 32D6                                   i2l5197 3314  
                                 i2l5189 32E4                                   i2l4639 4584  
                                 i2l4647 457C                                   i2l4655 4574  
                                 i2l4663 456C                                   i2l5199 3326  
                                 i2l4659 4570         lcd_4bit_sned_character@character 0011  
                       __end_of___xxtofl 3532       __end_of_DC_Volt_Up_to_50_selection 452A  
             _DC_Volt_Up_to_50_selection 451E           __end_of_lcd_4bit_initilization 391C  
                              ??___fladd 000A                                   ___wmul 4486  
                              ??___fldiv 002B                                ??___flmul 000A  
                              ??___flsub 0023                                ??___fltol 0040  
                                 _flag_4 007D                                   _flag_5 007C  
                                 _flag_6 007B                                   _flag_7 007A  
                              ??_adc_isr 0001                            _adc_input_pin 4048  
                                 clear_0 4364                                   isa$std 0001  
                           _rb4_call_low 00BE                                   main@x0 006C  
                                 main@x1 006E                                   main@x2 0070  
                           _rb5_call_low 00BA                             __pdataCOMRAM 007A  
                        _Display_Current 3F4C                             __mediumconst 0000  
                                 tblptrh 0FF7                                   tblptrl 0FF6  
                                 tblptru 0FF8                             _rb6_call_low 00B6  
                    adc_get_result@myres 0004                             _rb7_call_low 00B2  
                           ___xxtofl@arg 0012                             ___xxtofl@exp 0011  
                           ___xxtofl@val 0008                               __accesstop 0080  
                __end_of__initialization 4372                                ?_RB4_ISR2 0001  
                              ?_RB5_ISR2 0001                                ?_INT0_ISR 0001  
                              ?_RB6_ISR2 0001                                ?_INT1_ISR 0001  
                              ?_INT2_ISR 0001                                ?_RB7_ISR2 0001  
                          ___rparam_used 0001                               ___fltol@f1 003C  
                   __end_of_gio_pin_init 431E                   ??_lcd_4bit_sned_enable 000E  
                         __pcstackCOMRAM 0001                             __pidataBANK0 445A  
                         ?_adc_input_pin 0001                   ?_lcd_4bit_sned_command 000F  
           convert_short_to_string@F3198 00AC                       Display_Current@x_1 0030  
                     Display_Current@x_2 0032             ?_AC_Volt_Up_to_200_selection 0001  
                             __pbssBANK0 00AC                           adc_init@my_adc 0005  
                             ??_RB4_ISR2 0001                               ??_RB5_ISR2 0001  
                             ??_INT0_ISR 0001                               ??_RB6_ISR2 0001  
                             ??_INT1_ISR 0001                               ??_INT2_ISR 0001  
                             ??_RB7_ISR2 0001                       Calculate_digits@x0 004E  
                     Calculate_digits@x1 004C                       Calculate_digits@x2 004A  
                       _Calculate_digits 1FA6                         ??_interrupt_high 0001  
                                ?___wmul 0002                  __end_of_Display_Current 4048  
                                _ADC_Pin 009E                                  _ADC_Val 0078  
                              ?_adc_init 0005             lcd_4bit_initilization@my_lcd 001B  
                _gio_pin_write_direction 3532                           _adc_get_result 41E2  
                                _RB4_ISR 4588                                  _RB5_ISR 4580  
                                _RB6_ISR 4578                                  _RB7_ISR 4570  
                                _LAT_REG 008A                                ?___xxtofl 0008  
                  Display_Resistance@x_1 0030                    Display_Resistance@x_2 0032  
          ??_AC_Volt_Up_to_200_selection 0002                    Display_Current@My_lcd 0028  
   lcd_4bit_sned_character_at_pos@column 0025               lcd_4bit_sned_character@ret 0016  
                                __Hparam 0000     lcd_4bit_sned_character_at_pos@my_lcd 0022  
                                __Lparam 0000             ?_DC_Volt_Up_to_200_selection 0001  
                        ??_adc_input_pin 0002                            ?_set_cursor_4 001B  
               lcd_4bit_sned_character@i 0017                                  ___fladd 24A4  
                                ___fldiv 2D8E                                  ___flmul 2964  
                                ___flsub 4414                                  ___fltol 3C4E  
                                _adc_isr 4568                             _Display_volt 3D54  
                           __psmallconst 1000                                  __pcinit 431E  
            ?_AC_Volt_Up_to_50_selection 0001                                  __ramtop 1000  
                 __end_of_adc_get_result 4284                               ??_adc_init 0007  
                                __ptext0 1006                                  __ptext1 37EE  
                                __ptext2 4284                                  __ptext3 3532  
                                __ptext4 44AC                                  __ptext5 44CE  
                                __ptext6 3B40                                  __ptext7 4048  
                                __ptext8 41E2                                  __ptext9 454C  
                             ??___xxtofl 000C   __end_of_Resistance_Up_to_10k_selection 455C  
         _Resistance_Up_to_10k_selection 4554                            _rb4_call_high 00C0  
            __end_of_gio_pin_write_logic 37EE                                  main@x_1 006A  
                                main@x_2 0068                           __pintcode_body 3128  
                   end_of_initialization 4372                            _rb5_call_high 00BC  
                                int_func 3128  lcd_4bit_sned_character_at_pos@character 0026  
            ?_DC_Volt_Up_to_50_selection 0001                           ??_set_cursor_4 001F  
                   adc_get_result@my_adc 0002                            _rb6_call_high 00B8  
                                postdec1 0FE5                                  postdec2 0FDD  
                                postinc0 0FEE                                  postinc2 0FDE  
          ??_DC_Volt_Up_to_200_selection 0002                         ?_Display_Current 0028  
                          _interrupt_low 0018                ??_gio_pin_write_direction 0005  
                        ?_adc_get_result 0002                            _rb7_call_high 00B4  
                              _PORTBbits 0F81                                _PORTDbits 0F83  
                            ___fladd@grs 0011                            ___xxtofl@sign 0010  
                           _gio_pin_init 4284                                _TRISAbits 0F92  
                              _TRISBbits 0F93                                _TRISDbits 0F95  
                         _adc_start_conv 44CE                 lcd_4bit_sned_command@ret 0016  
                            ___fldiv@grs 0036                              ___fldiv@rem 002F  
                            ___flmul@grs 000F                            ??_config_pins 0002  
                ??_lcd_4bit_sned_command 0012                           ?_interrupt_low 0001  
                         __end_of___wmul 44AC                            __pidataCOMRAM 455C  
                 __end_of_adc_start_conv 44E8                      start_initialization 431E  
           lcd_4bit_sned_character@i_146 0019              lcd_4bit_sned_command@my_lcd 000F  
                    adc_input_pin@my_pin 0004                  _lcd_4bit_sned_character 3A2E  
               __end_of_Calculate_digits 24A4          __end_of_gio_pin_write_direction 3690  
           gio_pin_write_logic@my_config 0002               __end_of_Display_Resistance 3F4C  
             lcd_4bit_sned_enable@my_lcd 000C             __end_of_AC_Current_selection 4542  
           __end_of_DC_Current_selection 454C                                 ??___wmul 0006  
                            __pdataBANK0 0080                      __end_of_config_pins 44CE  
       ??_lcd_4bit_sned_character_at_pos 0027          ?_lcd_4bit_sned_character_at_pos 0022  
           gio_pin_write_direction@direc 0004                                ___fladd@a 0006  
                              ___fladd@b 0002                                ___fldiv@a 0027  
                              ___fldiv@b 0023                                 ?_RB4_ISR 0001  
                               ?_RB5_ISR 0001                                 ?_RB6_ISR 0001  
                        ?_adc_start_conv 0002                                 ?_RB7_ISR 0001  
                              ___flmul@a 0006                                ___flmul@b 0002  
                            __pbssCOMRAM 0076                                ___flsub@a 001F  
                              ___flsub@b 001B                          Display_volt@x_1 0030  
                        Display_volt@x_2 0032                     __end_of_set_cursor_4 41E2  
                   adc_start_conv@my_adc 0002                 ??_lcd_4bit_initilization 001D  
                              _main$2850 0064                                _main$2851 0060  
             ?_AC_Volt_Up_to_5_selection 0001                        Calculate_digits@x 0046  
                    Calculate_digits@x_1 0050                      Calculate_digits@x_2 0052  
                              __pintcode 0008                          ??_interrupt_low 0001  
                 gio_pin_write_logic@ret 000B                                 ?___fladd 0002  
                               ?___fldiv 0023                                 ?___flmul 0002  
                               ?___flsub 001B                                 ?___fltol 003C  
                               ?_adc_isr 0001                              __pintcodelo 0018  
                              _int0_call 00C6                                _int1_call 00C4  
               gio_pin_write_logic@logic 0004                                _int2_call 00C2  
                   Display_Resistance@x0 002E                     Display_Resistance@x1 002C  
                   Display_Resistance@x2 002A               ?_DC_Volt_Up_to_5_selection 0001  
                            __smallconst 1000                ??_lcd_4bit_sned_character 0012  
                               _RB4_ISR2 4584                                 _RB5_ISR2 457C  
                               _INT0_ISR 458C                                 _RB6_ISR2 4574  
                               _INT1_ISR 4564                                 _INT2_ISR 4560  
                         ___wmul@product 0006                                 _RB7_ISR2 456C  
                               _LATAbits 0F89                                 _LATCbits 0F8B  
        ??_Resistance_Up_to_1M_selection 0002                                 _IPR1bits 0F9F  
                               _PIE1bits 0F9D                  lcd_4bit_sned_enable@ret 000E  
                               i1u491_20 002C                                 i1u491_21 0028  
                               i1u492_20 003A                                 i1u492_21 0036  
                               i1u493_20 004C                                 i1u493_21 0048  
                               i1u494_20 005A                                 i1u494_21 0056  
                               _PIR1bits 0F9E                                 i2u460_40 3184  
                               i2u460_41 3180                              _config_pins 44AC  
                               i2u461_40 319A                                 i2u461_41 3196  
                               i2u470_40 322C                                 i2u462_40 31A8  
                               i2u470_41 3228                                 i2u462_41 31A4  
                               i2u471_40 323A                                 i2u463_40 31B6  
                               i2u455_40 3138                                 i2u471_41 3236  
                               i2u463_41 31B2                                 i2u455_41 3134  
                               i2u480_40 32CE                                 i2u472_40 324A  
                               i2u464_40 31C6                                 i2u456_40 3146  
                               i2u480_41 32CA                                 i2u472_41 3246  
                               i2u464_41 31C2                                 i2u456_41 3142  
                               i2u481_40 32E4                                 i2u473_40 3260  
                               i2u465_40 31DC                                 i2u457_40 3158  
                               i2u481_41 32E0                                 i2u473_41 325C  
                               i2u465_41 31D8                                 i2u457_41 3154  
                               i2u490_40 3376                                 i2u482_40 32F2  
                               i2u474_40 326E                                 i2u466_40 31EA  
                               i2u458_40 3166                                 i2u490_41 3372  
                               i2u482_41 32EE                                 i2u474_41 326A  
                               i2u466_41 31E6                                 i2u458_41 3162  
                               i2u483_40 3300                                 i2u475_40 327C  
                               i2u467_40 31F8                                 i2u459_40 3174  
                               i2u483_41 32FC                                 i2u475_41 3278  
                               i2u467_41 31F4                                 i2u459_41 3170  
                               i2u484_40 3310                                 i2u476_40 328C  
                               i2u468_40 3208                                 i2u484_41 330C  
                               i2u476_41 3288                                 i2u468_41 3204  
                               i2u485_40 3326                                 i2u477_40 32A2  
                               i2u469_40 321E                                 i2u485_41 3322  
                               i2u477_41 329E                                 i2u469_41 321A  
                               i2u486_40 3334                                 i2u478_40 32B0  
                               i2u486_41 3330                                 i2u478_41 32AC  
                               i2u487_40 3342                                 i2u479_40 32BE  
                               i2u487_41 333E                                 i2u479_41 32BA  
                               i2u488_40 3352                                 i2u488_41 334E  
                               i2u489_40 3368                                 i2u489_41 3364  
                               _RCONbits 0FD0        __end_of_AC_Volt_Up_to_5_selection 44F6  
                       ??_adc_get_result 0006            lcd_4bit_sned_character@my_lcd 000F  
                  __end_of_adc_input_pin 4120                                 _PORT_REG 0080  
                  _Calculate_digits$2852 005C                    _Calculate_digits$2853 0058  
                  _Calculate_digits$2854 0054                                 _TRIS_REG 0094  
                             _ADCON0bits 0FC2                               _ADCON1bits 0FC1  
                             _ADCON2bits 0FC0                        ___wmul@multiplier 0002  
      __end_of_DC_Volt_Up_to_5_selection 451E      __end_of_AC_Volt_Up_to_200_selection 4512  
            _AC_Volt_Up_to_200_selection 4504               lcd_4bit_sned_command@i_163 0019  
                            _INTCON2bits 0FF1                              _INTCON3bits 0FF0  
                              copy_data0 4332                                copy_data1 4352  
                   _AC_Current_selection 4536                     _DC_Current_selection 4542  
        __end_of_lcd_4bit_sned_character 3B40                                 __Hrparam 0000  
                               __Lrparam 0000            __end_of_lcd_4bit_sned_command 3A2E  
                         Display_volt@x0 002E                           Display_volt@x1 002C  
                         Display_volt@x2 002A                                 _adc_call 0076  
                               _adc_init 3B40                                 ___xxtofl 337E  
                               __ptext10 4554                                 __ptext11 3D54  
                               __ptext20 4512                                 __ptext12 3E50  
                               __ptext21 451E                                 __ptext13 3F4C  
                               __ptext30 2964                                 __ptext22 452A  
                               __ptext14 43CE                                 __ptext31 2D8E  
                               __ptext23 4542                                 __ptext15 4120  
                               __ptext40 4568                                 __ptext32 44E8  
                               __ptext24 1FA6                                 __ptext16 391C  
                               __ptext41 456C                                 __ptext33 44F6  
                               __ptext25 337E                                 __ptext17 3A2E  
                               __ptext42 4570                                 __ptext34 4504  
                               __ptext26 4486                                 __ptext18 437C  
                               __ptext43 4574                                 __ptext35 4536  
                               __ptext27 3C4E                                 __ptext19 3690  
                               __ptext44 4578                                 __ptext28 4414  
                               __ptext45 457C                                 __ptext37 4560  
                               __ptext29 24A4                                 __ptext46 4580  
                               __ptext38 4564                                 __ptext47 4584  
                               __ptext48 4588                                 __ptext49 458C  
                  ?_AC_Current_selection 0001                        ?_Calculate_digits 0046  
                  ?_DC_Current_selection 0001                       ??_Calculate_digits 0054  
    __end_of_DC_Volt_Up_to_200_selection 4536              _DC_Volt_Up_to_200_selection 452A  
  __end_of_Resistance_Up_to_1M_selection 4554            _Resistance_Up_to_1M_selection 454C  
                               isa$xinst 0000                 ?_gio_pin_write_direction 0002  
                           _set_cursor_4 4120                                 int$flags 007E  
                 lcd_4bit_sned_command@i 0017                         ??_adc_start_conv 0004  
                 _lcd_4bit_initilization 37EE                       _Display_Resistance 3E50  
                             _INTCONbits 0FF2             __end_of_lcd_4bit_sned_enable 43CE  
                    ?_Display_Resistance 0028   __end_of_lcd_4bit_sned_character_at_pos 4414  
         _lcd_4bit_sned_character_at_pos 43CE                                 intlevel1 0000  
                               intlevel2 0000                 Display_Resistance@My_lcd 0028  
      lcd_4bit_sned_character_at_pos@ret 0027        lcd_4bit_sned_character_at_pos@row 0024  
                  gio_pin_init@my_config 000C              ??_AC_Volt_Up_to_5_selection 0002  
                   ??_Display_Resistance 0034                            ?_Display_volt 0028  
           ??_AC_Volt_Up_to_50_selection 0002              ??_DC_Volt_Up_to_5_selection 0002  
                         _interrupt_high 0008                   ??_AC_Current_selection 0002  
                 ??_DC_Current_selection 0002                            ___fladd@signs 000E  
                      ??_Display_Current 0034                             ___fladd@aexp 000F  
                           ___fladd@bexp 0010                             ?_config_pins 0001  
              lcd_4bit_initilization@ret 0021             ??_DC_Volt_Up_to_50_selection 0002  
